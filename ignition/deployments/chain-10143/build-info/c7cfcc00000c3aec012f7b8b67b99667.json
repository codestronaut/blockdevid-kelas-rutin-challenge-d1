{
  "id": "c7cfcc00000c3aec012f7b8b67b99667",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.28",
  "solcLongVersion": "0.8.28+commit.7893614a",
  "input": {
    "language": "Solidity",
    "sources": {
      "@openzeppelin/contracts/access/AccessControl.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
      },
      "@openzeppelin/contracts/access/IAccessControl.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted to signal this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Context} from \"../../../utils/Context.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys a `value` amount of tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 value) public virtual {\n        _burn(_msgSender(), value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, deducting from\n     * the caller's allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `value`.\n     */\n    function burnFrom(address account, uint256 value) public virtual {\n        _spendAllowance(account, _msgSender(), value);\n        _burn(account, value);\n    }\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
      },
      "@openzeppelin/contracts/utils/Pausable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    bool private _paused;\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
      },
      "contracts/CampusCredit.sol": {
        "content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.26;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\nimport \"@openzeppelin/contracts/utils/Pausable.sol\";\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\n\n/**\n * @title CampusCredit\n * @dev ERC-20 token for transaction on campus\n */\ncontract CampusCredit is ERC20, ERC20Burnable, Pausable, AccessControl {\n    // Role Definitions\n    bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\");\n    bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\n\n    // [Feature]: Credits\n    mapping(address => uint256) public dailySpendingLimit;\n    mapping(address => uint256) public lastSpendingReset;\n    mapping(address => uint256) public spentToday;\n\n    // [Feature]: Merchants\n    mapping(address => bool) public isMerchant;\n    mapping(address => string) public merchantName;\n\n    constructor(uint256 _initialSupply) ERC20(\"Campus Credit\", \"CCR\") {\n        _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\n        _grantRole(PAUSER_ROLE, msg.sender);\n        _grantRole(MINTER_ROLE, msg.sender);\n\n        // Initial treasury minting (n CCR).\n        _mint(msg.sender, _initialSupply * 10**decimals());\n    }\n\n    /**\n     * @dev Pause all token transfers\n     * Use case: Emergency / maintenance\n     */\n    function pause() public onlyRole(PAUSER_ROLE) {\n        _pause();\n    }\n\n    function unpause() public onlyRole(PAUSER_ROLE) {\n        _unpause();\n    }\n\n    /**\n     * @dev Mint new tokens.\n     * Use case: Top-up student balance.\n     */\n    function mint(address _to, uint256 _amount) public onlyRole(MINTER_ROLE) {\n        uint256 amount = _amount * 10**decimals();\n\n        // @dev Minting limits (if the student daily spending limit has been set).\n        // Students will receive a number of CCR according to their remaining daily limit.\n        if (dailySpendingLimit[_to] > 0) {\n            require(\n                spentToday[_to] + amount <= dailySpendingLimit[_to],\n                \"Exceeds daily spending limit, can't receive extra CCR.\"\n            );\n        }\n\n        dailySpendingLimit[_to] += amount;\n        _mint(_to, amount);\n    }\n\n    /**\n     * @dev Register merchant.\n     * Use case: Kafetaria, Bookstore, Laundry.\n     */\n    function registerMerchant(address _merchant, string memory _name)\n        public\n        onlyRole(DEFAULT_ADMIN_ROLE)\n    {\n        require(!isMerchant[_merchant], \"Merchant already registered.\");\n        isMerchant[_merchant] = true;\n        merchantName[_merchant] = _name;\n    }\n\n    /**\n     * @dev Set daily spending limit for student.\n     * Use case: Parental control / self-control.\n     */\n    function setDailyLimit(address _student, uint256 _limit)\n        public\n        onlyRole(DEFAULT_ADMIN_ROLE)\n    {\n        uint256 limit = _limit * 10**decimals();\n\n        require(limit > 0, \"Limit should be greater than 0.\");\n        dailySpendingLimit[_student] = limit;\n    }\n\n    /**\n     * @dev Transfer with spending limit check.\n     */\n    function transferWithLimit(address _to, uint256 _amount) public {\n        require(_amount > 0, \"Amount should be greater than 0.\");\n        uint256 amount = _amount * 10**decimals();\n\n        // Ensure the transfer amount not exceed the daily spending limit.\n        require(\n            spentToday[msg.sender] + amount <= dailySpendingLimit[msg.sender],\n            \"Exceeds daily spending limit.\"\n        );\n\n        // Reset today's spending if today is new day.\n        if (block.timestamp > lastSpendingReset[msg.sender] + 1 days) {\n            lastSpendingReset[msg.sender] = block.timestamp;\n            spentToday[msg.sender] = 0;\n        }\n\n        // Update today's spending.\n        spentToday[msg.sender] += amount;\n\n        // Transfer to desired address.\n        bool success = transfer(_to, amount);\n        require(success, \"Transfer failed.\");\n    }\n\n    function _update(\n        address from,\n        address to,\n        uint256 amount\n    ) internal override(ERC20) {\n        require(!paused(), \"Token transfers paused.\");\n        super._update(from, to, amount);\n    }\n\n    /**\n     * @dev Cashback mechanism to encourage usage.\n     */\n    uint256 public cashbackPercentage = 2; // Cashback is set to 2%.\n\n    function transferWithCashback(address _merchant, uint256 _amount) public {\n        require(_amount > 0, \"Amount should be greater than 0.\");\n        \n        // Cashback calculation.\n        uint256 cashback = (_amount * cashbackPercentage) / 100;\n\n        // Transfer to desired address.\n        transferWithLimit(_merchant, _amount - cashback);\n\n        // Get the cashback.\n        _mint(msg.sender, cashback * 10**decimals());\n    }\n}\n"
      }
    },
    "settings": {
      "metadata": {
        "bytecodeHash": "none",
        "useLiteralContent": true
      },
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "evmVersion": "paris",
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "sources": {
      "@openzeppelin/contracts/access/AccessControl.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
          "exportedSymbols": {
            "AccessControl": [
              295
            ],
            "Context": [
              1210
            ],
            "ERC165": [
              1342
            ],
            "IAccessControl": [
              378
            ]
          },
          "id": 296,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "108:24:0"
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
              "file": "./IAccessControl.sol",
              "id": 3,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 296,
              "sourceUnit": 379,
              "src": "134:52:0",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2,
                    "name": "IAccessControl",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 378,
                    "src": "142:14:0",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../utils/Context.sol",
              "id": 5,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 296,
              "sourceUnit": 1211,
              "src": "187:45:0",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 4,
                    "name": "Context",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1210,
                    "src": "195:7:0",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
              "file": "../utils/introspection/ERC165.sol",
              "id": 7,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 296,
              "sourceUnit": 1343,
              "src": "233:57:0",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 6,
                    "name": "ERC165",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1342,
                    "src": "241:6:0",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 9,
                    "name": "Context",
                    "nameLocations": [
                      "1988:7:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1210,
                    "src": "1988:7:0"
                  },
                  "id": 10,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1988:7:0"
                },
                {
                  "baseName": {
                    "id": 11,
                    "name": "IAccessControl",
                    "nameLocations": [
                      "1997:14:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 378,
                    "src": "1997:14:0"
                  },
                  "id": 12,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1997:14:0"
                },
                {
                  "baseName": {
                    "id": 13,
                    "name": "ERC165",
                    "nameLocations": [
                      "2013:6:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1342,
                    "src": "2013:6:0"
                  },
                  "id": 14,
                  "nodeType": "InheritanceSpecifier",
                  "src": "2013:6:0"
                }
              ],
              "canonicalName": "AccessControl",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 8,
                "nodeType": "StructuredDocumentation",
                "src": "292:1660:0",
                "text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
              },
              "fullyImplemented": true,
              "id": 295,
              "linearizedBaseContracts": [
                295,
                1342,
                1354,
                378,
                1210
              ],
              "name": "AccessControl",
              "nameLocation": "1971:13:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "AccessControl.RoleData",
                  "id": 21,
                  "members": [
                    {
                      "constant": false,
                      "id": 18,
                      "mutability": "mutable",
                      "name": "hasRole",
                      "nameLocation": "2085:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 21,
                      "src": "2052:40:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      },
                      "typeName": {
                        "id": 17,
                        "keyName": "account",
                        "keyNameLocation": "2068:7:0",
                        "keyType": {
                          "id": 15,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2060:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "Mapping",
                        "src": "2052:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        },
                        "valueName": "",
                        "valueNameLocation": "-1:-1:-1",
                        "valueType": {
                          "id": 16,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2079:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 20,
                      "mutability": "mutable",
                      "name": "adminRole",
                      "nameLocation": "2110:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 21,
                      "src": "2102:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 19,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2102:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "RoleData",
                  "nameLocation": "2033:8:0",
                  "nodeType": "StructDefinition",
                  "scope": 295,
                  "src": "2026:100:0",
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 26,
                  "mutability": "mutable",
                  "name": "_roles",
                  "nameLocation": "2174:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 295,
                  "src": "2132:48:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
                    "typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
                  },
                  "typeName": {
                    "id": 25,
                    "keyName": "role",
                    "keyNameLocation": "2148:4:0",
                    "keyType": {
                      "id": 22,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "2140:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "2132:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
                      "typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 24,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 23,
                        "name": "RoleData",
                        "nameLocations": [
                          "2156:8:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 21,
                        "src": "2156:8:0"
                      },
                      "referencedDeclaration": 21,
                      "src": "2156:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_RoleData_$21_storage_ptr",
                        "typeString": "struct AccessControl.RoleData"
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": true,
                  "functionSelector": "a217fddf",
                  "id": 29,
                  "mutability": "constant",
                  "name": "DEFAULT_ADMIN_ROLE",
                  "nameLocation": "2211:18:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 295,
                  "src": "2187:49:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 27,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2187:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": {
                    "hexValue": "30783030",
                    "id": 28,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2232:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0x00"
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 39,
                    "nodeType": "Block",
                    "src": "2454:44:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 35,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 32,
                              "src": "2475:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 34,
                            "name": "_checkRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              93,
                              114
                            ],
                            "referencedDeclaration": 93,
                            "src": "2464:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32) view"
                            }
                          },
                          "id": 36,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2464:16:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 37,
                        "nodeType": "ExpressionStatement",
                        "src": "2464:16:0"
                      },
                      {
                        "id": 38,
                        "nodeType": "PlaceholderStatement",
                        "src": "2490:1:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 30,
                    "nodeType": "StructuredDocumentation",
                    "src": "2243:174:0",
                    "text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
                  },
                  "id": 40,
                  "name": "onlyRole",
                  "nameLocation": "2431:8:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 33,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 32,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "2448:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 40,
                        "src": "2440:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 31,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2440:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2439:14:0"
                  },
                  "src": "2422:76:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "baseFunctions": [
                    1341
                  ],
                  "body": {
                    "id": 61,
                    "nodeType": "Block",
                    "src": "2656:111:0",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 59,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            "id": 54,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 49,
                              "name": "interfaceId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 43,
                              "src": "2673:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 51,
                                    "name": "IAccessControl",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 378,
                                    "src": "2693:14:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
                                      "typeString": "type(contract IAccessControl)"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_type$_t_contract$_IAccessControl_$378_$",
                                      "typeString": "type(contract IAccessControl)"
                                    }
                                  ],
                                  "id": 50,
                                  "name": "type",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -27,
                                  "src": "2688:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 52,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2688:20:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$378",
                                  "typeString": "type(contract IAccessControl)"
                                }
                              },
                              "id": 53,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "2709:11:0",
                              "memberName": "interfaceId",
                              "nodeType": "MemberAccess",
                              "src": "2688:32:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              }
                            },
                            "src": "2673:47:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 57,
                                "name": "interfaceId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 43,
                                "src": "2748:11:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              ],
                              "expression": {
                                "id": 55,
                                "name": "super",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -25,
                                "src": "2724:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_super$_AccessControl_$295_$",
                                  "typeString": "type(contract super AccessControl)"
                                }
                              },
                              "id": 56,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2730:17:0",
                              "memberName": "supportsInterface",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1341,
                              "src": "2724:23:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                                "typeString": "function (bytes4) view returns (bool)"
                              }
                            },
                            "id": 58,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2724:36:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "2673:87:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 48,
                        "id": 60,
                        "nodeType": "Return",
                        "src": "2666:94:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 41,
                    "nodeType": "StructuredDocumentation",
                    "src": "2504:56:0",
                    "text": " @dev See {IERC165-supportsInterface}."
                  },
                  "functionSelector": "01ffc9a7",
                  "id": 62,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "supportsInterface",
                  "nameLocation": "2574:17:0",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 45,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "2632:8:0"
                  },
                  "parameters": {
                    "id": 44,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 43,
                        "mutability": "mutable",
                        "name": "interfaceId",
                        "nameLocation": "2599:11:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 62,
                        "src": "2592:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 42,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "2592:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2591:20:0"
                  },
                  "returnParameters": {
                    "id": 48,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 47,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 62,
                        "src": "2650:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 46,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2650:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2649:6:0"
                  },
                  "scope": 295,
                  "src": "2565:202:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    345
                  ],
                  "body": {
                    "id": 79,
                    "nodeType": "Block",
                    "src": "2937:53:0",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 72,
                                "name": "_roles",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 26,
                                "src": "2954:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
                                  "typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
                                }
                              },
                              "id": 74,
                              "indexExpression": {
                                "id": 73,
                                "name": "role",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 65,
                                "src": "2961:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2954:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RoleData_$21_storage",
                                "typeString": "struct AccessControl.RoleData storage ref"
                              }
                            },
                            "id": 75,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2967:7:0",
                            "memberName": "hasRole",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 18,
                            "src": "2954:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 77,
                          "indexExpression": {
                            "id": 76,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 67,
                            "src": "2975:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2954:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 71,
                        "id": 78,
                        "nodeType": "Return",
                        "src": "2947:36:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 63,
                    "nodeType": "StructuredDocumentation",
                    "src": "2773:76:0",
                    "text": " @dev Returns `true` if `account` has been granted `role`."
                  },
                  "functionSelector": "91d14854",
                  "id": 80,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "hasRole",
                  "nameLocation": "2863:7:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 68,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 65,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "2879:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 80,
                        "src": "2871:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 64,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2871:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 67,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "2893:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 80,
                        "src": "2885:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 66,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2885:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2870:31:0"
                  },
                  "returnParameters": {
                    "id": 71,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 70,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 80,
                        "src": "2931:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 69,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2931:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2930:6:0"
                  },
                  "scope": 295,
                  "src": "2854:136:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 92,
                    "nodeType": "Block",
                    "src": "3255:47:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 87,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 83,
                              "src": "3276:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 88,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1192,
                                "src": "3282:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 89,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3282:12:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 86,
                            "name": "_checkRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              93,
                              114
                            ],
                            "referencedDeclaration": 114,
                            "src": "3265:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
                              "typeString": "function (bytes32,address) view"
                            }
                          },
                          "id": 90,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3265:30:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 91,
                        "nodeType": "ExpressionStatement",
                        "src": "3265:30:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 81,
                    "nodeType": "StructuredDocumentation",
                    "src": "2996:198:0",
                    "text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
                  },
                  "id": 93,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_checkRole",
                  "nameLocation": "3208:10:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 84,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 83,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "3227:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 93,
                        "src": "3219:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 82,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3219:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3218:14:0"
                  },
                  "returnParameters": {
                    "id": 85,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3255:0:0"
                  },
                  "scope": 295,
                  "src": "3199:103:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 113,
                    "nodeType": "Block",
                    "src": "3505:124:0",
                    "statements": [
                      {
                        "condition": {
                          "id": 105,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "3519:23:0",
                          "subExpression": {
                            "arguments": [
                              {
                                "id": 102,
                                "name": "role",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 96,
                                "src": "3528:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "id": 103,
                                "name": "account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 98,
                                "src": "3534:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 101,
                              "name": "hasRole",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80,
                              "src": "3520:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                                "typeString": "function (bytes32,address) view returns (bool)"
                              }
                            },
                            "id": 104,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3520:22:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 112,
                        "nodeType": "IfStatement",
                        "src": "3515:108:0",
                        "trueBody": {
                          "id": 111,
                          "nodeType": "Block",
                          "src": "3544:79:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "id": 107,
                                    "name": "account",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 98,
                                    "src": "3598:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 108,
                                    "name": "role",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 96,
                                    "src": "3607:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "id": 106,
                                  "name": "AccessControlUnauthorizedAccount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 305,
                                  "src": "3565:32:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$_t_error_$",
                                    "typeString": "function (address,bytes32) pure returns (error)"
                                  }
                                },
                                "id": 109,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3565:47:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 110,
                              "nodeType": "RevertStatement",
                              "src": "3558:54:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 94,
                    "nodeType": "StructuredDocumentation",
                    "src": "3308:119:0",
                    "text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
                  },
                  "id": 114,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_checkRole",
                  "nameLocation": "3441:10:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 99,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 96,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "3460:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 114,
                        "src": "3452:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 95,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3452:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 98,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "3474:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 114,
                        "src": "3466:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 97,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3466:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3451:31:0"
                  },
                  "returnParameters": {
                    "id": 100,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3505:0:0"
                  },
                  "scope": 295,
                  "src": "3432:197:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "baseFunctions": [
                    353
                  ],
                  "body": {
                    "id": 127,
                    "nodeType": "Block",
                    "src": "3884:46:0",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "id": 122,
                              "name": "_roles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 26,
                              "src": "3901:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
                                "typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
                              }
                            },
                            "id": 124,
                            "indexExpression": {
                              "id": 123,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 117,
                              "src": "3908:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3901:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_RoleData_$21_storage",
                              "typeString": "struct AccessControl.RoleData storage ref"
                            }
                          },
                          "id": 125,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3914:9:0",
                          "memberName": "adminRole",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 20,
                          "src": "3901:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "functionReturnParameters": 121,
                        "id": 126,
                        "nodeType": "Return",
                        "src": "3894:29:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 115,
                    "nodeType": "StructuredDocumentation",
                    "src": "3635:170:0",
                    "text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
                  },
                  "functionSelector": "248a9ca3",
                  "id": 128,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getRoleAdmin",
                  "nameLocation": "3819:12:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 118,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 117,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "3840:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 128,
                        "src": "3832:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 116,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3832:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3831:14:0"
                  },
                  "returnParameters": {
                    "id": 121,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 120,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 128,
                        "src": "3875:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 119,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3875:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3874:9:0"
                  },
                  "scope": 295,
                  "src": "3810:120:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    361
                  ],
                  "body": {
                    "id": 146,
                    "nodeType": "Block",
                    "src": "4320:42:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 142,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 131,
                              "src": "4341:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 143,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 133,
                              "src": "4347:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 141,
                            "name": "_grantRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 256,
                            "src": "4330:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) returns (bool)"
                            }
                          },
                          "id": 144,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4330:25:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 145,
                        "nodeType": "ExpressionStatement",
                        "src": "4330:25:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 129,
                    "nodeType": "StructuredDocumentation",
                    "src": "3936:285:0",
                    "text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
                  },
                  "functionSelector": "2f2ff15d",
                  "id": 147,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 137,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 131,
                              "src": "4313:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 136,
                            "name": "getRoleAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 128,
                            "src": "4300:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
                              "typeString": "function (bytes32) view returns (bytes32)"
                            }
                          },
                          "id": 138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4300:18:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "id": 139,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 135,
                        "name": "onlyRole",
                        "nameLocations": [
                          "4291:8:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 40,
                        "src": "4291:8:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4291:28:0"
                    }
                  ],
                  "name": "grantRole",
                  "nameLocation": "4235:9:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 134,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 131,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "4253:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 147,
                        "src": "4245:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 130,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4245:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 133,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "4267:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 147,
                        "src": "4259:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 132,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4259:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4244:31:0"
                  },
                  "returnParameters": {
                    "id": 140,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4320:0:0"
                  },
                  "scope": 295,
                  "src": "4226:136:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    369
                  ],
                  "body": {
                    "id": 165,
                    "nodeType": "Block",
                    "src": "4737:43:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 161,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 150,
                              "src": "4759:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 162,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 152,
                              "src": "4765:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 160,
                            "name": "_revokeRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 294,
                            "src": "4747:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) returns (bool)"
                            }
                          },
                          "id": 163,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4747:26:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 164,
                        "nodeType": "ExpressionStatement",
                        "src": "4747:26:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 148,
                    "nodeType": "StructuredDocumentation",
                    "src": "4368:269:0",
                    "text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
                  },
                  "functionSelector": "d547741f",
                  "id": 166,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 156,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 150,
                              "src": "4730:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 155,
                            "name": "getRoleAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 128,
                            "src": "4717:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
                              "typeString": "function (bytes32) view returns (bytes32)"
                            }
                          },
                          "id": 157,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4717:18:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "id": 158,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 154,
                        "name": "onlyRole",
                        "nameLocations": [
                          "4708:8:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 40,
                        "src": "4708:8:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4708:28:0"
                    }
                  ],
                  "name": "revokeRole",
                  "nameLocation": "4651:10:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 153,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 150,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "4670:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 166,
                        "src": "4662:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 149,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4662:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 152,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "4684:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 166,
                        "src": "4676:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 151,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4676:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4661:31:0"
                  },
                  "returnParameters": {
                    "id": 159,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4737:0:0"
                  },
                  "scope": 295,
                  "src": "4642:138:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    377
                  ],
                  "body": {
                    "id": 188,
                    "nodeType": "Block",
                    "src": "5407:166:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 177,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 174,
                            "name": "callerConfirmation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 171,
                            "src": "5421:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 175,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1192,
                              "src": "5443:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 176,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5443:12:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5421:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 182,
                        "nodeType": "IfStatement",
                        "src": "5417:102:0",
                        "trueBody": {
                          "id": 181,
                          "nodeType": "Block",
                          "src": "5457:62:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 178,
                                  "name": "AccessControlBadConfirmation",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 308,
                                  "src": "5478:28:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 179,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5478:30:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 180,
                              "nodeType": "RevertStatement",
                              "src": "5471:37:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 184,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 169,
                              "src": "5541:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 185,
                              "name": "callerConfirmation",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 171,
                              "src": "5547:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 183,
                            "name": "_revokeRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 294,
                            "src": "5529:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) returns (bool)"
                            }
                          },
                          "id": 186,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5529:37:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 187,
                        "nodeType": "ExpressionStatement",
                        "src": "5529:37:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 167,
                    "nodeType": "StructuredDocumentation",
                    "src": "4786:537:0",
                    "text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
                  },
                  "functionSelector": "36568abe",
                  "id": 189,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "renounceRole",
                  "nameLocation": "5337:12:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 172,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 169,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "5358:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 189,
                        "src": "5350:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 168,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "5350:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 171,
                        "mutability": "mutable",
                        "name": "callerConfirmation",
                        "nameLocation": "5372:18:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 189,
                        "src": "5364:26:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 170,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5364:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5349:42:0"
                  },
                  "returnParameters": {
                    "id": 173,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5407:0:0"
                  },
                  "scope": 295,
                  "src": "5328:245:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 216,
                    "nodeType": "Block",
                    "src": "5771:174:0",
                    "statements": [
                      {
                        "assignments": [
                          198
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 198,
                            "mutability": "mutable",
                            "name": "previousAdminRole",
                            "nameLocation": "5789:17:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 216,
                            "src": "5781:25:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 197,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "5781:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 202,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 200,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 192,
                              "src": "5822:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 199,
                            "name": "getRoleAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 128,
                            "src": "5809:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
                              "typeString": "function (bytes32) view returns (bytes32)"
                            }
                          },
                          "id": 201,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5809:18:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5781:46:0"
                      },
                      {
                        "expression": {
                          "id": 208,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 203,
                                "name": "_roles",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 26,
                                "src": "5837:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
                                  "typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
                                }
                              },
                              "id": 205,
                              "indexExpression": {
                                "id": 204,
                                "name": "role",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 192,
                                "src": "5844:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5837:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_RoleData_$21_storage",
                                "typeString": "struct AccessControl.RoleData storage ref"
                              }
                            },
                            "id": 206,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "5850:9:0",
                            "memberName": "adminRole",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 20,
                            "src": "5837:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 207,
                            "name": "adminRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 194,
                            "src": "5862:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "5837:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 209,
                        "nodeType": "ExpressionStatement",
                        "src": "5837:34:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 211,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 192,
                              "src": "5903:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 212,
                              "name": "previousAdminRole",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 198,
                              "src": "5909:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 213,
                              "name": "adminRole",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 194,
                              "src": "5928:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 210,
                            "name": "RoleAdminChanged",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 317,
                            "src": "5886:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32,bytes32,bytes32)"
                            }
                          },
                          "id": 214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5886:52:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 215,
                        "nodeType": "EmitStatement",
                        "src": "5881:57:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 190,
                    "nodeType": "StructuredDocumentation",
                    "src": "5579:114:0",
                    "text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
                  },
                  "id": 217,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_setRoleAdmin",
                  "nameLocation": "5707:13:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 195,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 192,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "5729:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 217,
                        "src": "5721:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 191,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "5721:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 194,
                        "mutability": "mutable",
                        "name": "adminRole",
                        "nameLocation": "5743:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 217,
                        "src": "5735:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 193,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "5735:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5720:33:0"
                  },
                  "returnParameters": {
                    "id": 196,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5771:0:0"
                  },
                  "scope": 295,
                  "src": "5698:247:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 255,
                    "nodeType": "Block",
                    "src": "6262:233:0",
                    "statements": [
                      {
                        "condition": {
                          "id": 231,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "6276:23:0",
                          "subExpression": {
                            "arguments": [
                              {
                                "id": 228,
                                "name": "role",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 220,
                                "src": "6285:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "id": 229,
                                "name": "account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 222,
                                "src": "6291:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 227,
                              "name": "hasRole",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80,
                              "src": "6277:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                                "typeString": "function (bytes32,address) view returns (bool)"
                              }
                            },
                            "id": 230,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6277:22:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 253,
                          "nodeType": "Block",
                          "src": "6452:37:0",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "66616c7365",
                                "id": 251,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6473:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "functionReturnParameters": 226,
                              "id": 252,
                              "nodeType": "Return",
                              "src": "6466:12:0"
                            }
                          ]
                        },
                        "id": 254,
                        "nodeType": "IfStatement",
                        "src": "6272:217:0",
                        "trueBody": {
                          "id": 250,
                          "nodeType": "Block",
                          "src": "6301:145:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 239,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 232,
                                        "name": "_roles",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 26,
                                        "src": "6315:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
                                          "typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
                                        }
                                      },
                                      "id": 234,
                                      "indexExpression": {
                                        "id": 233,
                                        "name": "role",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 220,
                                        "src": "6322:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "6315:12:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_RoleData_$21_storage",
                                        "typeString": "struct AccessControl.RoleData storage ref"
                                      }
                                    },
                                    "id": 235,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "6328:7:0",
                                    "memberName": "hasRole",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 18,
                                    "src": "6315:20:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                      "typeString": "mapping(address => bool)"
                                    }
                                  },
                                  "id": 237,
                                  "indexExpression": {
                                    "id": 236,
                                    "name": "account",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 222,
                                    "src": "6336:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "6315:29:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 238,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6347:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "6315:36:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 240,
                              "nodeType": "ExpressionStatement",
                              "src": "6315:36:0"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 242,
                                    "name": "role",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 220,
                                    "src": "6382:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "id": 243,
                                    "name": "account",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 222,
                                    "src": "6388:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 244,
                                      "name": "_msgSender",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1192,
                                      "src": "6397:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                        "typeString": "function () view returns (address)"
                                      }
                                    },
                                    "id": 245,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6397:12:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 241,
                                  "name": "RoleGranted",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 326,
                                  "src": "6370:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
                                    "typeString": "function (bytes32,address,address)"
                                  }
                                },
                                "id": 246,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6370:40:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 247,
                              "nodeType": "EmitStatement",
                              "src": "6365:45:0"
                            },
                            {
                              "expression": {
                                "hexValue": "74727565",
                                "id": 248,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6431:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "functionReturnParameters": 226,
                              "id": 249,
                              "nodeType": "Return",
                              "src": "6424:11:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 218,
                    "nodeType": "StructuredDocumentation",
                    "src": "5951:223:0",
                    "text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
                  },
                  "id": 256,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_grantRole",
                  "nameLocation": "6188:10:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 223,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 220,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "6207:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 256,
                        "src": "6199:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 219,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "6199:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 222,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "6221:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 256,
                        "src": "6213:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 221,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6213:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6198:31:0"
                  },
                  "returnParameters": {
                    "id": 226,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 225,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 256,
                        "src": "6256:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 224,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "6256:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6255:6:0"
                  },
                  "scope": 295,
                  "src": "6179:316:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 293,
                    "nodeType": "Block",
                    "src": "6816:233:0",
                    "statements": [
                      {
                        "condition": {
                          "arguments": [
                            {
                              "id": 267,
                              "name": "role",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 259,
                              "src": "6838:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 268,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 261,
                              "src": "6844:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 266,
                            "name": "hasRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80,
                            "src": "6830:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) view returns (bool)"
                            }
                          },
                          "id": 269,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6830:22:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 291,
                          "nodeType": "Block",
                          "src": "7006:37:0",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "66616c7365",
                                "id": 289,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7027:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "functionReturnParameters": 265,
                              "id": 290,
                              "nodeType": "Return",
                              "src": "7020:12:0"
                            }
                          ]
                        },
                        "id": 292,
                        "nodeType": "IfStatement",
                        "src": "6826:217:0",
                        "trueBody": {
                          "id": 288,
                          "nodeType": "Block",
                          "src": "6854:146:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 277,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 270,
                                        "name": "_roles",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 26,
                                        "src": "6868:6:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$21_storage_$",
                                          "typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
                                        }
                                      },
                                      "id": 272,
                                      "indexExpression": {
                                        "id": 271,
                                        "name": "role",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 259,
                                        "src": "6875:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "6868:12:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_RoleData_$21_storage",
                                        "typeString": "struct AccessControl.RoleData storage ref"
                                      }
                                    },
                                    "id": 273,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "6881:7:0",
                                    "memberName": "hasRole",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 18,
                                    "src": "6868:20:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                      "typeString": "mapping(address => bool)"
                                    }
                                  },
                                  "id": 275,
                                  "indexExpression": {
                                    "id": 274,
                                    "name": "account",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 261,
                                    "src": "6889:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "6868:29:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "66616c7365",
                                  "id": 276,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6900:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "false"
                                },
                                "src": "6868:37:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 278,
                              "nodeType": "ExpressionStatement",
                              "src": "6868:37:0"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 280,
                                    "name": "role",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 259,
                                    "src": "6936:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "id": 281,
                                    "name": "account",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 261,
                                    "src": "6942:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 282,
                                      "name": "_msgSender",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1192,
                                      "src": "6951:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                        "typeString": "function () view returns (address)"
                                      }
                                    },
                                    "id": 283,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6951:12:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 279,
                                  "name": "RoleRevoked",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 335,
                                  "src": "6924:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
                                    "typeString": "function (bytes32,address,address)"
                                  }
                                },
                                "id": 284,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6924:40:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 285,
                              "nodeType": "EmitStatement",
                              "src": "6919:45:0"
                            },
                            {
                              "expression": {
                                "hexValue": "74727565",
                                "id": 286,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6985:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "functionReturnParameters": 265,
                              "id": 287,
                              "nodeType": "Return",
                              "src": "6978:11:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 257,
                    "nodeType": "StructuredDocumentation",
                    "src": "6501:226:0",
                    "text": " @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
                  },
                  "id": 294,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_revokeRole",
                  "nameLocation": "6741:11:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 262,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 259,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "6761:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 294,
                        "src": "6753:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 258,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "6753:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 261,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "6775:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 294,
                        "src": "6767:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 260,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6767:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6752:31:0"
                  },
                  "returnParameters": {
                    "id": 265,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 264,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 294,
                        "src": "6810:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 263,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "6810:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6809:6:0"
                  },
                  "scope": 295,
                  "src": "6732:317:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 296,
              "src": "1953:5098:0",
              "usedErrors": [
                305,
                308
              ],
              "usedEvents": [
                317,
                326,
                335
              ]
            }
          ],
          "src": "108:6944:0"
        },
        "id": 0
      },
      "@openzeppelin/contracts/access/IAccessControl.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
          "exportedSymbols": {
            "IAccessControl": [
              378
            ]
          },
          "id": 379,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 297,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "109:24:1"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IAccessControl",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 298,
                "nodeType": "StructuredDocumentation",
                "src": "135:90:1",
                "text": " @dev External interface of AccessControl declared to support ERC-165 detection."
              },
              "fullyImplemented": false,
              "id": 378,
              "linearizedBaseContracts": [
                378
              ],
              "name": "IAccessControl",
              "nameLocation": "236:14:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 299,
                    "nodeType": "StructuredDocumentation",
                    "src": "257:56:1",
                    "text": " @dev The `account` is missing a role."
                  },
                  "errorSelector": "e2517d3f",
                  "id": 305,
                  "name": "AccessControlUnauthorizedAccount",
                  "nameLocation": "324:32:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 304,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 301,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "365:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 305,
                        "src": "357:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 300,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "357:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 303,
                        "mutability": "mutable",
                        "name": "neededRole",
                        "nameLocation": "382:10:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 305,
                        "src": "374:18:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 302,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "374:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "356:37:1"
                  },
                  "src": "318:76:1"
                },
                {
                  "documentation": {
                    "id": 306,
                    "nodeType": "StructuredDocumentation",
                    "src": "400:148:1",
                    "text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
                  },
                  "errorSelector": "6697b232",
                  "id": 308,
                  "name": "AccessControlBadConfirmation",
                  "nameLocation": "559:28:1",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 307,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "587:2:1"
                  },
                  "src": "553:37:1"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 309,
                    "nodeType": "StructuredDocumentation",
                    "src": "596:254:1",
                    "text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted to signal this."
                  },
                  "eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
                  "id": 317,
                  "name": "RoleAdminChanged",
                  "nameLocation": "861:16:1",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 316,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 311,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "894:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 317,
                        "src": "878:20:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 310,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "878:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 313,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "previousAdminRole",
                        "nameLocation": "916:17:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 317,
                        "src": "900:33:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 312,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "900:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 315,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newAdminRole",
                        "nameLocation": "951:12:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 317,
                        "src": "935:28:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 314,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "935:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "877:87:1"
                  },
                  "src": "855:110:1"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 318,
                    "nodeType": "StructuredDocumentation",
                    "src": "971:295:1",
                    "text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
                  },
                  "eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
                  "id": 326,
                  "name": "RoleGranted",
                  "nameLocation": "1277:11:1",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 325,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 320,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "1305:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 326,
                        "src": "1289:20:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 319,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1289:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 322,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "1327:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 326,
                        "src": "1311:23:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 321,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1311:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 324,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "1352:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 326,
                        "src": "1336:22:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 323,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1336:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1288:71:1"
                  },
                  "src": "1271:89:1"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 327,
                    "nodeType": "StructuredDocumentation",
                    "src": "1366:275:1",
                    "text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
                  },
                  "eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
                  "id": 335,
                  "name": "RoleRevoked",
                  "nameLocation": "1652:11:1",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 334,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 329,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "1680:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 335,
                        "src": "1664:20:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 328,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1664:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 331,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "1702:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 335,
                        "src": "1686:23:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 330,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1686:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 333,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "1727:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 335,
                        "src": "1711:22:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 332,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1711:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1663:71:1"
                  },
                  "src": "1646:89:1"
                },
                {
                  "documentation": {
                    "id": 336,
                    "nodeType": "StructuredDocumentation",
                    "src": "1741:76:1",
                    "text": " @dev Returns `true` if `account` has been granted `role`."
                  },
                  "functionSelector": "91d14854",
                  "id": 345,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "hasRole",
                  "nameLocation": "1831:7:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 341,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 338,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "1847:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 345,
                        "src": "1839:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 337,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1839:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 340,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "1861:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 345,
                        "src": "1853:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 339,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1853:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1838:31:1"
                  },
                  "returnParameters": {
                    "id": 344,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 343,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 345,
                        "src": "1893:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 342,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1893:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1892:6:1"
                  },
                  "scope": 378,
                  "src": "1822:77:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 346,
                    "nodeType": "StructuredDocumentation",
                    "src": "1905:184:1",
                    "text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
                  },
                  "functionSelector": "248a9ca3",
                  "id": 353,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getRoleAdmin",
                  "nameLocation": "2103:12:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 349,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 348,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "2124:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 353,
                        "src": "2116:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 347,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2116:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2115:14:1"
                  },
                  "returnParameters": {
                    "id": 352,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 351,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 353,
                        "src": "2153:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 350,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2153:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2152:9:1"
                  },
                  "scope": 378,
                  "src": "2094:68:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 354,
                    "nodeType": "StructuredDocumentation",
                    "src": "2168:239:1",
                    "text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
                  },
                  "functionSelector": "2f2ff15d",
                  "id": 361,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "grantRole",
                  "nameLocation": "2421:9:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 359,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 356,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "2439:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 361,
                        "src": "2431:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 355,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2431:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 358,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "2453:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 361,
                        "src": "2445:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 357,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2445:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2430:31:1"
                  },
                  "returnParameters": {
                    "id": 360,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2470:0:1"
                  },
                  "scope": 378,
                  "src": "2412:59:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 362,
                    "nodeType": "StructuredDocumentation",
                    "src": "2477:223:1",
                    "text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
                  },
                  "functionSelector": "d547741f",
                  "id": 369,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "revokeRole",
                  "nameLocation": "2714:10:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 367,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 364,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "2733:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 369,
                        "src": "2725:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 363,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2725:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 366,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "2747:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 369,
                        "src": "2739:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 365,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2739:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2724:31:1"
                  },
                  "returnParameters": {
                    "id": 368,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2764:0:1"
                  },
                  "scope": 378,
                  "src": "2705:60:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 370,
                    "nodeType": "StructuredDocumentation",
                    "src": "2771:491:1",
                    "text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
                  },
                  "functionSelector": "36568abe",
                  "id": 377,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "renounceRole",
                  "nameLocation": "3276:12:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 375,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 372,
                        "mutability": "mutable",
                        "name": "role",
                        "nameLocation": "3297:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 377,
                        "src": "3289:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 371,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3289:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 374,
                        "mutability": "mutable",
                        "name": "callerConfirmation",
                        "nameLocation": "3311:18:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 377,
                        "src": "3303:26:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 373,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3303:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3288:42:1"
                  },
                  "returnParameters": {
                    "id": 376,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3339:0:1"
                  },
                  "scope": 378,
                  "src": "3267:73:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 379,
              "src": "226:3116:1",
              "usedErrors": [
                305,
                308
              ],
              "usedEvents": [
                317,
                326,
                335
              ]
            }
          ],
          "src": "109:3234:1"
        },
        "id": 1
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
          "exportedSymbols": {
            "IERC1155Errors": [
              515
            ],
            "IERC20Errors": [
              420
            ],
            "IERC721Errors": [
              468
            ]
          },
          "id": 516,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 380,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "112:24:2"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC20Errors",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 381,
                "nodeType": "StructuredDocumentation",
                "src": "138:141:2",
                "text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
              },
              "fullyImplemented": true,
              "id": 420,
              "linearizedBaseContracts": [
                420
              ],
              "name": "IERC20Errors",
              "nameLocation": "290:12:2",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 382,
                    "nodeType": "StructuredDocumentation",
                    "src": "309:309:2",
                    "text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
                  },
                  "errorSelector": "e450d38c",
                  "id": 390,
                  "name": "ERC20InsufficientBalance",
                  "nameLocation": "629:24:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 389,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 384,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "662:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 390,
                        "src": "654:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 383,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "654:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 386,
                        "mutability": "mutable",
                        "name": "balance",
                        "nameLocation": "678:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 390,
                        "src": "670:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 385,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "670:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 388,
                        "mutability": "mutable",
                        "name": "needed",
                        "nameLocation": "695:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 390,
                        "src": "687:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 387,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "687:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "653:49:2"
                  },
                  "src": "623:80:2"
                },
                {
                  "documentation": {
                    "id": 391,
                    "nodeType": "StructuredDocumentation",
                    "src": "709:152:2",
                    "text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
                  },
                  "errorSelector": "96c6fd1e",
                  "id": 395,
                  "name": "ERC20InvalidSender",
                  "nameLocation": "872:18:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 394,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 393,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "899:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 395,
                        "src": "891:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 392,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "891:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "890:16:2"
                  },
                  "src": "866:41:2"
                },
                {
                  "documentation": {
                    "id": 396,
                    "nodeType": "StructuredDocumentation",
                    "src": "913:159:2",
                    "text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
                  },
                  "errorSelector": "ec442f05",
                  "id": 400,
                  "name": "ERC20InvalidReceiver",
                  "nameLocation": "1083:20:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 399,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 398,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "1112:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 400,
                        "src": "1104:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 397,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1104:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1103:18:2"
                  },
                  "src": "1077:45:2"
                },
                {
                  "documentation": {
                    "id": 401,
                    "nodeType": "StructuredDocumentation",
                    "src": "1128:345:2",
                    "text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
                  },
                  "errorSelector": "fb8f41b2",
                  "id": 409,
                  "name": "ERC20InsufficientAllowance",
                  "nameLocation": "1484:26:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 408,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 403,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1519:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 409,
                        "src": "1511:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 402,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1511:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 405,
                        "mutability": "mutable",
                        "name": "allowance",
                        "nameLocation": "1536:9:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 409,
                        "src": "1528:17:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 404,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1528:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 407,
                        "mutability": "mutable",
                        "name": "needed",
                        "nameLocation": "1555:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 409,
                        "src": "1547:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 406,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1547:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1510:52:2"
                  },
                  "src": "1478:85:2"
                },
                {
                  "documentation": {
                    "id": 410,
                    "nodeType": "StructuredDocumentation",
                    "src": "1569:174:2",
                    "text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
                  },
                  "errorSelector": "e602df05",
                  "id": 414,
                  "name": "ERC20InvalidApprover",
                  "nameLocation": "1754:20:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 413,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 412,
                        "mutability": "mutable",
                        "name": "approver",
                        "nameLocation": "1783:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 414,
                        "src": "1775:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 411,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1775:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1774:18:2"
                  },
                  "src": "1748:45:2"
                },
                {
                  "documentation": {
                    "id": 415,
                    "nodeType": "StructuredDocumentation",
                    "src": "1799:195:2",
                    "text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
                  },
                  "errorSelector": "94280d62",
                  "id": 419,
                  "name": "ERC20InvalidSpender",
                  "nameLocation": "2005:19:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 418,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 417,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "2033:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 419,
                        "src": "2025:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 416,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2025:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2024:17:2"
                  },
                  "src": "1999:43:2"
                }
              ],
              "scope": 516,
              "src": "280:1764:2",
              "usedErrors": [
                390,
                395,
                400,
                409,
                414,
                419
              ],
              "usedEvents": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC721Errors",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 421,
                "nodeType": "StructuredDocumentation",
                "src": "2046:143:2",
                "text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
              },
              "fullyImplemented": true,
              "id": 468,
              "linearizedBaseContracts": [
                468
              ],
              "name": "IERC721Errors",
              "nameLocation": "2200:13:2",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 422,
                    "nodeType": "StructuredDocumentation",
                    "src": "2220:219:2",
                    "text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
                  },
                  "errorSelector": "89c62b64",
                  "id": 426,
                  "name": "ERC721InvalidOwner",
                  "nameLocation": "2450:18:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 425,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 424,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "2477:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 426,
                        "src": "2469:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 423,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2469:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2468:15:2"
                  },
                  "src": "2444:40:2"
                },
                {
                  "documentation": {
                    "id": 427,
                    "nodeType": "StructuredDocumentation",
                    "src": "2490:132:2",
                    "text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
                  },
                  "errorSelector": "7e273289",
                  "id": 431,
                  "name": "ERC721NonexistentToken",
                  "nameLocation": "2633:22:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 430,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 429,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "2664:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 431,
                        "src": "2656:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 428,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2656:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2655:17:2"
                  },
                  "src": "2627:46:2"
                },
                {
                  "documentation": {
                    "id": 432,
                    "nodeType": "StructuredDocumentation",
                    "src": "2679:289:2",
                    "text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
                  },
                  "errorSelector": "64283d7b",
                  "id": 440,
                  "name": "ERC721IncorrectOwner",
                  "nameLocation": "2979:20:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 439,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 434,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "3008:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 440,
                        "src": "3000:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 433,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3000:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 436,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "3024:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 440,
                        "src": "3016:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 435,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3016:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 438,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "3041:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 440,
                        "src": "3033:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 437,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3033:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2999:48:2"
                  },
                  "src": "2973:75:2"
                },
                {
                  "documentation": {
                    "id": 441,
                    "nodeType": "StructuredDocumentation",
                    "src": "3054:152:2",
                    "text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
                  },
                  "errorSelector": "73c6ac6e",
                  "id": 445,
                  "name": "ERC721InvalidSender",
                  "nameLocation": "3217:19:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 444,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 443,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "3245:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 445,
                        "src": "3237:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 442,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3237:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3236:16:2"
                  },
                  "src": "3211:42:2"
                },
                {
                  "documentation": {
                    "id": 446,
                    "nodeType": "StructuredDocumentation",
                    "src": "3259:159:2",
                    "text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
                  },
                  "errorSelector": "64a0ae92",
                  "id": 450,
                  "name": "ERC721InvalidReceiver",
                  "nameLocation": "3429:21:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 449,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 448,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "3459:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 450,
                        "src": "3451:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 447,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3451:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3450:18:2"
                  },
                  "src": "3423:46:2"
                },
                {
                  "documentation": {
                    "id": 451,
                    "nodeType": "StructuredDocumentation",
                    "src": "3475:247:2",
                    "text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
                  },
                  "errorSelector": "177e802f",
                  "id": 457,
                  "name": "ERC721InsufficientApproval",
                  "nameLocation": "3733:26:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 456,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 453,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "3768:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 457,
                        "src": "3760:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 452,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3760:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 455,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "3786:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 457,
                        "src": "3778:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 454,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3778:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3759:35:2"
                  },
                  "src": "3727:68:2"
                },
                {
                  "documentation": {
                    "id": 458,
                    "nodeType": "StructuredDocumentation",
                    "src": "3801:174:2",
                    "text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
                  },
                  "errorSelector": "a9fbf51f",
                  "id": 462,
                  "name": "ERC721InvalidApprover",
                  "nameLocation": "3986:21:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 461,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 460,
                        "mutability": "mutable",
                        "name": "approver",
                        "nameLocation": "4016:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 462,
                        "src": "4008:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 459,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4008:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4007:18:2"
                  },
                  "src": "3980:46:2"
                },
                {
                  "documentation": {
                    "id": 463,
                    "nodeType": "StructuredDocumentation",
                    "src": "4032:197:2",
                    "text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
                  },
                  "errorSelector": "5b08ba18",
                  "id": 467,
                  "name": "ERC721InvalidOperator",
                  "nameLocation": "4240:21:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 466,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 465,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "4270:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 467,
                        "src": "4262:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 464,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4262:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4261:18:2"
                  },
                  "src": "4234:46:2"
                }
              ],
              "scope": 516,
              "src": "2190:2092:2",
              "usedErrors": [
                426,
                431,
                440,
                445,
                450,
                457,
                462,
                467
              ],
              "usedEvents": []
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC1155Errors",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 469,
                "nodeType": "StructuredDocumentation",
                "src": "4284:145:2",
                "text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
              },
              "fullyImplemented": true,
              "id": 515,
              "linearizedBaseContracts": [
                515
              ],
              "name": "IERC1155Errors",
              "nameLocation": "4440:14:2",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 470,
                    "nodeType": "StructuredDocumentation",
                    "src": "4461:361:2",
                    "text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
                  },
                  "errorSelector": "03dee4c5",
                  "id": 480,
                  "name": "ERC1155InsufficientBalance",
                  "nameLocation": "4833:26:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 479,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 472,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "4868:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 480,
                        "src": "4860:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 471,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4860:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 474,
                        "mutability": "mutable",
                        "name": "balance",
                        "nameLocation": "4884:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 480,
                        "src": "4876:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 473,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4876:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 476,
                        "mutability": "mutable",
                        "name": "needed",
                        "nameLocation": "4901:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 480,
                        "src": "4893:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 475,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4893:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 478,
                        "mutability": "mutable",
                        "name": "tokenId",
                        "nameLocation": "4917:7:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 480,
                        "src": "4909:15:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 477,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4909:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4859:66:2"
                  },
                  "src": "4827:99:2"
                },
                {
                  "documentation": {
                    "id": 481,
                    "nodeType": "StructuredDocumentation",
                    "src": "4932:152:2",
                    "text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
                  },
                  "errorSelector": "01a83514",
                  "id": 485,
                  "name": "ERC1155InvalidSender",
                  "nameLocation": "5095:20:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 484,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 483,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "5124:6:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 485,
                        "src": "5116:14:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 482,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5116:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5115:16:2"
                  },
                  "src": "5089:43:2"
                },
                {
                  "documentation": {
                    "id": 486,
                    "nodeType": "StructuredDocumentation",
                    "src": "5138:159:2",
                    "text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
                  },
                  "errorSelector": "57f447ce",
                  "id": 490,
                  "name": "ERC1155InvalidReceiver",
                  "nameLocation": "5308:22:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 489,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 488,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "5339:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 490,
                        "src": "5331:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 487,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5331:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5330:18:2"
                  },
                  "src": "5302:47:2"
                },
                {
                  "documentation": {
                    "id": 491,
                    "nodeType": "StructuredDocumentation",
                    "src": "5355:256:2",
                    "text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
                  },
                  "errorSelector": "e237d922",
                  "id": 497,
                  "name": "ERC1155MissingApprovalForAll",
                  "nameLocation": "5622:28:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 496,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 493,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "5659:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 497,
                        "src": "5651:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 492,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5651:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 495,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "5677:5:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 497,
                        "src": "5669:13:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 494,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5669:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5650:33:2"
                  },
                  "src": "5616:68:2"
                },
                {
                  "documentation": {
                    "id": 498,
                    "nodeType": "StructuredDocumentation",
                    "src": "5690:174:2",
                    "text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
                  },
                  "errorSelector": "3e31884e",
                  "id": 502,
                  "name": "ERC1155InvalidApprover",
                  "nameLocation": "5875:22:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 501,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 500,
                        "mutability": "mutable",
                        "name": "approver",
                        "nameLocation": "5906:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 502,
                        "src": "5898:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 499,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5898:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5897:18:2"
                  },
                  "src": "5869:47:2"
                },
                {
                  "documentation": {
                    "id": 503,
                    "nodeType": "StructuredDocumentation",
                    "src": "5922:197:2",
                    "text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
                  },
                  "errorSelector": "ced3e100",
                  "id": 507,
                  "name": "ERC1155InvalidOperator",
                  "nameLocation": "6130:22:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 506,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 505,
                        "mutability": "mutable",
                        "name": "operator",
                        "nameLocation": "6161:8:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 507,
                        "src": "6153:16:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 504,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6153:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6152:18:2"
                  },
                  "src": "6124:47:2"
                },
                {
                  "documentation": {
                    "id": 508,
                    "nodeType": "StructuredDocumentation",
                    "src": "6177:280:2",
                    "text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
                  },
                  "errorSelector": "5b059991",
                  "id": 514,
                  "name": "ERC1155InvalidArrayLength",
                  "nameLocation": "6468:25:2",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 513,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 510,
                        "mutability": "mutable",
                        "name": "idsLength",
                        "nameLocation": "6502:9:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 514,
                        "src": "6494:17:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 509,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6494:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 512,
                        "mutability": "mutable",
                        "name": "valuesLength",
                        "nameLocation": "6521:12:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 514,
                        "src": "6513:20:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 511,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6513:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6493:41:2"
                  },
                  "src": "6462:73:2"
                }
              ],
              "scope": 516,
              "src": "4430:2107:2",
              "usedErrors": [
                480,
                485,
                490,
                497,
                502,
                507,
                514
              ],
              "usedEvents": []
            }
          ],
          "src": "112:6426:2"
        },
        "id": 2
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
          "exportedSymbols": {
            "Context": [
              1210
            ],
            "ERC20": [
              1030
            ],
            "IERC20": [
              1108
            ],
            "IERC20Errors": [
              420
            ],
            "IERC20Metadata": [
              1180
            ]
          },
          "id": 1031,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 517,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "105:24:3"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "./IERC20.sol",
              "id": 519,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1031,
              "sourceUnit": 1109,
              "src": "131:36:3",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 518,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1108,
                    "src": "139:6:3",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
              "file": "./extensions/IERC20Metadata.sol",
              "id": 521,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1031,
              "sourceUnit": 1181,
              "src": "168:63:3",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 520,
                    "name": "IERC20Metadata",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1180,
                    "src": "176:14:3",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../../utils/Context.sol",
              "id": 523,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1031,
              "sourceUnit": 1211,
              "src": "232:48:3",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 522,
                    "name": "Context",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1210,
                    "src": "240:7:3",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
              "file": "../../interfaces/draft-IERC6093.sol",
              "id": 525,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1031,
              "sourceUnit": 516,
              "src": "281:65:3",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 524,
                    "name": "IERC20Errors",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 420,
                    "src": "289:12:3",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 527,
                    "name": "Context",
                    "nameLocations": [
                      "1133:7:3"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1210,
                    "src": "1133:7:3"
                  },
                  "id": 528,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1133:7:3"
                },
                {
                  "baseName": {
                    "id": 529,
                    "name": "IERC20",
                    "nameLocations": [
                      "1142:6:3"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1108,
                    "src": "1142:6:3"
                  },
                  "id": 530,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1142:6:3"
                },
                {
                  "baseName": {
                    "id": 531,
                    "name": "IERC20Metadata",
                    "nameLocations": [
                      "1150:14:3"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1180,
                    "src": "1150:14:3"
                  },
                  "id": 532,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1150:14:3"
                },
                {
                  "baseName": {
                    "id": 533,
                    "name": "IERC20Errors",
                    "nameLocations": [
                      "1166:12:3"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 420,
                    "src": "1166:12:3"
                  },
                  "id": 534,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1166:12:3"
                }
              ],
              "canonicalName": "ERC20",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 526,
                "nodeType": "StructuredDocumentation",
                "src": "348:757:3",
                "text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
              },
              "fullyImplemented": true,
              "id": 1030,
              "linearizedBaseContracts": [
                1030,
                420,
                1180,
                1108,
                1210
              ],
              "name": "ERC20",
              "nameLocation": "1124:5:3",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 538,
                  "mutability": "mutable",
                  "name": "_balances",
                  "nameLocation": "1229:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1030,
                  "src": "1185:53:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 537,
                    "keyName": "account",
                    "keyNameLocation": "1201:7:3",
                    "keyType": {
                      "id": 535,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1193:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1185:35:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 536,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1212:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 544,
                  "mutability": "mutable",
                  "name": "_allowances",
                  "nameLocation": "1317:11:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1030,
                  "src": "1245:83:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                    "typeString": "mapping(address => mapping(address => uint256))"
                  },
                  "typeName": {
                    "id": 543,
                    "keyName": "account",
                    "keyNameLocation": "1261:7:3",
                    "keyType": {
                      "id": 539,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1253:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1245:63:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                      "typeString": "mapping(address => mapping(address => uint256))"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 542,
                      "keyName": "spender",
                      "keyNameLocation": "1288:7:3",
                      "keyType": {
                        "id": 540,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1280:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Mapping",
                      "src": "1272:35:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      },
                      "valueName": "",
                      "valueNameLocation": "-1:-1:-1",
                      "valueType": {
                        "id": 541,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1299:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 546,
                  "mutability": "mutable",
                  "name": "_totalSupply",
                  "nameLocation": "1351:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1030,
                  "src": "1335:28:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 545,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1335:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 548,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "1385:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1030,
                  "src": "1370:20:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 547,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1370:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 550,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "1411:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1030,
                  "src": "1396:22:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 549,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1396:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 566,
                    "nodeType": "Block",
                    "src": "1638:57:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 560,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 558,
                            "name": "_name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 548,
                            "src": "1648:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 559,
                            "name": "name_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 553,
                            "src": "1656:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "1648:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 561,
                        "nodeType": "ExpressionStatement",
                        "src": "1648:13:3"
                      },
                      {
                        "expression": {
                          "id": 564,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 562,
                            "name": "_symbol",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 550,
                            "src": "1671:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 563,
                            "name": "symbol_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 555,
                            "src": "1681:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "1671:17:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 565,
                        "nodeType": "ExpressionStatement",
                        "src": "1671:17:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 551,
                    "nodeType": "StructuredDocumentation",
                    "src": "1425:152:3",
                    "text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
                  },
                  "id": 567,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 556,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 553,
                        "mutability": "mutable",
                        "name": "name_",
                        "nameLocation": "1608:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 567,
                        "src": "1594:19:3",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 552,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1594:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 555,
                        "mutability": "mutable",
                        "name": "symbol_",
                        "nameLocation": "1629:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 567,
                        "src": "1615:21:3",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 554,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1615:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1593:44:3"
                  },
                  "returnParameters": {
                    "id": 557,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1638:0:3"
                  },
                  "scope": 1030,
                  "src": "1582:113:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "baseFunctions": [
                    1167
                  ],
                  "body": {
                    "id": 575,
                    "nodeType": "Block",
                    "src": "1820:29:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 573,
                          "name": "_name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 548,
                          "src": "1837:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "functionReturnParameters": 572,
                        "id": 574,
                        "nodeType": "Return",
                        "src": "1830:12:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 568,
                    "nodeType": "StructuredDocumentation",
                    "src": "1701:54:3",
                    "text": " @dev Returns the name of the token."
                  },
                  "functionSelector": "06fdde03",
                  "id": 576,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "name",
                  "nameLocation": "1769:4:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 569,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1773:2:3"
                  },
                  "returnParameters": {
                    "id": 572,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 571,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 576,
                        "src": "1805:13:3",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 570,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1805:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1804:15:3"
                  },
                  "scope": 1030,
                  "src": "1760:89:3",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1173
                  ],
                  "body": {
                    "id": 584,
                    "nodeType": "Block",
                    "src": "2024:31:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 582,
                          "name": "_symbol",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 550,
                          "src": "2041:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "functionReturnParameters": 581,
                        "id": 583,
                        "nodeType": "Return",
                        "src": "2034:14:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 577,
                    "nodeType": "StructuredDocumentation",
                    "src": "1855:102:3",
                    "text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
                  },
                  "functionSelector": "95d89b41",
                  "id": 585,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "symbol",
                  "nameLocation": "1971:6:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 578,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1977:2:3"
                  },
                  "returnParameters": {
                    "id": 581,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 580,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 585,
                        "src": "2009:13:3",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 579,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2009:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2008:15:3"
                  },
                  "scope": 1030,
                  "src": "1962:93:3",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1179
                  ],
                  "body": {
                    "id": 593,
                    "nodeType": "Block",
                    "src": "2744:26:3",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "3138",
                          "id": 591,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2761:2:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          },
                          "value": "18"
                        },
                        "functionReturnParameters": 590,
                        "id": 592,
                        "nodeType": "Return",
                        "src": "2754:9:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 586,
                    "nodeType": "StructuredDocumentation",
                    "src": "2061:622:3",
                    "text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
                  },
                  "functionSelector": "313ce567",
                  "id": 594,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nameLocation": "2697:8:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 587,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2705:2:3"
                  },
                  "returnParameters": {
                    "id": 590,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 589,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 594,
                        "src": "2737:5:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 588,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "2737:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2736:7:3"
                  },
                  "scope": 1030,
                  "src": "2688:82:3",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1057
                  ],
                  "body": {
                    "id": 602,
                    "nodeType": "Block",
                    "src": "2891:36:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 600,
                          "name": "_totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 546,
                          "src": "2908:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 599,
                        "id": 601,
                        "nodeType": "Return",
                        "src": "2901:19:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 595,
                    "nodeType": "StructuredDocumentation",
                    "src": "2776:49:3",
                    "text": " @dev See {IERC20-totalSupply}."
                  },
                  "functionSelector": "18160ddd",
                  "id": 603,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "2839:11:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 596,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2850:2:3"
                  },
                  "returnParameters": {
                    "id": 599,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 598,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 603,
                        "src": "2882:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 597,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2882:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2881:9:3"
                  },
                  "scope": 1030,
                  "src": "2830:97:3",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1065
                  ],
                  "body": {
                    "id": 615,
                    "nodeType": "Block",
                    "src": "3059:42:3",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 611,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 538,
                            "src": "3076:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 613,
                          "indexExpression": {
                            "id": 612,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 606,
                            "src": "3086:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3076:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 610,
                        "id": 614,
                        "nodeType": "Return",
                        "src": "3069:25:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 604,
                    "nodeType": "StructuredDocumentation",
                    "src": "2933:47:3",
                    "text": " @dev See {IERC20-balanceOf}."
                  },
                  "functionSelector": "70a08231",
                  "id": 616,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "2994:9:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 607,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 606,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "3012:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 616,
                        "src": "3004:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 605,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3004:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3003:17:3"
                  },
                  "returnParameters": {
                    "id": 610,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 609,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 616,
                        "src": "3050:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 608,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3050:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3049:9:3"
                  },
                  "scope": 1030,
                  "src": "2985:116:3",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1075
                  ],
                  "body": {
                    "id": 639,
                    "nodeType": "Block",
                    "src": "3371:103:3",
                    "statements": [
                      {
                        "assignments": [
                          627
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 627,
                            "mutability": "mutable",
                            "name": "owner",
                            "nameLocation": "3389:5:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 639,
                            "src": "3381:13:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 626,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3381:7:3",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 630,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 628,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1192,
                            "src": "3397:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 629,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3397:12:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3381:28:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 632,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 627,
                              "src": "3429:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 633,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 619,
                              "src": "3436:2:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 634,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 621,
                              "src": "3440:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 631,
                            "name": "_transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 760,
                            "src": "3419:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 635,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3419:27:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 636,
                        "nodeType": "ExpressionStatement",
                        "src": "3419:27:3"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 637,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3463:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 625,
                        "id": 638,
                        "nodeType": "Return",
                        "src": "3456:11:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 617,
                    "nodeType": "StructuredDocumentation",
                    "src": "3107:184:3",
                    "text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 640,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "3305:8:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 622,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 619,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "3322:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 640,
                        "src": "3314:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 618,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3314:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 621,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "3334:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 640,
                        "src": "3326:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 620,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3326:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3313:27:3"
                  },
                  "returnParameters": {
                    "id": 625,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 624,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 640,
                        "src": "3365:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 623,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3365:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3364:6:3"
                  },
                  "scope": 1030,
                  "src": "3296:178:3",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1085
                  ],
                  "body": {
                    "id": 656,
                    "nodeType": "Block",
                    "src": "3621:51:3",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 650,
                              "name": "_allowances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 544,
                              "src": "3638:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 652,
                            "indexExpression": {
                              "id": 651,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 643,
                              "src": "3650:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3638:18:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 654,
                          "indexExpression": {
                            "id": 653,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 645,
                            "src": "3657:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3638:27:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 649,
                        "id": 655,
                        "nodeType": "Return",
                        "src": "3631:34:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 641,
                    "nodeType": "StructuredDocumentation",
                    "src": "3480:47:3",
                    "text": " @dev See {IERC20-allowance}."
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 657,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "3541:9:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 646,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 643,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "3559:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 657,
                        "src": "3551:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 642,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3551:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 645,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "3574:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 657,
                        "src": "3566:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 644,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3566:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3550:32:3"
                  },
                  "returnParameters": {
                    "id": 649,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 648,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 657,
                        "src": "3612:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 647,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3612:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3611:9:3"
                  },
                  "scope": 1030,
                  "src": "3532:140:3",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1095
                  ],
                  "body": {
                    "id": 680,
                    "nodeType": "Block",
                    "src": "4058:107:3",
                    "statements": [
                      {
                        "assignments": [
                          668
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 668,
                            "mutability": "mutable",
                            "name": "owner",
                            "nameLocation": "4076:5:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 680,
                            "src": "4068:13:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 667,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4068:7:3",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 671,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 669,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1192,
                            "src": "4084:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 670,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4084:12:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4068:28:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 673,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 668,
                              "src": "4115:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 674,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 660,
                              "src": "4122:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 675,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 662,
                              "src": "4131:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 672,
                            "name": "_approve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              921,
                              981
                            ],
                            "referencedDeclaration": 921,
                            "src": "4106:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 676,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4106:31:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 677,
                        "nodeType": "ExpressionStatement",
                        "src": "4106:31:3"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 678,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4154:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 666,
                        "id": 679,
                        "nodeType": "Return",
                        "src": "4147:11:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 658,
                    "nodeType": "StructuredDocumentation",
                    "src": "3678:296:3",
                    "text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 681,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "3988:7:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 663,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 660,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "4004:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 681,
                        "src": "3996:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 659,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3996:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 662,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "4021:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 681,
                        "src": "4013:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 661,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4013:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3995:32:3"
                  },
                  "returnParameters": {
                    "id": 666,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 665,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 681,
                        "src": "4052:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 664,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4052:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4051:6:3"
                  },
                  "scope": 1030,
                  "src": "3979:186:3",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1107
                  ],
                  "body": {
                    "id": 712,
                    "nodeType": "Block",
                    "src": "4850:151:3",
                    "statements": [
                      {
                        "assignments": [
                          694
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 694,
                            "mutability": "mutable",
                            "name": "spender",
                            "nameLocation": "4868:7:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 712,
                            "src": "4860:15:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 693,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4860:7:3",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 697,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 695,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1192,
                            "src": "4878:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 696,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4878:12:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4860:30:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 699,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 684,
                              "src": "4916:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 700,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 694,
                              "src": "4922:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 701,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 688,
                              "src": "4931:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 698,
                            "name": "_spendAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1029,
                            "src": "4900:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 702,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4900:37:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 703,
                        "nodeType": "ExpressionStatement",
                        "src": "4900:37:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 705,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 684,
                              "src": "4957:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 706,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 686,
                              "src": "4963:2:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 707,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 688,
                              "src": "4967:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 704,
                            "name": "_transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 760,
                            "src": "4947:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 708,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4947:26:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 709,
                        "nodeType": "ExpressionStatement",
                        "src": "4947:26:3"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 710,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4990:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 692,
                        "id": 711,
                        "nodeType": "Return",
                        "src": "4983:11:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 682,
                    "nodeType": "StructuredDocumentation",
                    "src": "4171:581:3",
                    "text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
                  },
                  "functionSelector": "23b872dd",
                  "id": 713,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "4766:12:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 689,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 684,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "4787:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 713,
                        "src": "4779:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 683,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4779:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 686,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "4801:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 713,
                        "src": "4793:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 685,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4793:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 688,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "4813:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 713,
                        "src": "4805:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 687,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4805:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4778:41:3"
                  },
                  "returnParameters": {
                    "id": 692,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 691,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 713,
                        "src": "4844:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 690,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4844:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4843:6:3"
                  },
                  "scope": 1030,
                  "src": "4757:244:3",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 759,
                    "nodeType": "Block",
                    "src": "5443:231:3",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 728,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 723,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 716,
                            "src": "5457:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 726,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5473:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 725,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5465:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 724,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5465:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 727,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5465:10:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5457:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 737,
                        "nodeType": "IfStatement",
                        "src": "5453:86:3",
                        "trueBody": {
                          "id": 736,
                          "nodeType": "Block",
                          "src": "5477:62:3",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 732,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5525:1:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 731,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "5517:7:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 730,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5517:7:3",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 733,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5517:10:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 729,
                                  "name": "ERC20InvalidSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 395,
                                  "src": "5498:18:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 734,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5498:30:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 735,
                              "nodeType": "RevertStatement",
                              "src": "5491:37:3"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 743,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 738,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 718,
                            "src": "5552:2:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 741,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5566:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 740,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5558:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 739,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5558:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 742,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5558:10:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5552:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 752,
                        "nodeType": "IfStatement",
                        "src": "5548:86:3",
                        "trueBody": {
                          "id": 751,
                          "nodeType": "Block",
                          "src": "5570:64:3",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 747,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5620:1:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 746,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "5612:7:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 745,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5612:7:3",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 748,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5612:10:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 744,
                                  "name": "ERC20InvalidReceiver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 400,
                                  "src": "5591:20:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 749,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5591:32:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 750,
                              "nodeType": "RevertStatement",
                              "src": "5584:39:3"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 754,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 716,
                              "src": "5651:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 755,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 718,
                              "src": "5657:2:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 756,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 720,
                              "src": "5661:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 753,
                            "name": "_update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 837,
                            "src": "5643:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 757,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5643:24:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 758,
                        "nodeType": "ExpressionStatement",
                        "src": "5643:24:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 714,
                    "nodeType": "StructuredDocumentation",
                    "src": "5007:362:3",
                    "text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
                  },
                  "id": 760,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_transfer",
                  "nameLocation": "5383:9:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 721,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 716,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "5401:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 760,
                        "src": "5393:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 715,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5393:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 718,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "5415:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 760,
                        "src": "5407:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 717,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5407:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 720,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "5427:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 760,
                        "src": "5419:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 719,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5419:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5392:41:3"
                  },
                  "returnParameters": {
                    "id": 722,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5443:0:3"
                  },
                  "scope": 1030,
                  "src": "5374:300:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 836,
                    "nodeType": "Block",
                    "src": "6064:1032:3",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 775,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 770,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 763,
                            "src": "6078:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 773,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6094:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 772,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6086:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 771,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6086:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 774,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6086:10:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6078:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 807,
                          "nodeType": "Block",
                          "src": "6252:362:3",
                          "statements": [
                            {
                              "assignments": [
                                782
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 782,
                                  "mutability": "mutable",
                                  "name": "fromBalance",
                                  "nameLocation": "6274:11:3",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 807,
                                  "src": "6266:19:3",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 781,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "6266:7:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 786,
                              "initialValue": {
                                "baseExpression": {
                                  "id": 783,
                                  "name": "_balances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 538,
                                  "src": "6288:9:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 785,
                                "indexExpression": {
                                  "id": 784,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 763,
                                  "src": "6298:4:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6288:15:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "6266:37:3"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 789,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 787,
                                  "name": "fromBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 782,
                                  "src": "6321:11:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "id": 788,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 767,
                                  "src": "6335:5:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6321:19:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 797,
                              "nodeType": "IfStatement",
                              "src": "6317:115:3",
                              "trueBody": {
                                "id": 796,
                                "nodeType": "Block",
                                "src": "6342:90:3",
                                "statements": [
                                  {
                                    "errorCall": {
                                      "arguments": [
                                        {
                                          "id": 791,
                                          "name": "from",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 763,
                                          "src": "6392:4:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 792,
                                          "name": "fromBalance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 782,
                                          "src": "6398:11:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "id": 793,
                                          "name": "value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 767,
                                          "src": "6411:5:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 790,
                                        "name": "ERC20InsufficientBalance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 390,
                                        "src": "6367:24:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
                                          "typeString": "function (address,uint256,uint256) pure returns (error)"
                                        }
                                      },
                                      "id": 794,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "6367:50:3",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_error",
                                        "typeString": "error"
                                      }
                                    },
                                    "id": 795,
                                    "nodeType": "RevertStatement",
                                    "src": "6360:57:3"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 806,
                              "nodeType": "UncheckedBlock",
                              "src": "6445:159:3",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 804,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "baseExpression": {
                                        "id": 798,
                                        "name": "_balances",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 538,
                                        "src": "6552:9:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                          "typeString": "mapping(address => uint256)"
                                        }
                                      },
                                      "id": 800,
                                      "indexExpression": {
                                        "id": 799,
                                        "name": "from",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 763,
                                        "src": "6562:4:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "nodeType": "IndexAccess",
                                      "src": "6552:15:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 803,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 801,
                                        "name": "fromBalance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 782,
                                        "src": "6570:11:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "id": 802,
                                        "name": "value",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 767,
                                        "src": "6584:5:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "6570:19:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "6552:37:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 805,
                                  "nodeType": "ExpressionStatement",
                                  "src": "6552:37:3"
                                }
                              ]
                            }
                          ]
                        },
                        "id": 808,
                        "nodeType": "IfStatement",
                        "src": "6074:540:3",
                        "trueBody": {
                          "id": 780,
                          "nodeType": "Block",
                          "src": "6098:148:3",
                          "statements": [
                            {
                              "expression": {
                                "id": 778,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 776,
                                  "name": "_totalSupply",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 546,
                                  "src": "6214:12:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "id": 777,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 767,
                                  "src": "6230:5:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "6214:21:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 779,
                              "nodeType": "ExpressionStatement",
                              "src": "6214:21:3"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 814,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 809,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 765,
                            "src": "6628:2:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 812,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6642:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 811,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6634:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 810,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6634:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 813,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6634:10:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6628:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 828,
                          "nodeType": "Block",
                          "src": "6843:206:3",
                          "statements": [
                            {
                              "id": 827,
                              "nodeType": "UncheckedBlock",
                              "src": "6857:182:3",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 825,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "baseExpression": {
                                        "id": 821,
                                        "name": "_balances",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 538,
                                        "src": "7002:9:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                          "typeString": "mapping(address => uint256)"
                                        }
                                      },
                                      "id": 823,
                                      "indexExpression": {
                                        "id": 822,
                                        "name": "to",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 765,
                                        "src": "7012:2:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": true,
                                      "nodeType": "IndexAccess",
                                      "src": "7002:13:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "+=",
                                    "rightHandSide": {
                                      "id": 824,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 767,
                                      "src": "7019:5:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "7002:22:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 826,
                                  "nodeType": "ExpressionStatement",
                                  "src": "7002:22:3"
                                }
                              ]
                            }
                          ]
                        },
                        "id": 829,
                        "nodeType": "IfStatement",
                        "src": "6624:425:3",
                        "trueBody": {
                          "id": 820,
                          "nodeType": "Block",
                          "src": "6646:191:3",
                          "statements": [
                            {
                              "id": 819,
                              "nodeType": "UncheckedBlock",
                              "src": "6660:167:3",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 817,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 815,
                                      "name": "_totalSupply",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 546,
                                      "src": "6791:12:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "-=",
                                    "rightHandSide": {
                                      "id": 816,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 767,
                                      "src": "6807:5:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "6791:21:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 818,
                                  "nodeType": "ExpressionStatement",
                                  "src": "6791:21:3"
                                }
                              ]
                            }
                          ]
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 831,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 763,
                              "src": "7073:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 832,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 765,
                              "src": "7079:2:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 833,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 767,
                              "src": "7083:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 830,
                            "name": "Transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1042,
                            "src": "7064:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 834,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7064:25:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 835,
                        "nodeType": "EmitStatement",
                        "src": "7059:30:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 761,
                    "nodeType": "StructuredDocumentation",
                    "src": "5680:304:3",
                    "text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
                  },
                  "id": 837,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_update",
                  "nameLocation": "5998:7:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 768,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 763,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "6014:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 837,
                        "src": "6006:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 762,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6006:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 765,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "6028:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 837,
                        "src": "6020:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 764,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6020:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 767,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "6040:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 837,
                        "src": "6032:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 766,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6032:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6005:41:3"
                  },
                  "returnParameters": {
                    "id": 769,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6064:0:3"
                  },
                  "scope": 1030,
                  "src": "5989:1107:3",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 869,
                    "nodeType": "Block",
                    "src": "7495:152:3",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 850,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 845,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 840,
                            "src": "7509:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 848,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7528:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 847,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7520:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 846,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "7520:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 849,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7520:10:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "7509:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 859,
                        "nodeType": "IfStatement",
                        "src": "7505:91:3",
                        "trueBody": {
                          "id": 858,
                          "nodeType": "Block",
                          "src": "7532:64:3",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 854,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "7582:1:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 853,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "7574:7:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 852,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "7574:7:3",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 855,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7574:10:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 851,
                                  "name": "ERC20InvalidReceiver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 400,
                                  "src": "7553:20:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 856,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7553:32:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 857,
                              "nodeType": "RevertStatement",
                              "src": "7546:39:3"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 863,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7621:1:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 862,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7613:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 861,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7613:7:3",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 864,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7613:10:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 865,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 840,
                              "src": "7625:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 866,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 842,
                              "src": "7634:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 860,
                            "name": "_update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 837,
                            "src": "7605:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 867,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7605:35:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 868,
                        "nodeType": "ExpressionStatement",
                        "src": "7605:35:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 838,
                    "nodeType": "StructuredDocumentation",
                    "src": "7102:332:3",
                    "text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
                  },
                  "id": 870,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_mint",
                  "nameLocation": "7448:5:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 843,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 840,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "7462:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 870,
                        "src": "7454:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 839,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7454:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 842,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "7479:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 870,
                        "src": "7471:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 841,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7471:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7453:32:3"
                  },
                  "returnParameters": {
                    "id": 844,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7495:0:3"
                  },
                  "scope": 1030,
                  "src": "7439:208:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 902,
                    "nodeType": "Block",
                    "src": "8021:150:3",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 883,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 878,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 873,
                            "src": "8035:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 881,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8054:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 880,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "8046:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 879,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "8046:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 882,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8046:10:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "8035:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 892,
                        "nodeType": "IfStatement",
                        "src": "8031:89:3",
                        "trueBody": {
                          "id": 891,
                          "nodeType": "Block",
                          "src": "8058:62:3",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 887,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "8106:1:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 886,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "8098:7:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 885,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "8098:7:3",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 888,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "8098:10:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 884,
                                  "name": "ERC20InvalidSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 395,
                                  "src": "8079:18:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 889,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8079:30:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 890,
                              "nodeType": "RevertStatement",
                              "src": "8072:37:3"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 894,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 873,
                              "src": "8137:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 897,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8154:1:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 896,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8146:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 895,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8146:7:3",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 898,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8146:10:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 899,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 875,
                              "src": "8158:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 893,
                            "name": "_update",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 837,
                            "src": "8129:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 900,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8129:35:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 901,
                        "nodeType": "ExpressionStatement",
                        "src": "8129:35:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 871,
                    "nodeType": "StructuredDocumentation",
                    "src": "7653:307:3",
                    "text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
                  },
                  "id": 903,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_burn",
                  "nameLocation": "7974:5:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 876,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 873,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "7988:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 903,
                        "src": "7980:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 872,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7980:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 875,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "8005:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 903,
                        "src": "7997:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 874,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7997:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7979:32:3"
                  },
                  "returnParameters": {
                    "id": 877,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8021:0:3"
                  },
                  "scope": 1030,
                  "src": "7965:206:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 920,
                    "nodeType": "Block",
                    "src": "8781:54:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 914,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 906,
                              "src": "8800:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 915,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 908,
                              "src": "8807:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 916,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 910,
                              "src": "8816:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "74727565",
                              "id": 917,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8823:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 913,
                            "name": "_approve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              921,
                              981
                            ],
                            "referencedDeclaration": 981,
                            "src": "8791:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
                              "typeString": "function (address,address,uint256,bool)"
                            }
                          },
                          "id": 918,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8791:37:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 919,
                        "nodeType": "ExpressionStatement",
                        "src": "8791:37:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 904,
                    "nodeType": "StructuredDocumentation",
                    "src": "8177:525:3",
                    "text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
                  },
                  "id": 921,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_approve",
                  "nameLocation": "8716:8:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 911,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 906,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "8733:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 921,
                        "src": "8725:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 905,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8725:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 908,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "8748:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 921,
                        "src": "8740:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 907,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8740:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 910,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "8765:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 921,
                        "src": "8757:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 909,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8757:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8724:47:3"
                  },
                  "returnParameters": {
                    "id": 912,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8781:0:3"
                  },
                  "scope": 1030,
                  "src": "8707:128:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 980,
                    "nodeType": "Block",
                    "src": "9780:334:3",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 938,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 933,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 924,
                            "src": "9794:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 936,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9811:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 935,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9803:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 934,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9803:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 937,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9803:10:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "9794:19:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 947,
                        "nodeType": "IfStatement",
                        "src": "9790:89:3",
                        "trueBody": {
                          "id": 946,
                          "nodeType": "Block",
                          "src": "9815:64:3",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 942,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "9865:1:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 941,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "9857:7:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 940,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "9857:7:3",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 943,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9857:10:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 939,
                                  "name": "ERC20InvalidApprover",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 414,
                                  "src": "9836:20:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 944,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9836:32:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 945,
                              "nodeType": "RevertStatement",
                              "src": "9829:39:3"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 953,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 948,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 926,
                            "src": "9892:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 951,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9911:1:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 950,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9903:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 949,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9903:7:3",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 952,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9903:10:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "9892:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 962,
                        "nodeType": "IfStatement",
                        "src": "9888:90:3",
                        "trueBody": {
                          "id": 961,
                          "nodeType": "Block",
                          "src": "9915:63:3",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 957,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "9964:1:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 956,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "9956:7:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 955,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "9956:7:3",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 958,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9956:10:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 954,
                                  "name": "ERC20InvalidSpender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 419,
                                  "src": "9936:19:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 959,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9936:31:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 960,
                              "nodeType": "RevertStatement",
                              "src": "9929:38:3"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 969,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 963,
                                "name": "_allowances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 544,
                                "src": "9987:11:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 966,
                              "indexExpression": {
                                "id": 964,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 924,
                                "src": "9999:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9987:18:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 967,
                            "indexExpression": {
                              "id": 965,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 926,
                              "src": "10006:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "9987:27:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 968,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 928,
                            "src": "10017:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9987:35:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 970,
                        "nodeType": "ExpressionStatement",
                        "src": "9987:35:3"
                      },
                      {
                        "condition": {
                          "id": 971,
                          "name": "emitEvent",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 930,
                          "src": "10036:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 979,
                        "nodeType": "IfStatement",
                        "src": "10032:76:3",
                        "trueBody": {
                          "id": 978,
                          "nodeType": "Block",
                          "src": "10047:61:3",
                          "statements": [
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 973,
                                    "name": "owner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 924,
                                    "src": "10075:5:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 974,
                                    "name": "spender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 926,
                                    "src": "10082:7:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 975,
                                    "name": "value",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 928,
                                    "src": "10091:5:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 972,
                                  "name": "Approval",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1051,
                                  "src": "10066:8:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,address,uint256)"
                                  }
                                },
                                "id": 976,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10066:31:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 977,
                              "nodeType": "EmitStatement",
                              "src": "10061:36:3"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 922,
                    "nodeType": "StructuredDocumentation",
                    "src": "8841:836:3",
                    "text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
                  },
                  "id": 981,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_approve",
                  "nameLocation": "9691:8:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 931,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 924,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "9708:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 981,
                        "src": "9700:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 923,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9700:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 926,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "9723:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 981,
                        "src": "9715:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 925,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9715:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 928,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "9740:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 981,
                        "src": "9732:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 927,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9732:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 930,
                        "mutability": "mutable",
                        "name": "emitEvent",
                        "nameLocation": "9752:9:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 981,
                        "src": "9747:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 929,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "9747:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9699:63:3"
                  },
                  "returnParameters": {
                    "id": 932,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9780:0:3"
                  },
                  "scope": 1030,
                  "src": "9682:432:3",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1028,
                    "nodeType": "Block",
                    "src": "10485:387:3",
                    "statements": [
                      {
                        "assignments": [
                          992
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 992,
                            "mutability": "mutable",
                            "name": "currentAllowance",
                            "nameLocation": "10503:16:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 1028,
                            "src": "10495:24:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 991,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "10495:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 997,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 994,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 984,
                              "src": "10532:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 995,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 986,
                              "src": "10539:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 993,
                            "name": "allowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 657,
                            "src": "10522:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view returns (uint256)"
                            }
                          },
                          "id": 996,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10522:25:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10495:52:3"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1004,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 998,
                            "name": "currentAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 992,
                            "src": "10561:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1001,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "10585:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 1000,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "10585:7:3",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  }
                                ],
                                "id": 999,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -27,
                                "src": "10580:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 1002,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10580:13:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_uint256",
                                "typeString": "type(uint256)"
                              }
                            },
                            "id": 1003,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "10594:3:3",
                            "memberName": "max",
                            "nodeType": "MemberAccess",
                            "src": "10580:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10561:36:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1027,
                        "nodeType": "IfStatement",
                        "src": "10557:309:3",
                        "trueBody": {
                          "id": 1026,
                          "nodeType": "Block",
                          "src": "10599:267:3",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1007,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1005,
                                  "name": "currentAllowance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 992,
                                  "src": "10617:16:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "id": 1006,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 988,
                                  "src": "10636:5:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10617:24:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1015,
                              "nodeType": "IfStatement",
                              "src": "10613:130:3",
                              "trueBody": {
                                "id": 1014,
                                "nodeType": "Block",
                                "src": "10643:100:3",
                                "statements": [
                                  {
                                    "errorCall": {
                                      "arguments": [
                                        {
                                          "id": 1009,
                                          "name": "spender",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 986,
                                          "src": "10695:7:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 1010,
                                          "name": "currentAllowance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 992,
                                          "src": "10704:16:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        {
                                          "id": 1011,
                                          "name": "value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 988,
                                          "src": "10722:5:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 1008,
                                        "name": "ERC20InsufficientAllowance",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 409,
                                        "src": "10668:26:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
                                          "typeString": "function (address,uint256,uint256) pure returns (error)"
                                        }
                                      },
                                      "id": 1012,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "10668:60:3",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_error",
                                        "typeString": "error"
                                      }
                                    },
                                    "id": 1013,
                                    "nodeType": "RevertStatement",
                                    "src": "10661:67:3"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 1025,
                              "nodeType": "UncheckedBlock",
                              "src": "10756:100:3",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 1017,
                                        "name": "owner",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 984,
                                        "src": "10793:5:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "id": 1018,
                                        "name": "spender",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 986,
                                        "src": "10800:7:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 1021,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 1019,
                                          "name": "currentAllowance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 992,
                                          "src": "10809:16:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "id": 1020,
                                          "name": "value",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 988,
                                          "src": "10828:5:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "10809:24:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      {
                                        "hexValue": "66616c7365",
                                        "id": 1022,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "10835:5:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "value": "false"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      ],
                                      "id": 1016,
                                      "name": "_approve",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [
                                        921,
                                        981
                                      ],
                                      "referencedDeclaration": 981,
                                      "src": "10784:8:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
                                        "typeString": "function (address,address,uint256,bool)"
                                      }
                                    },
                                    "id": 1023,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "10784:57:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 1024,
                                  "nodeType": "ExpressionStatement",
                                  "src": "10784:57:3"
                                }
                              ]
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 982,
                    "nodeType": "StructuredDocumentation",
                    "src": "10120:271:3",
                    "text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
                  },
                  "id": 1029,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_spendAllowance",
                  "nameLocation": "10405:15:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 989,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 984,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "10429:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1029,
                        "src": "10421:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 983,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10421:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 986,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "10444:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1029,
                        "src": "10436:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 985,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10436:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 988,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "10461:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1029,
                        "src": "10453:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 987,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10453:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10420:47:3"
                  },
                  "returnParameters": {
                    "id": 990,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10485:0:3"
                  },
                  "scope": 1030,
                  "src": "10396:476:3",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 1031,
              "src": "1106:9768:3",
              "usedErrors": [
                390,
                395,
                400,
                409,
                414,
                419
              ],
              "usedEvents": [
                1042,
                1051
              ]
            }
          ],
          "src": "105:10770:3"
        },
        "id": 3
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
          "exportedSymbols": {
            "IERC20": [
              1108
            ]
          },
          "id": 1109,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1032,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "106:24:4"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC20",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 1033,
                "nodeType": "StructuredDocumentation",
                "src": "132:71:4",
                "text": " @dev Interface of the ERC-20 standard as defined in the ERC."
              },
              "fullyImplemented": false,
              "id": 1108,
              "linearizedBaseContracts": [
                1108
              ],
              "name": "IERC20",
              "nameLocation": "214:6:4",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1034,
                    "nodeType": "StructuredDocumentation",
                    "src": "227:158:4",
                    "text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
                  },
                  "eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
                  "id": 1042,
                  "name": "Transfer",
                  "nameLocation": "396:8:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1041,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1036,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "421:4:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1042,
                        "src": "405:20:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1035,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "405:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1038,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "443:2:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1042,
                        "src": "427:18:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1037,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "427:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1040,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "455:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1042,
                        "src": "447:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1039,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "447:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "404:57:4"
                  },
                  "src": "390:72:4"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1043,
                    "nodeType": "StructuredDocumentation",
                    "src": "468:148:4",
                    "text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
                  },
                  "eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
                  "id": 1051,
                  "name": "Approval",
                  "nameLocation": "627:8:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1050,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1045,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "652:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1051,
                        "src": "636:21:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1044,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "636:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1047,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "675:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1051,
                        "src": "659:23:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1046,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "659:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1049,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "692:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1051,
                        "src": "684:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1048,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "684:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "635:63:4"
                  },
                  "src": "621:78:4"
                },
                {
                  "documentation": {
                    "id": 1052,
                    "nodeType": "StructuredDocumentation",
                    "src": "705:65:4",
                    "text": " @dev Returns the value of tokens in existence."
                  },
                  "functionSelector": "18160ddd",
                  "id": 1057,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "784:11:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1053,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "795:2:4"
                  },
                  "returnParameters": {
                    "id": 1056,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1055,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1057,
                        "src": "821:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1054,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "821:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "820:9:4"
                  },
                  "scope": 1108,
                  "src": "775:55:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1058,
                    "nodeType": "StructuredDocumentation",
                    "src": "836:71:4",
                    "text": " @dev Returns the value of tokens owned by `account`."
                  },
                  "functionSelector": "70a08231",
                  "id": 1065,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "921:9:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1061,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1060,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "939:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1065,
                        "src": "931:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1059,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "931:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "930:17:4"
                  },
                  "returnParameters": {
                    "id": 1064,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1063,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1065,
                        "src": "971:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1062,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "971:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "970:9:4"
                  },
                  "scope": 1108,
                  "src": "912:68:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1066,
                    "nodeType": "StructuredDocumentation",
                    "src": "986:213:4",
                    "text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 1075,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "1213:8:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1071,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1068,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1230:2:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1075,
                        "src": "1222:10:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1067,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1222:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1070,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1242:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1075,
                        "src": "1234:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1069,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1234:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1221:27:4"
                  },
                  "returnParameters": {
                    "id": 1074,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1073,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1075,
                        "src": "1267:4:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1072,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1267:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1266:6:4"
                  },
                  "scope": 1108,
                  "src": "1204:69:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1076,
                    "nodeType": "StructuredDocumentation",
                    "src": "1279:264:4",
                    "text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 1085,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "1557:9:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1081,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1078,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1575:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1085,
                        "src": "1567:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1077,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1567:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1080,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1590:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1085,
                        "src": "1582:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1079,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1582:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1566:32:4"
                  },
                  "returnParameters": {
                    "id": 1084,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1083,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1085,
                        "src": "1622:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1082,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1622:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1621:9:4"
                  },
                  "scope": 1108,
                  "src": "1548:83:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1086,
                    "nodeType": "StructuredDocumentation",
                    "src": "1637:667:4",
                    "text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 1095,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "2318:7:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1091,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1088,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "2334:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1095,
                        "src": "2326:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1087,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2326:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1090,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2351:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1095,
                        "src": "2343:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1089,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2343:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2325:32:4"
                  },
                  "returnParameters": {
                    "id": 1094,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1093,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1095,
                        "src": "2376:4:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1092,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2376:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2375:6:4"
                  },
                  "scope": 1108,
                  "src": "2309:73:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1096,
                    "nodeType": "StructuredDocumentation",
                    "src": "2388:297:4",
                    "text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "23b872dd",
                  "id": 1107,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "2699:12:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1103,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1098,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "2720:4:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1107,
                        "src": "2712:12:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1097,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2712:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1100,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2734:2:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1107,
                        "src": "2726:10:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1099,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2726:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1102,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2746:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1107,
                        "src": "2738:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1101,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2738:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2711:41:4"
                  },
                  "returnParameters": {
                    "id": 1106,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1105,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1107,
                        "src": "2771:4:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1104,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2771:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2770:6:4"
                  },
                  "scope": 1108,
                  "src": "2690:87:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1109,
              "src": "204:2575:4",
              "usedErrors": [],
              "usedEvents": [
                1042,
                1051
              ]
            }
          ],
          "src": "106:2674:4"
        },
        "id": 4
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
          "exportedSymbols": {
            "Context": [
              1210
            ],
            "ERC20": [
              1030
            ],
            "ERC20Burnable": [
              1154
            ]
          },
          "id": 1155,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1110,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "124:24:5"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
              "file": "../ERC20.sol",
              "id": 1112,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1155,
              "sourceUnit": 1031,
              "src": "150:35:5",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1111,
                    "name": "ERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1030,
                    "src": "158:5:5",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../../../utils/Context.sol",
              "id": 1114,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1155,
              "sourceUnit": 1211,
              "src": "186:51:5",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1113,
                    "name": "Context",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1210,
                    "src": "194:7:5",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1116,
                    "name": "Context",
                    "nameLocations": [
                      "483:7:5"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1210,
                    "src": "483:7:5"
                  },
                  "id": 1117,
                  "nodeType": "InheritanceSpecifier",
                  "src": "483:7:5"
                },
                {
                  "baseName": {
                    "id": 1118,
                    "name": "ERC20",
                    "nameLocations": [
                      "492:5:5"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1030,
                    "src": "492:5:5"
                  },
                  "id": 1119,
                  "nodeType": "InheritanceSpecifier",
                  "src": "492:5:5"
                }
              ],
              "canonicalName": "ERC20Burnable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 1115,
                "nodeType": "StructuredDocumentation",
                "src": "239:208:5",
                "text": " @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."
              },
              "fullyImplemented": true,
              "id": 1154,
              "linearizedBaseContracts": [
                1154,
                1030,
                420,
                1180,
                1108,
                1210
              ],
              "name": "ERC20Burnable",
              "nameLocation": "466:13:5",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 1131,
                    "nodeType": "Block",
                    "src": "662:43:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1126,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1192,
                                "src": "678:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 1127,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "678:12:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1128,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1122,
                              "src": "692:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1125,
                            "name": "_burn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 903,
                            "src": "672:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1129,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "672:26:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1130,
                        "nodeType": "ExpressionStatement",
                        "src": "672:26:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1120,
                    "nodeType": "StructuredDocumentation",
                    "src": "504:109:5",
                    "text": " @dev Destroys a `value` amount of tokens from the caller.\n See {ERC20-_burn}."
                  },
                  "functionSelector": "42966c68",
                  "id": 1132,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "burn",
                  "nameLocation": "627:4:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1123,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1122,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "640:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1132,
                        "src": "632:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1121,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "632:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "631:15:5"
                  },
                  "returnParameters": {
                    "id": 1124,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "662:0:5"
                  },
                  "scope": 1154,
                  "src": "618:87:5",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1152,
                    "nodeType": "Block",
                    "src": "1086:93:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1141,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1135,
                              "src": "1112:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1142,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1192,
                                "src": "1121:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 1143,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1121:12:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1144,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1137,
                              "src": "1135:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1140,
                            "name": "_spendAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1029,
                            "src": "1096:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1145,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1096:45:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1146,
                        "nodeType": "ExpressionStatement",
                        "src": "1096:45:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1148,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1135,
                              "src": "1157:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1149,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1137,
                              "src": "1166:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1147,
                            "name": "_burn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 903,
                            "src": "1151:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1150,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1151:21:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1151,
                        "nodeType": "ExpressionStatement",
                        "src": "1151:21:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1133,
                    "nodeType": "StructuredDocumentation",
                    "src": "711:305:5",
                    "text": " @dev Destroys a `value` amount of tokens from `account`, deducting from\n the caller's allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `value`."
                  },
                  "functionSelector": "79cc6790",
                  "id": 1153,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "burnFrom",
                  "nameLocation": "1030:8:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1138,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1135,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "1047:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1153,
                        "src": "1039:15:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1134,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1039:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1137,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1064:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1153,
                        "src": "1056:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1136,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1056:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1038:32:5"
                  },
                  "returnParameters": {
                    "id": 1139,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1086:0:5"
                  },
                  "scope": 1154,
                  "src": "1021:158:5",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                }
              ],
              "scope": 1155,
              "src": "448:733:5",
              "usedErrors": [
                390,
                395,
                400,
                409,
                414,
                419
              ],
              "usedEvents": [
                1042,
                1051
              ]
            }
          ],
          "src": "124:1058:5"
        },
        "id": 5
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
          "exportedSymbols": {
            "IERC20": [
              1108
            ],
            "IERC20Metadata": [
              1180
            ]
          },
          "id": 1181,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1156,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "125:24:6"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "../IERC20.sol",
              "id": 1158,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1181,
              "sourceUnit": 1109,
              "src": "151:37:6",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1157,
                    "name": "IERC20",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1108,
                    "src": "159:6:6",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1160,
                    "name": "IERC20",
                    "nameLocations": [
                      "306:6:6"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1108,
                    "src": "306:6:6"
                  },
                  "id": 1161,
                  "nodeType": "InheritanceSpecifier",
                  "src": "306:6:6"
                }
              ],
              "canonicalName": "IERC20Metadata",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 1159,
                "nodeType": "StructuredDocumentation",
                "src": "190:87:6",
                "text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
              },
              "fullyImplemented": false,
              "id": 1180,
              "linearizedBaseContracts": [
                1180,
                1108
              ],
              "name": "IERC20Metadata",
              "nameLocation": "288:14:6",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1162,
                    "nodeType": "StructuredDocumentation",
                    "src": "319:54:6",
                    "text": " @dev Returns the name of the token."
                  },
                  "functionSelector": "06fdde03",
                  "id": 1167,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "name",
                  "nameLocation": "387:4:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1163,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "391:2:6"
                  },
                  "returnParameters": {
                    "id": 1166,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1165,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1167,
                        "src": "417:13:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1164,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "417:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "416:15:6"
                  },
                  "scope": 1180,
                  "src": "378:54:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1168,
                    "nodeType": "StructuredDocumentation",
                    "src": "438:56:6",
                    "text": " @dev Returns the symbol of the token."
                  },
                  "functionSelector": "95d89b41",
                  "id": 1173,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "symbol",
                  "nameLocation": "508:6:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1169,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "514:2:6"
                  },
                  "returnParameters": {
                    "id": 1172,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1171,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1173,
                        "src": "540:13:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1170,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "540:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "539:15:6"
                  },
                  "scope": 1180,
                  "src": "499:56:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1174,
                    "nodeType": "StructuredDocumentation",
                    "src": "561:65:6",
                    "text": " @dev Returns the decimals places of the token."
                  },
                  "functionSelector": "313ce567",
                  "id": 1179,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nameLocation": "640:8:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1175,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "648:2:6"
                  },
                  "returnParameters": {
                    "id": 1178,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1177,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1179,
                        "src": "674:5:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 1176,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "674:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "673:7:6"
                  },
                  "scope": 1180,
                  "src": "631:50:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1181,
              "src": "278:405:6",
              "usedErrors": [],
              "usedEvents": [
                1042,
                1051
              ]
            }
          ],
          "src": "125:559:6"
        },
        "id": 6
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
          "exportedSymbols": {
            "Context": [
              1210
            ]
          },
          "id": 1211,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1182,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "101:24:7"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "Context",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 1183,
                "nodeType": "StructuredDocumentation",
                "src": "127:496:7",
                "text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
              },
              "fullyImplemented": true,
              "id": 1210,
              "linearizedBaseContracts": [
                1210
              ],
              "name": "Context",
              "nameLocation": "642:7:7",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 1191,
                    "nodeType": "Block",
                    "src": "718:34:7",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 1188,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "735:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "739:6:7",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "735:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 1187,
                        "id": 1190,
                        "nodeType": "Return",
                        "src": "728:17:7"
                      }
                    ]
                  },
                  "id": 1192,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgSender",
                  "nameLocation": "665:10:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1184,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "675:2:7"
                  },
                  "returnParameters": {
                    "id": 1187,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1186,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1192,
                        "src": "709:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1185,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "709:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "708:9:7"
                  },
                  "scope": 1210,
                  "src": "656:96:7",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1200,
                    "nodeType": "Block",
                    "src": "825:32:7",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 1197,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "842:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1198,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "846:4:7",
                          "memberName": "data",
                          "nodeType": "MemberAccess",
                          "src": "842:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        "functionReturnParameters": 1196,
                        "id": 1199,
                        "nodeType": "Return",
                        "src": "835:15:7"
                      }
                    ]
                  },
                  "id": 1201,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgData",
                  "nameLocation": "767:8:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1193,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "775:2:7"
                  },
                  "returnParameters": {
                    "id": 1196,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1195,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1201,
                        "src": "809:14:7",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1194,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "809:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "808:16:7"
                  },
                  "scope": 1210,
                  "src": "758:99:7",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1208,
                    "nodeType": "Block",
                    "src": "935:25:7",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 1206,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "952:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 1205,
                        "id": 1207,
                        "nodeType": "Return",
                        "src": "945:8:7"
                      }
                    ]
                  },
                  "id": 1209,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_contextSuffixLength",
                  "nameLocation": "872:20:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1202,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "892:2:7"
                  },
                  "returnParameters": {
                    "id": 1205,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1204,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1209,
                        "src": "926:7:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1203,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "926:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "925:9:7"
                  },
                  "scope": 1210,
                  "src": "863:97:7",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 1211,
              "src": "624:338:7",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "101:862:7"
        },
        "id": 7
      },
      "@openzeppelin/contracts/utils/Pausable.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
          "exportedSymbols": {
            "Context": [
              1210
            ],
            "Pausable": [
              1318
            ]
          },
          "id": 1319,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1212,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "102:24:8"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../utils/Context.sol",
              "id": 1214,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1319,
              "sourceUnit": 1211,
              "src": "128:45:8",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1213,
                    "name": "Context",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1210,
                    "src": "136:7:8",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1216,
                    "name": "Context",
                    "nameLocations": [
                      "645:7:8"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1210,
                    "src": "645:7:8"
                  },
                  "id": 1217,
                  "nodeType": "InheritanceSpecifier",
                  "src": "645:7:8"
                }
              ],
              "canonicalName": "Pausable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 1215,
                "nodeType": "StructuredDocumentation",
                "src": "175:439:8",
                "text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
              },
              "fullyImplemented": true,
              "id": 1318,
              "linearizedBaseContracts": [
                1318,
                1210
              ],
              "name": "Pausable",
              "nameLocation": "633:8:8",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 1219,
                  "mutability": "mutable",
                  "name": "_paused",
                  "nameLocation": "672:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1318,
                  "src": "659:20:8",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1218,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "659:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1220,
                    "nodeType": "StructuredDocumentation",
                    "src": "686:73:8",
                    "text": " @dev Emitted when the pause is triggered by `account`."
                  },
                  "eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
                  "id": 1224,
                  "name": "Paused",
                  "nameLocation": "770:6:8",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1223,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1222,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "785:7:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1224,
                        "src": "777:15:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1221,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "777:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "776:17:8"
                  },
                  "src": "764:30:8"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1225,
                    "nodeType": "StructuredDocumentation",
                    "src": "800:70:8",
                    "text": " @dev Emitted when the pause is lifted by `account`."
                  },
                  "eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
                  "id": 1229,
                  "name": "Unpaused",
                  "nameLocation": "881:8:8",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1228,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1227,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "898:7:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1229,
                        "src": "890:15:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1226,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "890:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "889:17:8"
                  },
                  "src": "875:32:8"
                },
                {
                  "documentation": {
                    "id": 1230,
                    "nodeType": "StructuredDocumentation",
                    "src": "913:76:8",
                    "text": " @dev The operation failed because the contract is paused."
                  },
                  "errorSelector": "d93c0665",
                  "id": 1232,
                  "name": "EnforcedPause",
                  "nameLocation": "1000:13:8",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1231,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1013:2:8"
                  },
                  "src": "994:22:8"
                },
                {
                  "documentation": {
                    "id": 1233,
                    "nodeType": "StructuredDocumentation",
                    "src": "1022:80:8",
                    "text": " @dev The operation failed because the contract is not paused."
                  },
                  "errorSelector": "8dfc202b",
                  "id": 1235,
                  "name": "ExpectedPause",
                  "nameLocation": "1113:13:8",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1234,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1126:2:8"
                  },
                  "src": "1107:22:8"
                },
                {
                  "body": {
                    "id": 1242,
                    "nodeType": "Block",
                    "src": "1340:47:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1238,
                            "name": "_requireNotPaused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1272,
                            "src": "1350:17:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 1239,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1350:19:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1240,
                        "nodeType": "ExpressionStatement",
                        "src": "1350:19:8"
                      },
                      {
                        "id": 1241,
                        "nodeType": "PlaceholderStatement",
                        "src": "1379:1:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1236,
                    "nodeType": "StructuredDocumentation",
                    "src": "1135:175:8",
                    "text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
                  },
                  "id": 1243,
                  "name": "whenNotPaused",
                  "nameLocation": "1324:13:8",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 1237,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1337:2:8"
                  },
                  "src": "1315:72:8",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1250,
                    "nodeType": "Block",
                    "src": "1587:44:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1246,
                            "name": "_requirePaused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1285,
                            "src": "1597:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 1247,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1597:16:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1248,
                        "nodeType": "ExpressionStatement",
                        "src": "1597:16:8"
                      },
                      {
                        "id": 1249,
                        "nodeType": "PlaceholderStatement",
                        "src": "1623:1:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1244,
                    "nodeType": "StructuredDocumentation",
                    "src": "1393:167:8",
                    "text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
                  },
                  "id": 1251,
                  "name": "whenPaused",
                  "nameLocation": "1574:10:8",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 1245,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1584:2:8"
                  },
                  "src": "1565:66:8",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1259,
                    "nodeType": "Block",
                    "src": "1779:31:8",
                    "statements": [
                      {
                        "expression": {
                          "id": 1257,
                          "name": "_paused",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1219,
                          "src": "1796:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 1256,
                        "id": 1258,
                        "nodeType": "Return",
                        "src": "1789:14:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1252,
                    "nodeType": "StructuredDocumentation",
                    "src": "1637:84:8",
                    "text": " @dev Returns true if the contract is paused, and false otherwise."
                  },
                  "functionSelector": "5c975abb",
                  "id": 1260,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "paused",
                  "nameLocation": "1735:6:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1253,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1741:2:8"
                  },
                  "returnParameters": {
                    "id": 1256,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1255,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1260,
                        "src": "1773:4:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1254,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1773:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1772:6:8"
                  },
                  "scope": 1318,
                  "src": "1726:84:8",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1271,
                    "nodeType": "Block",
                    "src": "1929:77:8",
                    "statements": [
                      {
                        "condition": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1264,
                            "name": "paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1260,
                            "src": "1943:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                              "typeString": "function () view returns (bool)"
                            }
                          },
                          "id": 1265,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1943:8:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1270,
                        "nodeType": "IfStatement",
                        "src": "1939:61:8",
                        "trueBody": {
                          "id": 1269,
                          "nodeType": "Block",
                          "src": "1953:47:8",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 1266,
                                  "name": "EnforcedPause",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1232,
                                  "src": "1974:13:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 1267,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1974:15:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 1268,
                              "nodeType": "RevertStatement",
                              "src": "1967:22:8"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1261,
                    "nodeType": "StructuredDocumentation",
                    "src": "1816:57:8",
                    "text": " @dev Throws if the contract is paused."
                  },
                  "id": 1272,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_requireNotPaused",
                  "nameLocation": "1887:17:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1262,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1904:2:8"
                  },
                  "returnParameters": {
                    "id": 1263,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1929:0:8"
                  },
                  "scope": 1318,
                  "src": "1878:128:8",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1284,
                    "nodeType": "Block",
                    "src": "2126:78:8",
                    "statements": [
                      {
                        "condition": {
                          "id": 1278,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "2140:9:8",
                          "subExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1276,
                              "name": "paused",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1260,
                              "src": "2141:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                                "typeString": "function () view returns (bool)"
                              }
                            },
                            "id": 1277,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2141:8:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1283,
                        "nodeType": "IfStatement",
                        "src": "2136:62:8",
                        "trueBody": {
                          "id": 1282,
                          "nodeType": "Block",
                          "src": "2151:47:8",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 1279,
                                  "name": "ExpectedPause",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1235,
                                  "src": "2172:13:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                    "typeString": "function () pure returns (error)"
                                  }
                                },
                                "id": 1280,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2172:15:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 1281,
                              "nodeType": "RevertStatement",
                              "src": "2165:22:8"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1273,
                    "nodeType": "StructuredDocumentation",
                    "src": "2012:61:8",
                    "text": " @dev Throws if the contract is not paused."
                  },
                  "id": 1285,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_requirePaused",
                  "nameLocation": "2087:14:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1274,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2101:2:8"
                  },
                  "returnParameters": {
                    "id": 1275,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2126:0:8"
                  },
                  "scope": 1318,
                  "src": "2078:126:8",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1300,
                    "nodeType": "Block",
                    "src": "2388:66:8",
                    "statements": [
                      {
                        "expression": {
                          "id": 1293,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1291,
                            "name": "_paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1219,
                            "src": "2398:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 1292,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2408:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "2398:14:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1294,
                        "nodeType": "ExpressionStatement",
                        "src": "2398:14:8"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1296,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1192,
                                "src": "2434:10:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 1297,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2434:12:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1295,
                            "name": "Paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1224,
                            "src": "2427:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1298,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2427:20:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1299,
                        "nodeType": "EmitStatement",
                        "src": "2422:25:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1286,
                    "nodeType": "StructuredDocumentation",
                    "src": "2210:124:8",
                    "text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
                  },
                  "id": 1301,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1289,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1288,
                        "name": "whenNotPaused",
                        "nameLocations": [
                          "2374:13:8"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1243,
                        "src": "2374:13:8"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2374:13:8"
                    }
                  ],
                  "name": "_pause",
                  "nameLocation": "2348:6:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1287,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2354:2:8"
                  },
                  "returnParameters": {
                    "id": 1290,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2388:0:8"
                  },
                  "scope": 1318,
                  "src": "2339:115:8",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1316,
                    "nodeType": "Block",
                    "src": "2634:69:8",
                    "statements": [
                      {
                        "expression": {
                          "id": 1309,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1307,
                            "name": "_paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1219,
                            "src": "2644:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 1308,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2654:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "2644:15:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1310,
                        "nodeType": "ExpressionStatement",
                        "src": "2644:15:8"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1312,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1192,
                                "src": "2683:10:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 1313,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2683:12:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1311,
                            "name": "Unpaused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1229,
                            "src": "2674:8:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1314,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2674:22:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1315,
                        "nodeType": "EmitStatement",
                        "src": "2669:27:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1302,
                    "nodeType": "StructuredDocumentation",
                    "src": "2460:121:8",
                    "text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
                  },
                  "id": 1317,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1305,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1304,
                        "name": "whenPaused",
                        "nameLocations": [
                          "2623:10:8"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1251,
                        "src": "2623:10:8"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2623:10:8"
                    }
                  ],
                  "name": "_unpause",
                  "nameLocation": "2595:8:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1303,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2603:2:8"
                  },
                  "returnParameters": {
                    "id": 1306,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2634:0:8"
                  },
                  "scope": 1318,
                  "src": "2586:117:8",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 1319,
              "src": "615:2090:8",
              "usedErrors": [
                1232,
                1235
              ],
              "usedEvents": [
                1224,
                1229
              ]
            }
          ],
          "src": "102:2604:8"
        },
        "id": 8
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
          "exportedSymbols": {
            "ERC165": [
              1342
            ],
            "IERC165": [
              1354
            ]
          },
          "id": 1343,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1320,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "114:24:9"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
              "file": "./IERC165.sol",
              "id": 1322,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1343,
              "sourceUnit": 1355,
              "src": "140:38:9",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 1321,
                    "name": "IERC165",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1354,
                    "src": "148:7:9",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1324,
                    "name": "IERC165",
                    "nameLocations": [
                      "688:7:9"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1354,
                    "src": "688:7:9"
                  },
                  "id": 1325,
                  "nodeType": "InheritanceSpecifier",
                  "src": "688:7:9"
                }
              ],
              "canonicalName": "ERC165",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 1323,
                "nodeType": "StructuredDocumentation",
                "src": "180:479:9",
                "text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
              },
              "fullyImplemented": true,
              "id": 1342,
              "linearizedBaseContracts": [
                1342,
                1354
              ],
              "name": "ERC165",
              "nameLocation": "678:6:9",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "baseFunctions": [
                    1353
                  ],
                  "body": {
                    "id": 1340,
                    "nodeType": "Block",
                    "src": "845:64:9",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          "id": 1338,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1333,
                            "name": "interfaceId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1328,
                            "src": "862:11:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1335,
                                  "name": "IERC165",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1354,
                                  "src": "882:7:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC165_$1354_$",
                                    "typeString": "type(contract IERC165)"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_contract$_IERC165_$1354_$",
                                    "typeString": "type(contract IERC165)"
                                  }
                                ],
                                "id": 1334,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -27,
                                "src": "877:4:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 1336,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "877:13:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1354",
                                "typeString": "type(contract IERC165)"
                              }
                            },
                            "id": 1337,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "891:11:9",
                            "memberName": "interfaceId",
                            "nodeType": "MemberAccess",
                            "src": "877:25:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "src": "862:40:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 1332,
                        "id": 1339,
                        "nodeType": "Return",
                        "src": "855:47:9"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1326,
                    "nodeType": "StructuredDocumentation",
                    "src": "702:56:9",
                    "text": " @dev See {IERC165-supportsInterface}."
                  },
                  "functionSelector": "01ffc9a7",
                  "id": 1341,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "supportsInterface",
                  "nameLocation": "772:17:9",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1329,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1328,
                        "mutability": "mutable",
                        "name": "interfaceId",
                        "nameLocation": "797:11:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 1341,
                        "src": "790:18:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 1327,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "790:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "789:20:9"
                  },
                  "returnParameters": {
                    "id": 1332,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1331,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1341,
                        "src": "839:4:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1330,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "839:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "838:6:9"
                  },
                  "scope": 1342,
                  "src": "763:146:9",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                }
              ],
              "scope": 1343,
              "src": "660:251:9",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "114:798:9"
        },
        "id": 9
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
          "exportedSymbols": {
            "IERC165": [
              1354
            ]
          },
          "id": 1355,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1344,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "115:24:10"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC165",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 1345,
                "nodeType": "StructuredDocumentation",
                "src": "141:280:10",
                "text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
              },
              "fullyImplemented": false,
              "id": 1354,
              "linearizedBaseContracts": [
                1354
              ],
              "name": "IERC165",
              "nameLocation": "432:7:10",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1346,
                    "nodeType": "StructuredDocumentation",
                    "src": "446:340:10",
                    "text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
                  },
                  "functionSelector": "01ffc9a7",
                  "id": 1353,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "supportsInterface",
                  "nameLocation": "800:17:10",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1349,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1348,
                        "mutability": "mutable",
                        "name": "interfaceId",
                        "nameLocation": "825:11:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1353,
                        "src": "818:18:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "typeName": {
                          "id": 1347,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "818:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "817:20:10"
                  },
                  "returnParameters": {
                    "id": 1352,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1351,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1353,
                        "src": "861:4:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1350,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "861:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "860:6:10"
                  },
                  "scope": 1354,
                  "src": "791:76:10",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1355,
              "src": "422:447:10",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "115:755:10"
        },
        "id": 10
      },
      "contracts/CampusCredit.sol": {
        "ast": {
          "absolutePath": "contracts/CampusCredit.sol",
          "exportedSymbols": {
            "AccessControl": [
              295
            ],
            "CampusCredit": [
              1736
            ],
            "Context": [
              1210
            ],
            "ERC165": [
              1342
            ],
            "ERC20": [
              1030
            ],
            "ERC20Burnable": [
              1154
            ],
            "IAccessControl": [
              378
            ],
            "IERC20": [
              1108
            ],
            "IERC20Errors": [
              420
            ],
            "IERC20Metadata": [
              1180
            ],
            "Pausable": [
              1318
            ]
          },
          "id": 1737,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1356,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".26"
              ],
              "nodeType": "PragmaDirective",
              "src": "32:24:11"
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
              "id": 1357,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1737,
              "sourceUnit": 1031,
              "src": "58:55:11",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
              "file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
              "id": 1358,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1737,
              "sourceUnit": 1155,
              "src": "114:74:11",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Pausable.sol",
              "file": "@openzeppelin/contracts/utils/Pausable.sol",
              "id": 1359,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1737,
              "sourceUnit": 1319,
              "src": "189:52:11",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
              "file": "@openzeppelin/contracts/access/AccessControl.sol",
              "id": 1360,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1737,
              "sourceUnit": 296,
              "src": "242:58:11",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1362,
                    "name": "ERC20",
                    "nameLocations": [
                      "405:5:11"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1030,
                    "src": "405:5:11"
                  },
                  "id": 1363,
                  "nodeType": "InheritanceSpecifier",
                  "src": "405:5:11"
                },
                {
                  "baseName": {
                    "id": 1364,
                    "name": "ERC20Burnable",
                    "nameLocations": [
                      "412:13:11"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1154,
                    "src": "412:13:11"
                  },
                  "id": 1365,
                  "nodeType": "InheritanceSpecifier",
                  "src": "412:13:11"
                },
                {
                  "baseName": {
                    "id": 1366,
                    "name": "Pausable",
                    "nameLocations": [
                      "427:8:11"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1318,
                    "src": "427:8:11"
                  },
                  "id": 1367,
                  "nodeType": "InheritanceSpecifier",
                  "src": "427:8:11"
                },
                {
                  "baseName": {
                    "id": 1368,
                    "name": "AccessControl",
                    "nameLocations": [
                      "437:13:11"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 295,
                    "src": "437:13:11"
                  },
                  "id": 1369,
                  "nodeType": "InheritanceSpecifier",
                  "src": "437:13:11"
                }
              ],
              "canonicalName": "CampusCredit",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 1361,
                "nodeType": "StructuredDocumentation",
                "src": "302:77:11",
                "text": " @title CampusCredit\n @dev ERC-20 token for transaction on campus"
              },
              "fullyImplemented": true,
              "id": 1736,
              "linearizedBaseContracts": [
                1736,
                295,
                1342,
                1354,
                378,
                1318,
                1154,
                1030,
                420,
                1180,
                1108,
                1210
              ],
              "name": "CampusCredit",
              "nameLocation": "389:12:11",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "functionSelector": "e63ab1e9",
                  "id": 1374,
                  "mutability": "constant",
                  "name": "PAUSER_ROLE",
                  "nameLocation": "505:11:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1736,
                  "src": "481:62:11",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1370,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "481:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": {
                    "arguments": [
                      {
                        "hexValue": "5041555345525f524f4c45",
                        "id": 1372,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "529:13:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
                          "typeString": "literal_string \"PAUSER_ROLE\""
                        },
                        "value": "PAUSER_ROLE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
                          "typeString": "literal_string \"PAUSER_ROLE\""
                        }
                      ],
                      "id": 1371,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "519:9:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "519:24:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "functionSelector": "d5391393",
                  "id": 1379,
                  "mutability": "constant",
                  "name": "MINTER_ROLE",
                  "nameLocation": "573:11:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1736,
                  "src": "549:62:11",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1375,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "549:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": {
                    "arguments": [
                      {
                        "hexValue": "4d494e5445525f524f4c45",
                        "id": 1377,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "597:13:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                          "typeString": "literal_string \"MINTER_ROLE\""
                        },
                        "value": "MINTER_ROLE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
                          "typeString": "literal_string \"MINTER_ROLE\""
                        }
                      ],
                      "id": 1376,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "587:9:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1378,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "587:24:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "257caf9e",
                  "id": 1383,
                  "mutability": "mutable",
                  "name": "dailySpendingLimit",
                  "nameLocation": "679:18:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1736,
                  "src": "644:53:11",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 1382,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 1380,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "652:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "644:27:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 1381,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "663:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "251de801",
                  "id": 1387,
                  "mutability": "mutable",
                  "name": "lastSpendingReset",
                  "nameLocation": "738:17:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1736,
                  "src": "703:52:11",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 1386,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 1384,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "711:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "703:27:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 1385,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "722:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "8aeac501",
                  "id": 1391,
                  "mutability": "mutable",
                  "name": "spentToday",
                  "nameLocation": "796:10:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1736,
                  "src": "761:45:11",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 1390,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 1388,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "769:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "761:27:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 1389,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "780:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "1a2f7167",
                  "id": 1395,
                  "mutability": "mutable",
                  "name": "isMerchant",
                  "nameLocation": "873:10:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1736,
                  "src": "841:42:11",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                    "typeString": "mapping(address => bool)"
                  },
                  "typeName": {
                    "id": 1394,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 1392,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "849:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "841:24:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                      "typeString": "mapping(address => bool)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 1393,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "860:4:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "60caa609",
                  "id": 1399,
                  "mutability": "mutable",
                  "name": "merchantName",
                  "nameLocation": "923:12:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1736,
                  "src": "889:46:11",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
                    "typeString": "mapping(address => string)"
                  },
                  "typeName": {
                    "id": 1398,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 1396,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "897:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "889:26:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
                      "typeString": "mapping(address => string)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 1397,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "908:6:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1437,
                    "nodeType": "Block",
                    "src": "1008:255:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1409,
                              "name": "DEFAULT_ADMIN_ROLE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29,
                              "src": "1029:18:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "expression": {
                                "id": 1410,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1049:3:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1411,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1053:6:11",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1049:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1408,
                            "name": "_grantRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 256,
                            "src": "1018:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) returns (bool)"
                            }
                          },
                          "id": 1412,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1018:42:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1413,
                        "nodeType": "ExpressionStatement",
                        "src": "1018:42:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1415,
                              "name": "PAUSER_ROLE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1374,
                              "src": "1081:11:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "expression": {
                                "id": 1416,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1094:3:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1417,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1098:6:11",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1094:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1414,
                            "name": "_grantRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 256,
                            "src": "1070:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) returns (bool)"
                            }
                          },
                          "id": 1418,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1070:35:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1419,
                        "nodeType": "ExpressionStatement",
                        "src": "1070:35:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1421,
                              "name": "MINTER_ROLE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1379,
                              "src": "1126:11:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "expression": {
                                "id": 1422,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1139:3:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1423,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1143:6:11",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1139:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1420,
                            "name": "_grantRole",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 256,
                            "src": "1115:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (bytes32,address) returns (bool)"
                            }
                          },
                          "id": 1424,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1115:35:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1425,
                        "nodeType": "ExpressionStatement",
                        "src": "1115:35:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1427,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1212:3:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1428,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1216:6:11",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1212:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1434,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1429,
                                "name": "_initialSupply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1401,
                                "src": "1224:14:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1433,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "3130",
                                  "id": 1430,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1241:2:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_10_by_1",
                                    "typeString": "int_const 10"
                                  },
                                  "value": "10"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "**",
                                "rightExpression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 1431,
                                    "name": "decimals",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 594,
                                    "src": "1245:8:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
                                      "typeString": "function () view returns (uint8)"
                                    }
                                  },
                                  "id": 1432,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1245:10:11",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "src": "1241:14:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1224:31:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1426,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 870,
                            "src": "1206:5:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1435,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1206:50:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1436,
                        "nodeType": "ExpressionStatement",
                        "src": "1206:50:11"
                      }
                    ]
                  },
                  "id": 1438,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "hexValue": "43616d70757320437265646974",
                          "id": 1404,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "984:15:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_b0b1590f9cb680acdef26d2e03b64ceae00a46f1623bedd71daa1b471b4ba0d1",
                            "typeString": "literal_string \"Campus Credit\""
                          },
                          "value": "Campus Credit"
                        },
                        {
                          "hexValue": "434352",
                          "id": 1405,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1001:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_3c4a5d4a0e1e4f67f17a62cd3411988e2c86edef6296077a617f43b71a5bfc57",
                            "typeString": "literal_string \"CCR\""
                          },
                          "value": "CCR"
                        }
                      ],
                      "id": 1406,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 1403,
                        "name": "ERC20",
                        "nameLocations": [
                          "978:5:11"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1030,
                        "src": "978:5:11"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "978:29:11"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1402,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1401,
                        "mutability": "mutable",
                        "name": "_initialSupply",
                        "nameLocation": "962:14:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1438,
                        "src": "954:22:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1400,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "954:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "953:24:11"
                  },
                  "returnParameters": {
                    "id": 1407,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1008:0:11"
                  },
                  "scope": 1736,
                  "src": "942:321:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1448,
                    "nodeType": "Block",
                    "src": "1410:25:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1445,
                            "name": "_pause",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1301,
                            "src": "1420:6:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 1446,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1420:8:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1447,
                        "nodeType": "ExpressionStatement",
                        "src": "1420:8:11"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1439,
                    "nodeType": "StructuredDocumentation",
                    "src": "1269:90:11",
                    "text": " @dev Pause all token transfers\n Use case: Emergency / maintenance"
                  },
                  "functionSelector": "8456cb59",
                  "id": 1449,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 1442,
                          "name": "PAUSER_ROLE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1374,
                          "src": "1397:11:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "id": 1443,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1441,
                        "name": "onlyRole",
                        "nameLocations": [
                          "1388:8:11"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 40,
                        "src": "1388:8:11"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1388:21:11"
                    }
                  ],
                  "name": "pause",
                  "nameLocation": "1373:5:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1440,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1378:2:11"
                  },
                  "returnParameters": {
                    "id": 1444,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1410:0:11"
                  },
                  "scope": 1736,
                  "src": "1364:71:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1458,
                    "nodeType": "Block",
                    "src": "1489:27:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1455,
                            "name": "_unpause",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1317,
                            "src": "1499:8:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 1456,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1499:10:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1457,
                        "nodeType": "ExpressionStatement",
                        "src": "1499:10:11"
                      }
                    ]
                  },
                  "functionSelector": "3f4ba83a",
                  "id": 1459,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 1452,
                          "name": "PAUSER_ROLE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1374,
                          "src": "1476:11:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "id": 1453,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1451,
                        "name": "onlyRole",
                        "nameLocations": [
                          "1467:8:11"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 40,
                        "src": "1467:8:11"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1467:21:11"
                    }
                  ],
                  "name": "unpause",
                  "nameLocation": "1450:7:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1450,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1457:2:11"
                  },
                  "returnParameters": {
                    "id": 1454,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1489:0:11"
                  },
                  "scope": 1736,
                  "src": "1441:75:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1510,
                    "nodeType": "Block",
                    "src": "1681:536:11",
                    "statements": [
                      {
                        "assignments": [
                          1471
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1471,
                            "mutability": "mutable",
                            "name": "amount",
                            "nameLocation": "1699:6:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 1510,
                            "src": "1691:14:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1470,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1691:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1478,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1477,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1472,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1464,
                            "src": "1708:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1476,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 1473,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1718:2:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1474,
                                "name": "decimals",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 594,
                                "src": "1722:8:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
                                  "typeString": "function () view returns (uint8)"
                                }
                              },
                              "id": 1475,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1722:10:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "src": "1718:14:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1708:24:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1691:41:11"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1483,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 1479,
                              "name": "dailySpendingLimit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1383,
                              "src": "1921:18:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1481,
                            "indexExpression": {
                              "id": 1480,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1462,
                              "src": "1940:3:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1921:23:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1482,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1947:1:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "1921:27:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1498,
                        "nodeType": "IfStatement",
                        "src": "1917:222:11",
                        "trueBody": {
                          "id": 1497,
                          "nodeType": "Block",
                          "src": "1950:189:11",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1493,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1489,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "baseExpression": {
                                          "id": 1485,
                                          "name": "spentToday",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1391,
                                          "src": "1989:10:11",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                            "typeString": "mapping(address => uint256)"
                                          }
                                        },
                                        "id": 1487,
                                        "indexExpression": {
                                          "id": 1486,
                                          "name": "_to",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1462,
                                          "src": "2000:3:11",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "1989:15:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "+",
                                      "rightExpression": {
                                        "id": 1488,
                                        "name": "amount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1471,
                                        "src": "2007:6:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "1989:24:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "<=",
                                    "rightExpression": {
                                      "baseExpression": {
                                        "id": 1490,
                                        "name": "dailySpendingLimit",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1383,
                                        "src": "2017:18:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                          "typeString": "mapping(address => uint256)"
                                        }
                                      },
                                      "id": 1492,
                                      "indexExpression": {
                                        "id": 1491,
                                        "name": "_to",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1462,
                                        "src": "2036:3:11",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "2017:23:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "1989:51:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "45786365656473206461696c79207370656e64696e67206c696d69742c2063616e27742072656365697665206578747261204343522e",
                                    "id": 1494,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2058:56:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_3dd5d03a42d94c65612aa39a572e29b54b5a7dcbfd89c9430ed0638f6b29d67c",
                                      "typeString": "literal_string \"Exceeds daily spending limit, can't receive extra CCR.\""
                                    },
                                    "value": "Exceeds daily spending limit, can't receive extra CCR."
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_3dd5d03a42d94c65612aa39a572e29b54b5a7dcbfd89c9430ed0638f6b29d67c",
                                      "typeString": "literal_string \"Exceeds daily spending limit, can't receive extra CCR.\""
                                    }
                                  ],
                                  "id": 1484,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "1964:7:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 1495,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1964:164:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1496,
                              "nodeType": "ExpressionStatement",
                              "src": "1964:164:11"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 1503,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1499,
                              "name": "dailySpendingLimit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1383,
                              "src": "2149:18:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1501,
                            "indexExpression": {
                              "id": 1500,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1462,
                              "src": "2168:3:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2149:23:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 1502,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1471,
                            "src": "2176:6:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2149:33:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1504,
                        "nodeType": "ExpressionStatement",
                        "src": "2149:33:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1506,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1462,
                              "src": "2198:3:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1507,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1471,
                              "src": "2203:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1505,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 870,
                            "src": "2192:5:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1508,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2192:18:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1509,
                        "nodeType": "ExpressionStatement",
                        "src": "2192:18:11"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1460,
                    "nodeType": "StructuredDocumentation",
                    "src": "1522:81:11",
                    "text": " @dev Mint new tokens.\n Use case: Top-up student balance."
                  },
                  "functionSelector": "40c10f19",
                  "id": 1511,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 1467,
                          "name": "MINTER_ROLE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1379,
                          "src": "1668:11:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "id": 1468,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1466,
                        "name": "onlyRole",
                        "nameLocations": [
                          "1659:8:11"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 40,
                        "src": "1659:8:11"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1659:21:11"
                    }
                  ],
                  "name": "mint",
                  "nameLocation": "1617:4:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1465,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1462,
                        "mutability": "mutable",
                        "name": "_to",
                        "nameLocation": "1630:3:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1511,
                        "src": "1622:11:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1461,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1622:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1464,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nameLocation": "1643:7:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1511,
                        "src": "1635:15:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1463,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1635:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1621:30:11"
                  },
                  "returnParameters": {
                    "id": 1469,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1681:0:11"
                  },
                  "scope": 1736,
                  "src": "1608:609:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1542,
                    "nodeType": "Block",
                    "src": "2440:159:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1526,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "2458:22:11",
                              "subExpression": {
                                "baseExpression": {
                                  "id": 1523,
                                  "name": "isMerchant",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1395,
                                  "src": "2459:10:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                    "typeString": "mapping(address => bool)"
                                  }
                                },
                                "id": 1525,
                                "indexExpression": {
                                  "id": 1524,
                                  "name": "_merchant",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1514,
                                  "src": "2470:9:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2459:21:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4d65726368616e7420616c726561647920726567697374657265642e",
                              "id": 1527,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2482:30:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_d2fb8b5c7966e68075ae8a0ce6eef76a742f48c6a121de0fee75e7991bb124cf",
                                "typeString": "literal_string \"Merchant already registered.\""
                              },
                              "value": "Merchant already registered."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_d2fb8b5c7966e68075ae8a0ce6eef76a742f48c6a121de0fee75e7991bb124cf",
                                "typeString": "literal_string \"Merchant already registered.\""
                              }
                            ],
                            "id": 1522,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2450:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1528,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2450:63:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1529,
                        "nodeType": "ExpressionStatement",
                        "src": "2450:63:11"
                      },
                      {
                        "expression": {
                          "id": 1534,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1530,
                              "name": "isMerchant",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1395,
                              "src": "2523:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 1532,
                            "indexExpression": {
                              "id": 1531,
                              "name": "_merchant",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1514,
                              "src": "2534:9:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2523:21:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 1533,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2547:4:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "2523:28:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1535,
                        "nodeType": "ExpressionStatement",
                        "src": "2523:28:11"
                      },
                      {
                        "expression": {
                          "id": 1540,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1536,
                              "name": "merchantName",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1399,
                              "src": "2561:12:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
                                "typeString": "mapping(address => string storage ref)"
                              }
                            },
                            "id": 1538,
                            "indexExpression": {
                              "id": 1537,
                              "name": "_merchant",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1514,
                              "src": "2574:9:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2561:23:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1539,
                            "name": "_name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1516,
                            "src": "2587:5:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "2561:31:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 1541,
                        "nodeType": "ExpressionStatement",
                        "src": "2561:31:11"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1512,
                    "nodeType": "StructuredDocumentation",
                    "src": "2223:90:11",
                    "text": " @dev Register merchant.\n Use case: Kafetaria, Bookstore, Laundry."
                  },
                  "functionSelector": "a6c8a384",
                  "id": 1543,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 1519,
                          "name": "DEFAULT_ADMIN_ROLE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29,
                          "src": "2416:18:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "id": 1520,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1518,
                        "name": "onlyRole",
                        "nameLocations": [
                          "2407:8:11"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 40,
                        "src": "2407:8:11"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2407:28:11"
                    }
                  ],
                  "name": "registerMerchant",
                  "nameLocation": "2327:16:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1517,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1514,
                        "mutability": "mutable",
                        "name": "_merchant",
                        "nameLocation": "2352:9:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1543,
                        "src": "2344:17:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1513,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2344:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1516,
                        "mutability": "mutable",
                        "name": "_name",
                        "nameLocation": "2377:5:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1543,
                        "src": "2363:19:11",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1515,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2363:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2343:40:11"
                  },
                  "returnParameters": {
                    "id": 1521,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2440:0:11"
                  },
                  "scope": 1736,
                  "src": "2318:281:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1576,
                    "nodeType": "Block",
                    "src": "2834:166:11",
                    "statements": [
                      {
                        "assignments": [
                          1555
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1555,
                            "mutability": "mutable",
                            "name": "limit",
                            "nameLocation": "2852:5:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 1576,
                            "src": "2844:13:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1554,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2844:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1562,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1561,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1556,
                            "name": "_limit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1548,
                            "src": "2860:6:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1560,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 1557,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2869:2:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1558,
                                "name": "decimals",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 594,
                                "src": "2873:8:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
                                  "typeString": "function () view returns (uint8)"
                                }
                              },
                              "id": 1559,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2873:10:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "src": "2869:14:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2860:23:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2844:39:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1566,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1564,
                                "name": "limit",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1555,
                                "src": "2902:5:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1565,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2910:1:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "2902:9:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4c696d69742073686f756c642062652067726561746572207468616e20302e",
                              "id": 1567,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2913:33:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_af3195a179ad05055599ce517a796284d1531c0cdddc2475f9a4492a8cc2e347",
                                "typeString": "literal_string \"Limit should be greater than 0.\""
                              },
                              "value": "Limit should be greater than 0."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_af3195a179ad05055599ce517a796284d1531c0cdddc2475f9a4492a8cc2e347",
                                "typeString": "literal_string \"Limit should be greater than 0.\""
                              }
                            ],
                            "id": 1563,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2894:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1568,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2894:53:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1569,
                        "nodeType": "ExpressionStatement",
                        "src": "2894:53:11"
                      },
                      {
                        "expression": {
                          "id": 1574,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1570,
                              "name": "dailySpendingLimit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1383,
                              "src": "2957:18:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1572,
                            "indexExpression": {
                              "id": 1571,
                              "name": "_student",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1546,
                              "src": "2976:8:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2957:28:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1573,
                            "name": "limit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1555,
                            "src": "2988:5:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2957:36:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1575,
                        "nodeType": "ExpressionStatement",
                        "src": "2957:36:11"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1544,
                    "nodeType": "StructuredDocumentation",
                    "src": "2605:111:11",
                    "text": " @dev Set daily spending limit for student.\n Use case: Parental control / self-control."
                  },
                  "functionSelector": "2803212f",
                  "id": 1577,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 1551,
                          "name": "DEFAULT_ADMIN_ROLE",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29,
                          "src": "2810:18:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        }
                      ],
                      "id": 1552,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1550,
                        "name": "onlyRole",
                        "nameLocations": [
                          "2801:8:11"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 40,
                        "src": "2801:8:11"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2801:28:11"
                    }
                  ],
                  "name": "setDailyLimit",
                  "nameLocation": "2730:13:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1549,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1546,
                        "mutability": "mutable",
                        "name": "_student",
                        "nameLocation": "2752:8:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1577,
                        "src": "2744:16:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1545,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2744:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1548,
                        "mutability": "mutable",
                        "name": "_limit",
                        "nameLocation": "2770:6:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1577,
                        "src": "2762:14:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1547,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2762:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2743:34:11"
                  },
                  "returnParameters": {
                    "id": 1553,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2834:0:11"
                  },
                  "scope": 1736,
                  "src": "2721:279:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1661,
                    "nodeType": "Block",
                    "src": "3134:802:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1588,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1586,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1582,
                                "src": "3152:7:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1587,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3162:1:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "3152:11:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "416d6f756e742073686f756c642062652067726561746572207468616e20302e",
                              "id": 1589,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3165:34:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5a4547c6e8528c5f7522e620f017033bad79c14d9d83736fcdb98681fb668b75",
                                "typeString": "literal_string \"Amount should be greater than 0.\""
                              },
                              "value": "Amount should be greater than 0."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5a4547c6e8528c5f7522e620f017033bad79c14d9d83736fcdb98681fb668b75",
                                "typeString": "literal_string \"Amount should be greater than 0.\""
                              }
                            ],
                            "id": 1585,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3144:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1590,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3144:56:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1591,
                        "nodeType": "ExpressionStatement",
                        "src": "3144:56:11"
                      },
                      {
                        "assignments": [
                          1593
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1593,
                            "mutability": "mutable",
                            "name": "amount",
                            "nameLocation": "3218:6:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 1661,
                            "src": "3210:14:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1592,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3210:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1600,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1599,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1594,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1582,
                            "src": "3227:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1598,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 1595,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3237:2:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "**",
                            "rightExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1596,
                                "name": "decimals",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 594,
                                "src": "3241:8:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
                                  "typeString": "function () view returns (uint8)"
                                }
                              },
                              "id": 1597,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3241:10:11",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "src": "3237:14:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3227:24:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3210:41:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1612,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1607,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "id": 1602,
                                    "name": "spentToday",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1391,
                                    "src": "3358:10:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 1605,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 1603,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "3369:3:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1604,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "3373:6:11",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "3369:10:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3358:22:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "id": 1606,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1593,
                                  "src": "3383:6:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3358:31:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "baseExpression": {
                                  "id": 1608,
                                  "name": "dailySpendingLimit",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1383,
                                  "src": "3393:18:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 1611,
                                "indexExpression": {
                                  "expression": {
                                    "id": 1609,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "3412:3:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1610,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3416:6:11",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "3412:10:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3393:30:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3358:65:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "45786365656473206461696c79207370656e64696e67206c696d69742e",
                              "id": 1613,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3437:31:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_cceb5fa596334024605abeece7820bf456c2bd75cc9b2f6d93df4e5fbd05fed3",
                                "typeString": "literal_string \"Exceeds daily spending limit.\""
                              },
                              "value": "Exceeds daily spending limit."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_cceb5fa596334024605abeece7820bf456c2bd75cc9b2f6d93df4e5fbd05fed3",
                                "typeString": "literal_string \"Exceeds daily spending limit.\""
                              }
                            ],
                            "id": 1601,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3337:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1614,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3337:141:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1615,
                        "nodeType": "ExpressionStatement",
                        "src": "3337:141:11"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1624,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1616,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "3548:5:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 1617,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3554:9:11",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "3548:15:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1623,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "id": 1618,
                                "name": "lastSpendingReset",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1387,
                                "src": "3566:17:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 1621,
                              "indexExpression": {
                                "expression": {
                                  "id": 1619,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "3584:3:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1620,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3588:6:11",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3584:10:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3566:29:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 1622,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3598:6:11",
                              "subdenomination": "days",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_86400_by_1",
                                "typeString": "int_const 86400"
                              },
                              "value": "1"
                            },
                            "src": "3566:38:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3548:56:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1641,
                        "nodeType": "IfStatement",
                        "src": "3544:174:11",
                        "trueBody": {
                          "id": 1640,
                          "nodeType": "Block",
                          "src": "3606:112:11",
                          "statements": [
                            {
                              "expression": {
                                "id": 1631,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1625,
                                    "name": "lastSpendingReset",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1387,
                                    "src": "3620:17:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 1628,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 1626,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "3638:3:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1627,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "3642:6:11",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "3638:10:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "3620:29:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "id": 1629,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "3652:5:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 1630,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3658:9:11",
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "3652:15:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3620:47:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1632,
                              "nodeType": "ExpressionStatement",
                              "src": "3620:47:11"
                            },
                            {
                              "expression": {
                                "id": 1638,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1633,
                                    "name": "spentToday",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1391,
                                    "src": "3681:10:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 1636,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 1634,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "3692:3:11",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1635,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "3696:6:11",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "3692:10:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "3681:22:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "30",
                                  "id": 1637,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3706:1:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "3681:26:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1639,
                              "nodeType": "ExpressionStatement",
                              "src": "3681:26:11"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 1647,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1642,
                              "name": "spentToday",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1391,
                              "src": "3764:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1645,
                            "indexExpression": {
                              "expression": {
                                "id": 1643,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3775:3:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1644,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3779:6:11",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3775:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3764:22:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 1646,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1593,
                            "src": "3790:6:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3764:32:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1648,
                        "nodeType": "ExpressionStatement",
                        "src": "3764:32:11"
                      },
                      {
                        "assignments": [
                          1650
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1650,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "3852:7:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 1661,
                            "src": "3847:12:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 1649,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "3847:4:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1655,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1652,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1580,
                              "src": "3871:3:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1653,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1593,
                              "src": "3876:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1651,
                            "name": "transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 640,
                            "src": "3862:8:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) returns (bool)"
                            }
                          },
                          "id": 1654,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3862:21:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3847:36:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1657,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1650,
                              "src": "3901:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5472616e73666572206661696c65642e",
                              "id": 1658,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3910:18:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c81948f77ae7b56f1759fc612b6b373d090eebe7124f74c528fff8e0a139fe69",
                                "typeString": "literal_string \"Transfer failed.\""
                              },
                              "value": "Transfer failed."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c81948f77ae7b56f1759fc612b6b373d090eebe7124f74c528fff8e0a139fe69",
                                "typeString": "literal_string \"Transfer failed.\""
                              }
                            ],
                            "id": 1656,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3893:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1659,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3893:36:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1660,
                        "nodeType": "ExpressionStatement",
                        "src": "3893:36:11"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1578,
                    "nodeType": "StructuredDocumentation",
                    "src": "3006:59:11",
                    "text": " @dev Transfer with spending limit check."
                  },
                  "functionSelector": "22083bd0",
                  "id": 1662,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferWithLimit",
                  "nameLocation": "3079:17:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1583,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1580,
                        "mutability": "mutable",
                        "name": "_to",
                        "nameLocation": "3105:3:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1662,
                        "src": "3097:11:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1579,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3097:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1582,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nameLocation": "3118:7:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1662,
                        "src": "3110:15:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1581,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3110:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3096:30:11"
                  },
                  "returnParameters": {
                    "id": 1584,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3134:0:11"
                  },
                  "scope": 1736,
                  "src": "3070:866:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    837
                  ],
                  "body": {
                    "id": 1688,
                    "nodeType": "Block",
                    "src": "4056:103:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1676,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "4074:9:11",
                              "subExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 1674,
                                  "name": "paused",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1260,
                                  "src": "4075:6:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                                    "typeString": "function () view returns (bool)"
                                  }
                                },
                                "id": 1675,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4075:8:11",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "546f6b656e207472616e7366657273207061757365642e",
                              "id": 1677,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4085:25:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4883a4db8fa89fd27599c351c2e5d12230f9c7f95977ac82d41b94b3b13e60a6",
                                "typeString": "literal_string \"Token transfers paused.\""
                              },
                              "value": "Token transfers paused."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_4883a4db8fa89fd27599c351c2e5d12230f9c7f95977ac82d41b94b3b13e60a6",
                                "typeString": "literal_string \"Token transfers paused.\""
                              }
                            ],
                            "id": 1673,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4066:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1678,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4066:45:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1679,
                        "nodeType": "ExpressionStatement",
                        "src": "4066:45:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1683,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1664,
                              "src": "4135:4:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1684,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1666,
                              "src": "4141:2:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1685,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1668,
                              "src": "4145:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1680,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -25,
                              "src": "4121:5:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_CampusCredit_$1736_$",
                                "typeString": "type(contract super CampusCredit)"
                              }
                            },
                            "id": 1682,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4127:7:11",
                            "memberName": "_update",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 837,
                            "src": "4121:13:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1686,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4121:31:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1687,
                        "nodeType": "ExpressionStatement",
                        "src": "4121:31:11"
                      }
                    ]
                  },
                  "id": 1689,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_update",
                  "nameLocation": "3951:7:11",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1671,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [
                      {
                        "id": 1670,
                        "name": "ERC20",
                        "nameLocations": [
                          "4049:5:11"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1030,
                        "src": "4049:5:11"
                      }
                    ],
                    "src": "4040:15:11"
                  },
                  "parameters": {
                    "id": 1669,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1664,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "3976:4:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1689,
                        "src": "3968:12:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1663,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3968:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1666,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "3998:2:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1689,
                        "src": "3990:10:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1665,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3990:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1668,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "4018:6:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1689,
                        "src": "4010:14:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1667,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4010:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3958:72:11"
                  },
                  "returnParameters": {
                    "id": 1672,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4056:0:11"
                  },
                  "scope": 1736,
                  "src": "3942:217:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "documentation": {
                    "id": 1690,
                    "nodeType": "StructuredDocumentation",
                    "src": "4165:62:11",
                    "text": " @dev Cashback mechanism to encourage usage."
                  },
                  "functionSelector": "1c9cef04",
                  "id": 1693,
                  "mutability": "mutable",
                  "name": "cashbackPercentage",
                  "nameLocation": "4247:18:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 1736,
                  "src": "4232:37:11",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1691,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4232:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "32",
                    "id": 1692,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4268:1:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_2_by_1",
                      "typeString": "int_const 2"
                    },
                    "value": "2"
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1734,
                    "nodeType": "Block",
                    "src": "4375:363:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1703,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1701,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1697,
                                "src": "4393:7:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1702,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4403:1:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "4393:11:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "416d6f756e742073686f756c642062652067726561746572207468616e20302e",
                              "id": 1704,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4406:34:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5a4547c6e8528c5f7522e620f017033bad79c14d9d83736fcdb98681fb668b75",
                                "typeString": "literal_string \"Amount should be greater than 0.\""
                              },
                              "value": "Amount should be greater than 0."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5a4547c6e8528c5f7522e620f017033bad79c14d9d83736fcdb98681fb668b75",
                                "typeString": "literal_string \"Amount should be greater than 0.\""
                              }
                            ],
                            "id": 1700,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4385:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1705,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4385:56:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1706,
                        "nodeType": "ExpressionStatement",
                        "src": "4385:56:11"
                      },
                      {
                        "assignments": [
                          1708
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1708,
                            "mutability": "mutable",
                            "name": "cashback",
                            "nameLocation": "4501:8:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 1734,
                            "src": "4493:16:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1707,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4493:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1715,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1714,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1711,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1709,
                                  "name": "_amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1697,
                                  "src": "4513:7:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 1710,
                                  "name": "cashbackPercentage",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1693,
                                  "src": "4523:18:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4513:28:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1712,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "4512:30:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "313030",
                            "id": 1713,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4545:3:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          },
                          "src": "4512:36:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4493:55:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1717,
                              "name": "_merchant",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1695,
                              "src": "4617:9:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1720,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1718,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1697,
                                "src": "4628:7:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 1719,
                                "name": "cashback",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1708,
                                "src": "4638:8:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4628:18:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1716,
                            "name": "transferWithLimit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1662,
                            "src": "4599:17:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1721,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4599:48:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1722,
                        "nodeType": "ExpressionStatement",
                        "src": "4599:48:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1724,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4693:3:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1725,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4697:6:11",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4693:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1731,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1726,
                                "name": "cashback",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1708,
                                "src": "4705:8:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1730,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "3130",
                                  "id": 1727,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4716:2:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_10_by_1",
                                    "typeString": "int_const 10"
                                  },
                                  "value": "10"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "**",
                                "rightExpression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 1728,
                                    "name": "decimals",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 594,
                                    "src": "4720:8:11",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
                                      "typeString": "function () view returns (uint8)"
                                    }
                                  },
                                  "id": 1729,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4720:10:11",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "src": "4716:14:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4705:25:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1723,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 870,
                            "src": "4687:5:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1732,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4687:44:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1733,
                        "nodeType": "ExpressionStatement",
                        "src": "4687:44:11"
                      }
                    ]
                  },
                  "functionSelector": "5cc18e2f",
                  "id": 1735,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferWithCashback",
                  "nameLocation": "4311:20:11",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1698,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1695,
                        "mutability": "mutable",
                        "name": "_merchant",
                        "nameLocation": "4340:9:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1735,
                        "src": "4332:17:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1694,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4332:7:11",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1697,
                        "mutability": "mutable",
                        "name": "_amount",
                        "nameLocation": "4359:7:11",
                        "nodeType": "VariableDeclaration",
                        "scope": 1735,
                        "src": "4351:15:11",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1696,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4351:7:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4331:36:11"
                  },
                  "returnParameters": {
                    "id": 1699,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4375:0:11"
                  },
                  "scope": 1736,
                  "src": "4302:436:11",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 1737,
              "src": "380:4360:11",
              "usedErrors": [
                305,
                308,
                390,
                395,
                400,
                409,
                414,
                419,
                1232,
                1235
              ],
              "usedEvents": [
                317,
                326,
                335,
                1042,
                1051,
                1224,
                1229
              ]
            }
          ],
          "src": "32:4709:11"
        },
        "id": 11
      }
    },
    "contracts": {
      "@openzeppelin/contracts/access/AccessControl.sol": {
        "AccessControl": {
          "abi": [
            {
              "inputs": [],
              "name": "AccessControlBadConfirmation",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "neededRole",
                  "type": "bytes32"
                }
              ],
              "name": "AccessControlUnauthorizedAccount",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "previousAdminRole",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "newAdminRole",
                  "type": "bytes32"
                }
              ],
              "name": "RoleAdminChanged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "RoleGranted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "RoleRevoked",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "DEFAULT_ADMIN_ROLE",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                }
              ],
              "name": "getRoleAdmin",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "grantRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "hasRole",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "callerConfirmation",
                  "type": "address"
                }
              ],
              "name": "renounceRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "revokeRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "DEFAULT_ADMIN_ROLE()": "a217fddf",
              "getRoleAdmin(bytes32)": "248a9ca3",
              "grantRole(bytes32,address)": "2f2ff15d",
              "hasRole(bytes32,address)": "91d14854",
              "renounceRole(bytes32,address)": "36568abe",
              "revokeRole(bytes32,address)": "d547741f",
              "supportsInterface(bytes4)": "01ffc9a7"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.3.0) (access/AccessControl.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IAccessControl} from \\\"./IAccessControl.sol\\\";\\nimport {Context} from \\\"../utils/Context.sol\\\";\\nimport {ERC165} from \\\"../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Contract module that allows children to implement role-based access\\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\\n * members except through off-chain means by accessing the contract event logs. Some\\n * applications may benefit from on-chain enumerability, for those cases see\\n * {AccessControlEnumerable}.\\n *\\n * Roles are referred to by their `bytes32` identifier. These should be exposed\\n * in the external API and be unique. The best way to achieve this is by\\n * using `public constant` hash digests:\\n *\\n * ```solidity\\n * bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\");\\n * ```\\n *\\n * Roles can be used to represent a set of permissions. To restrict access to a\\n * function call, use {hasRole}:\\n *\\n * ```solidity\\n * function foo() public {\\n *     require(hasRole(MY_ROLE, msg.sender));\\n *     ...\\n * }\\n * ```\\n *\\n * Roles can be granted and revoked dynamically via the {grantRole} and\\n * {revokeRole} functions. Each role has an associated admin role, and only\\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\\n *\\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\\n * that only accounts with this role will be able to grant or revoke other\\n * roles. More complex role relationships can be created by using\\n * {_setRoleAdmin}.\\n *\\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\\n * grant and revoke this role. Extra precautions should be taken to secure\\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\\n * to enforce additional security measures for this role.\\n */\\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\\n    struct RoleData {\\n        mapping(address account => bool) hasRole;\\n        bytes32 adminRole;\\n    }\\n\\n    mapping(bytes32 role => RoleData) private _roles;\\n\\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\\n\\n    /**\\n     * @dev Modifier that checks that an account has a specific role. Reverts\\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\\n     */\\n    modifier onlyRole(bytes32 role) {\\n        _checkRole(role);\\n        _;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\\n        return _roles[role].hasRole[account];\\n    }\\n\\n    /**\\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\\n     */\\n    function _checkRole(bytes32 role) internal view virtual {\\n        _checkRole(role, _msgSender());\\n    }\\n\\n    /**\\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\\n     * is missing `role`.\\n     */\\n    function _checkRole(bytes32 role, address account) internal view virtual {\\n        if (!hasRole(role, account)) {\\n            revert AccessControlUnauthorizedAccount(account, role);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\\n        return _roles[role].adminRole;\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     *\\n     * May emit a {RoleGranted} event.\\n     */\\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `callerConfirmation`.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\\n        if (callerConfirmation != _msgSender()) {\\n            revert AccessControlBadConfirmation();\\n        }\\n\\n        _revokeRole(role, callerConfirmation);\\n    }\\n\\n    /**\\n     * @dev Sets `adminRole` as ``role``'s admin role.\\n     *\\n     * Emits a {RoleAdminChanged} event.\\n     */\\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\\n        bytes32 previousAdminRole = getRoleAdmin(role);\\n        _roles[role].adminRole = adminRole;\\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\\n    }\\n\\n    /**\\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\\n     *\\n     * Internal function without access restriction.\\n     *\\n     * May emit a {RoleGranted} event.\\n     */\\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\\n        if (!hasRole(role, account)) {\\n            _roles[role].hasRole[account] = true;\\n            emit RoleGranted(role, account, _msgSender());\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\\n     *\\n     * Internal function without access restriction.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\\n        if (hasRole(role, account)) {\\n            _roles[role].hasRole[account] = false;\\n            emit RoleRevoked(role, account, _msgSender());\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc1bebdee8943bd5e9ef1e0f2e63296aa1dd4171a66b9e74d0286220e891e1458\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.3.0) (access/IAccessControl.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev External interface of AccessControl declared to support ERC-165 detection.\\n */\\ninterface IAccessControl {\\n    /**\\n     * @dev The `account` is missing a role.\\n     */\\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\\n\\n    /**\\n     * @dev The caller of a function is not the expected one.\\n     *\\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\\n     */\\n    error AccessControlBadConfirmation();\\n\\n    /**\\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\\n     *\\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\\n     * {RoleAdminChanged} not being emitted to signal this.\\n     */\\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\\n\\n    /**\\n     * @dev Emitted when `account` is granted `role`.\\n     *\\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\\n     */\\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Emitted when `account` is revoked `role`.\\n     *\\n     * `sender` is the account that originated the contract call:\\n     *   - if using `revokeRole`, it is the admin role bearer\\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\\n     */\\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) external view returns (bool);\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function grantRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function revokeRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `callerConfirmation`.\\n     */\\n    function renounceRole(bytes32 role, address callerConfirmation) external;\\n}\\n\",\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\"}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/access/IAccessControl.sol": {
        "IAccessControl": {
          "abi": [
            {
              "inputs": [],
              "name": "AccessControlBadConfirmation",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "neededRole",
                  "type": "bytes32"
                }
              ],
              "name": "AccessControlUnauthorizedAccount",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "previousAdminRole",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "newAdminRole",
                  "type": "bytes32"
                }
              ],
              "name": "RoleAdminChanged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "RoleGranted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "RoleRevoked",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                }
              ],
              "name": "getRoleAdmin",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "grantRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "hasRole",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "callerConfirmation",
                  "type": "address"
                }
              ],
              "name": "renounceRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "revokeRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "getRoleAdmin(bytes32)": "248a9ca3",
              "grantRole(bytes32,address)": "2f2ff15d",
              "hasRole(bytes32,address)": "91d14854",
              "renounceRole(bytes32,address)": "36568abe",
              "revokeRole(bytes32,address)": "d547741f"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.3.0) (access/IAccessControl.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev External interface of AccessControl declared to support ERC-165 detection.\\n */\\ninterface IAccessControl {\\n    /**\\n     * @dev The `account` is missing a role.\\n     */\\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\\n\\n    /**\\n     * @dev The caller of a function is not the expected one.\\n     *\\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\\n     */\\n    error AccessControlBadConfirmation();\\n\\n    /**\\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\\n     *\\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\\n     * {RoleAdminChanged} not being emitted to signal this.\\n     */\\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\\n\\n    /**\\n     * @dev Emitted when `account` is granted `role`.\\n     *\\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\\n     */\\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Emitted when `account` is revoked `role`.\\n     *\\n     * `sender` is the account that originated the contract call:\\n     *   - if using `revokeRole`, it is the admin role bearer\\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\\n     */\\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) external view returns (bool);\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function grantRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function revokeRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `callerConfirmation`.\\n     */\\n    function renounceRole(bytes32 role, address callerConfirmation) external;\\n}\\n\",\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\"}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
        "IERC1155Errors": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ERC1155InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "idsLength",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "valuesLength",
                  "type": "uint256"
                }
              ],
              "name": "ERC1155InvalidArrayLength",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidOperator",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC1155InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "ERC1155MissingApprovalForAll",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC-20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC-721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC-1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\"}},\"version\":1}"
        },
        "IERC20Errors": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC-20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC-721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC-1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\"}},\"version\":1}"
        },
        "IERC721Errors": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "ERC721IncorrectOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ERC721InsufficientApproval",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "operator",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidOperator",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC721InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                }
              ],
              "name": "ERC721NonexistentToken",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC-20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC-721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC-1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\"}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "ERC20": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "name()": "06fdde03",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. Both values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC-20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC-721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC-1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"./extensions/IERC20Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {IERC20Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC-20\\n * applications.\\n */\\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\\n    mapping(address account => uint256) private _balances;\\n\\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * Both values are immutable: they can only be set once during construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            _totalSupply += value;\\n        } else {\\n            uint256 fromBalance = _balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                _balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                _totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                _balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     *\\n     * ```solidity\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        _allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance < type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-20 standard as defined in the ERC.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "IERC20": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-20 standard as defined in the ERC.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\"}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
        "ERC20Burnable": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "burn",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "burnFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "burn(uint256)": "42966c68",
              "burnFrom(address,uint256)": "79cc6790",
              "decimals()": "313ce567",
              "name()": "06fdde03",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":\"ERC20Burnable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC-20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC-721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC-1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"./extensions/IERC20Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {IERC20Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC-20\\n * applications.\\n */\\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\\n    mapping(address account => uint256) private _balances;\\n\\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * Both values are immutable: they can only be set once during construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            _totalSupply += value;\\n        } else {\\n            uint256 fromBalance = _balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                _balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                _totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                _balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     *\\n     * ```solidity\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        _allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance < type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-20 standard as defined in the ERC.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Burnable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {ERC20} from \\\"../ERC20.sol\\\";\\nimport {Context} from \\\"../../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\\n * tokens and those that they have an allowance for, in a way that can be\\n * recognized off-chain (via event analysis).\\n */\\nabstract contract ERC20Burnable is Context, ERC20 {\\n    /**\\n     * @dev Destroys a `value` amount of tokens from the caller.\\n     *\\n     * See {ERC20-_burn}.\\n     */\\n    function burn(uint256 value) public virtual {\\n        _burn(_msgSender(), value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, deducting from\\n     * the caller's allowance.\\n     *\\n     * See {ERC20-_burn} and {ERC20-allowance}.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have allowance for ``accounts``'s tokens of at least\\n     * `value`.\\n     */\\n    function burnFrom(address account, uint256 value) public virtual {\\n        _spendAllowance(account, _msgSender(), value);\\n        _burn(account, value);\\n    }\\n}\\n\",\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "IERC20Metadata": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "name()": "06fdde03",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-20 standard as defined in the ERC.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\"}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "Context": {
          "abi": [],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/utils/Pausable.sol": {
        "Pausable": {
          "abi": [
            {
              "inputs": [],
              "name": "EnforcedPause",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "ExpectedPause",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Paused",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Unpaused",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "paused",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "paused()": "5c975abb"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Pausable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract Pausable is Context {\\n    bool private _paused;\\n\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    /**\\n     * @dev The operation failed because the contract is paused.\\n     */\\n    error EnforcedPause();\\n\\n    /**\\n     * @dev The operation failed because the contract is not paused.\\n     */\\n    error ExpectedPause();\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        _requireNotPaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        _requirePaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is paused.\\n     */\\n    function _requireNotPaused() internal view virtual {\\n        if (paused()) {\\n            revert EnforcedPause();\\n        }\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is not paused.\\n     */\\n    function _requirePaused() internal view virtual {\\n        if (!paused()) {\\n            revert ExpectedPause();\\n        }\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n}\\n\",\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\"}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/utils/introspection/ERC165.sol": {
        "ERC165": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "supportsInterface(bytes4)": "01ffc9a7"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\"}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "IERC165": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "supportsInterface(bytes4)": "01ffc9a7"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\"}},\"version\":1}"
        }
      },
      "contracts/CampusCredit.sol": {
        "CampusCredit": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_initialSupply",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [],
              "name": "AccessControlBadConfirmation",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "neededRole",
                  "type": "bytes32"
                }
              ],
              "name": "AccessControlUnauthorizedAccount",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "allowance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "needed",
                  "type": "uint256"
                }
              ],
              "name": "ERC20InsufficientBalance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "approver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidApprover",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidReceiver",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSender",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "ERC20InvalidSpender",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "EnforcedPause",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "ExpectedPause",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Paused",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "previousAdminRole",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "newAdminRole",
                  "type": "bytes32"
                }
              ],
              "name": "RoleAdminChanged",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "RoleGranted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                }
              ],
              "name": "RoleRevoked",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "Unpaused",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "DEFAULT_ADMIN_ROLE",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "MINTER_ROLE",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "PAUSER_ROLE",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "burn",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "burnFrom",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "cashbackPercentage",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "dailySpendingLimit",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                }
              ],
              "name": "getRoleAdmin",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "grantRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "hasRole",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "isMerchant",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "lastSpendingReset",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "merchantName",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                }
              ],
              "name": "mint",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "pause",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "paused",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_merchant",
                  "type": "address"
                },
                {
                  "internalType": "string",
                  "name": "_name",
                  "type": "string"
                }
              ],
              "name": "registerMerchant",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "callerConfirmation",
                  "type": "address"
                }
              ],
              "name": "renounceRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "role",
                  "type": "bytes32"
                },
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "revokeRole",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_student",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_limit",
                  "type": "uint256"
                }
              ],
              "name": "setDailyLimit",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "spentToday",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes4",
                  "name": "interfaceId",
                  "type": "bytes4"
                }
              ],
              "name": "supportsInterface",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_merchant",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                }
              ],
              "name": "transferWithCashback",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_amount",
                  "type": "uint256"
                }
              ],
              "name": "transferWithLimit",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "unpause",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "@_1438": {
                  "entryPoint": null,
                  "id": 1438,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@_567": {
                  "entryPoint": null,
                  "id": 567,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@_grantRole_256": {
                  "entryPoint": 286,
                  "id": 256,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "@_mint_870": {
                  "entryPoint": 462,
                  "id": 870,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@_msgSender_1192": {
                  "entryPoint": null,
                  "id": 1192,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@_update_1689": {
                  "entryPoint": 525,
                  "id": 1689,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "@_update_837": {
                  "entryPoint": 624,
                  "id": 837,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "@decimals_594": {
                  "entryPoint": null,
                  "id": 594,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@hasRole_80": {
                  "entryPoint": null,
                  "id": 80,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "@paused_1260": {
                  "entryPoint": null,
                  "id": 1260,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_uint256_fromMemory": {
                  "entryPoint": 922,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_4883a4db8fa89fd27599c351c2e5d12230f9c7f95977ac82d41b94b3b13e60a6__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "array_dataslot_string_storage": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "checked_add_t_uint256": {
                  "entryPoint": 1593,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_exp_helper": {
                  "entryPoint": 1317,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 2
                },
                "checked_exp_t_uint256_t_uint8": {
                  "entryPoint": 1548,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_exp_unsigned": {
                  "entryPoint": 1384,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_mul_t_uint256": {
                  "entryPoint": 1570,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "clean_up_bytearray_end_slots_string_storage": {
                  "entryPoint": 1027,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
                  "entryPoint": 1105,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "extract_byte_array_length": {
                  "entryPoint": 969,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "extract_used_part_and_set_length_of_short_byte_array": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "panic_error_0x11": {
                  "entryPoint": 1295,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x41": {
                  "entryPoint": 947,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nativeSrc": "0:5800:12",
                    "nodeType": "YulBlock",
                    "src": "0:5800:12",
                    "statements": [
                      {
                        "nativeSrc": "6:3:12",
                        "nodeType": "YulBlock",
                        "src": "6:3:12",
                        "statements": []
                      },
                      {
                        "body": {
                          "nativeSrc": "95:103:12",
                          "nodeType": "YulBlock",
                          "src": "95:103:12",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "141:16:12",
                                "nodeType": "YulBlock",
                                "src": "141:16:12",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "150:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "150:1:12",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "153:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "153:1:12",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "143:6:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "143:6:12"
                                      },
                                      "nativeSrc": "143:12:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "143:12:12"
                                    },
                                    "nativeSrc": "143:12:12",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "143:12:12"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "116:7:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "116:7:12"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "125:9:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "125:9:12"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "112:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "112:3:12"
                                    },
                                    "nativeSrc": "112:23:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "112:23:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "137:2:12",
                                    "nodeType": "YulLiteral",
                                    "src": "137:2:12",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "108:3:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "108:3:12"
                                },
                                "nativeSrc": "108:32:12",
                                "nodeType": "YulFunctionCall",
                                "src": "108:32:12"
                              },
                              "nativeSrc": "105:52:12",
                              "nodeType": "YulIf",
                              "src": "105:52:12"
                            },
                            {
                              "nativeSrc": "166:26:12",
                              "nodeType": "YulAssignment",
                              "src": "166:26:12",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "182:9:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "182:9:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "176:5:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "176:5:12"
                                },
                                "nativeSrc": "176:16:12",
                                "nodeType": "YulFunctionCall",
                                "src": "176:16:12"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "166:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "166:6:12"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256_fromMemory",
                        "nativeSrc": "14:184:12",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "61:9:12",
                            "nodeType": "YulTypedName",
                            "src": "61:9:12",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nativeSrc": "72:7:12",
                            "nodeType": "YulTypedName",
                            "src": "72:7:12",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nativeSrc": "84:6:12",
                            "nodeType": "YulTypedName",
                            "src": "84:6:12",
                            "type": ""
                          }
                        ],
                        "src": "14:184:12"
                      },
                      {
                        "body": {
                          "nativeSrc": "235:95:12",
                          "nodeType": "YulBlock",
                          "src": "235:95:12",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "252:1:12",
                                    "nodeType": "YulLiteral",
                                    "src": "252:1:12",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nativeSrc": "259:3:12",
                                        "nodeType": "YulLiteral",
                                        "src": "259:3:12",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "264:10:12",
                                        "nodeType": "YulLiteral",
                                        "src": "264:10:12",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nativeSrc": "255:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "255:3:12"
                                    },
                                    "nativeSrc": "255:20:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "255:20:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "245:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "245:6:12"
                                },
                                "nativeSrc": "245:31:12",
                                "nodeType": "YulFunctionCall",
                                "src": "245:31:12"
                              },
                              "nativeSrc": "245:31:12",
                              "nodeType": "YulExpressionStatement",
                              "src": "245:31:12"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "292:1:12",
                                    "nodeType": "YulLiteral",
                                    "src": "292:1:12",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "295:4:12",
                                    "nodeType": "YulLiteral",
                                    "src": "295:4:12",
                                    "type": "",
                                    "value": "0x41"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "285:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "285:6:12"
                                },
                                "nativeSrc": "285:15:12",
                                "nodeType": "YulFunctionCall",
                                "src": "285:15:12"
                              },
                              "nativeSrc": "285:15:12",
                              "nodeType": "YulExpressionStatement",
                              "src": "285:15:12"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "316:1:12",
                                    "nodeType": "YulLiteral",
                                    "src": "316:1:12",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "319:4:12",
                                    "nodeType": "YulLiteral",
                                    "src": "319:4:12",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nativeSrc": "309:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "309:6:12"
                                },
                                "nativeSrc": "309:15:12",
                                "nodeType": "YulFunctionCall",
                                "src": "309:15:12"
                              },
                              "nativeSrc": "309:15:12",
                              "nodeType": "YulExpressionStatement",
                              "src": "309:15:12"
                            }
                          ]
                        },
                        "name": "panic_error_0x41",
                        "nativeSrc": "203:127:12",
                        "nodeType": "YulFunctionDefinition",
                        "src": "203:127:12"
                      },
                      {
                        "body": {
                          "nativeSrc": "390:325:12",
                          "nodeType": "YulBlock",
                          "src": "390:325:12",
                          "statements": [
                            {
                              "nativeSrc": "400:22:12",
                              "nodeType": "YulAssignment",
                              "src": "400:22:12",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "414:1:12",
                                    "nodeType": "YulLiteral",
                                    "src": "414:1:12",
                                    "type": "",
                                    "value": "1"
                                  },
                                  {
                                    "name": "data",
                                    "nativeSrc": "417:4:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "417:4:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "shr",
                                  "nativeSrc": "410:3:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "410:3:12"
                                },
                                "nativeSrc": "410:12:12",
                                "nodeType": "YulFunctionCall",
                                "src": "410:12:12"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nativeSrc": "400:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "400:6:12"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "431:38:12",
                              "nodeType": "YulVariableDeclaration",
                              "src": "431:38:12",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "data",
                                    "nativeSrc": "461:4:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "461:4:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "467:1:12",
                                    "nodeType": "YulLiteral",
                                    "src": "467:1:12",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nativeSrc": "457:3:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "457:3:12"
                                },
                                "nativeSrc": "457:12:12",
                                "nodeType": "YulFunctionCall",
                                "src": "457:12:12"
                              },
                              "variables": [
                                {
                                  "name": "outOfPlaceEncoding",
                                  "nativeSrc": "435:18:12",
                                  "nodeType": "YulTypedName",
                                  "src": "435:18:12",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "508:31:12",
                                "nodeType": "YulBlock",
                                "src": "508:31:12",
                                "statements": [
                                  {
                                    "nativeSrc": "510:27:12",
                                    "nodeType": "YulAssignment",
                                    "src": "510:27:12",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "length",
                                          "nativeSrc": "524:6:12",
                                          "nodeType": "YulIdentifier",
                                          "src": "524:6:12"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "532:4:12",
                                          "nodeType": "YulLiteral",
                                          "src": "532:4:12",
                                          "type": "",
                                          "value": "0x7f"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "and",
                                        "nativeSrc": "520:3:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "520:3:12"
                                      },
                                      "nativeSrc": "520:17:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "520:17:12"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "length",
                                        "nativeSrc": "510:6:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "510:6:12"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "outOfPlaceEncoding",
                                    "nativeSrc": "488:18:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "488:18:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "481:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "481:6:12"
                                },
                                "nativeSrc": "481:26:12",
                                "nodeType": "YulFunctionCall",
                                "src": "481:26:12"
                              },
                              "nativeSrc": "478:61:12",
                              "nodeType": "YulIf",
                              "src": "478:61:12"
                            },
                            {
                              "body": {
                                "nativeSrc": "598:111:12",
                                "nodeType": "YulBlock",
                                "src": "598:111:12",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "619:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "619:1:12",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nativeSrc": "626:3:12",
                                              "nodeType": "YulLiteral",
                                              "src": "626:3:12",
                                              "type": "",
                                              "value": "224"
                                            },
                                            {
                                              "kind": "number",
                                              "nativeSrc": "631:10:12",
                                              "nodeType": "YulLiteral",
                                              "src": "631:10:12",
                                              "type": "",
                                              "value": "0x4e487b71"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shl",
                                            "nativeSrc": "622:3:12",
                                            "nodeType": "YulIdentifier",
                                            "src": "622:3:12"
                                          },
                                          "nativeSrc": "622:20:12",
                                          "nodeType": "YulFunctionCall",
                                          "src": "622:20:12"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nativeSrc": "612:6:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "612:6:12"
                                      },
                                      "nativeSrc": "612:31:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "612:31:12"
                                    },
                                    "nativeSrc": "612:31:12",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "612:31:12"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "663:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "663:1:12",
                                          "type": "",
                                          "value": "4"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "666:4:12",
                                          "nodeType": "YulLiteral",
                                          "src": "666:4:12",
                                          "type": "",
                                          "value": "0x22"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nativeSrc": "656:6:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "656:6:12"
                                      },
                                      "nativeSrc": "656:15:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "656:15:12"
                                    },
                                    "nativeSrc": "656:15:12",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "656:15:12"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "691:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "691:1:12",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "694:4:12",
                                          "nodeType": "YulLiteral",
                                          "src": "694:4:12",
                                          "type": "",
                                          "value": "0x24"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "684:6:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "684:6:12"
                                      },
                                      "nativeSrc": "684:15:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "684:15:12"
                                    },
                                    "nativeSrc": "684:15:12",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "684:15:12"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "outOfPlaceEncoding",
                                    "nativeSrc": "554:18:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "554:18:12"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nativeSrc": "577:6:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "577:6:12"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "585:2:12",
                                        "nodeType": "YulLiteral",
                                        "src": "585:2:12",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nativeSrc": "574:2:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "574:2:12"
                                    },
                                    "nativeSrc": "574:14:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "574:14:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nativeSrc": "551:2:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "551:2:12"
                                },
                                "nativeSrc": "551:38:12",
                                "nodeType": "YulFunctionCall",
                                "src": "551:38:12"
                              },
                              "nativeSrc": "548:161:12",
                              "nodeType": "YulIf",
                              "src": "548:161:12"
                            }
                          ]
                        },
                        "name": "extract_byte_array_length",
                        "nativeSrc": "335:380:12",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "data",
                            "nativeSrc": "370:4:12",
                            "nodeType": "YulTypedName",
                            "src": "370:4:12",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "length",
                            "nativeSrc": "379:6:12",
                            "nodeType": "YulTypedName",
                            "src": "379:6:12",
                            "type": ""
                          }
                        ],
                        "src": "335:380:12"
                      },
                      {
                        "body": {
                          "nativeSrc": "776:65:12",
                          "nodeType": "YulBlock",
                          "src": "776:65:12",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "793:1:12",
                                    "nodeType": "YulLiteral",
                                    "src": "793:1:12",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "name": "ptr",
                                    "nativeSrc": "796:3:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "796:3:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "786:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "786:6:12"
                                },
                                "nativeSrc": "786:14:12",
                                "nodeType": "YulFunctionCall",
                                "src": "786:14:12"
                              },
                              "nativeSrc": "786:14:12",
                              "nodeType": "YulExpressionStatement",
                              "src": "786:14:12"
                            },
                            {
                              "nativeSrc": "809:26:12",
                              "nodeType": "YulAssignment",
                              "src": "809:26:12",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "827:1:12",
                                    "nodeType": "YulLiteral",
                                    "src": "827:1:12",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "830:4:12",
                                    "nodeType": "YulLiteral",
                                    "src": "830:4:12",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "keccak256",
                                  "nativeSrc": "817:9:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "817:9:12"
                                },
                                "nativeSrc": "817:18:12",
                                "nodeType": "YulFunctionCall",
                                "src": "817:18:12"
                              },
                              "variableNames": [
                                {
                                  "name": "data",
                                  "nativeSrc": "809:4:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "809:4:12"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_dataslot_string_storage",
                        "nativeSrc": "720:121:12",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "ptr",
                            "nativeSrc": "759:3:12",
                            "nodeType": "YulTypedName",
                            "src": "759:3:12",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "data",
                            "nativeSrc": "767:4:12",
                            "nodeType": "YulTypedName",
                            "src": "767:4:12",
                            "type": ""
                          }
                        ],
                        "src": "720:121:12"
                      },
                      {
                        "body": {
                          "nativeSrc": "927:437:12",
                          "nodeType": "YulBlock",
                          "src": "927:437:12",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "960:398:12",
                                "nodeType": "YulBlock",
                                "src": "960:398:12",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "981:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "981:1:12",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "name": "array",
                                          "nativeSrc": "984:5:12",
                                          "nodeType": "YulIdentifier",
                                          "src": "984:5:12"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nativeSrc": "974:6:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "974:6:12"
                                      },
                                      "nativeSrc": "974:16:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "974:16:12"
                                    },
                                    "nativeSrc": "974:16:12",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "974:16:12"
                                  },
                                  {
                                    "nativeSrc": "1003:30:12",
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "1003:30:12",
                                    "value": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1025:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "1025:1:12",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1028:4:12",
                                          "nodeType": "YulLiteral",
                                          "src": "1028:4:12",
                                          "type": "",
                                          "value": "0x20"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "keccak256",
                                        "nativeSrc": "1015:9:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "1015:9:12"
                                      },
                                      "nativeSrc": "1015:18:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "1015:18:12"
                                    },
                                    "variables": [
                                      {
                                        "name": "data",
                                        "nativeSrc": "1007:4:12",
                                        "nodeType": "YulTypedName",
                                        "src": "1007:4:12",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "nativeSrc": "1046:57:12",
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "1046:57:12",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "data",
                                          "nativeSrc": "1069:4:12",
                                          "nodeType": "YulIdentifier",
                                          "src": "1069:4:12"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nativeSrc": "1079:1:12",
                                              "nodeType": "YulLiteral",
                                              "src": "1079:1:12",
                                              "type": "",
                                              "value": "5"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "name": "startIndex",
                                                  "nativeSrc": "1086:10:12",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "1086:10:12"
                                                },
                                                {
                                                  "kind": "number",
                                                  "nativeSrc": "1098:2:12",
                                                  "nodeType": "YulLiteral",
                                                  "src": "1098:2:12",
                                                  "type": "",
                                                  "value": "31"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nativeSrc": "1082:3:12",
                                                "nodeType": "YulIdentifier",
                                                "src": "1082:3:12"
                                              },
                                              "nativeSrc": "1082:19:12",
                                              "nodeType": "YulFunctionCall",
                                              "src": "1082:19:12"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shr",
                                            "nativeSrc": "1075:3:12",
                                            "nodeType": "YulIdentifier",
                                            "src": "1075:3:12"
                                          },
                                          "nativeSrc": "1075:27:12",
                                          "nodeType": "YulFunctionCall",
                                          "src": "1075:27:12"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "1065:3:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "1065:3:12"
                                      },
                                      "nativeSrc": "1065:38:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "1065:38:12"
                                    },
                                    "variables": [
                                      {
                                        "name": "deleteStart",
                                        "nativeSrc": "1050:11:12",
                                        "nodeType": "YulTypedName",
                                        "src": "1050:11:12",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "body": {
                                      "nativeSrc": "1140:23:12",
                                      "nodeType": "YulBlock",
                                      "src": "1140:23:12",
                                      "statements": [
                                        {
                                          "nativeSrc": "1142:19:12",
                                          "nodeType": "YulAssignment",
                                          "src": "1142:19:12",
                                          "value": {
                                            "name": "data",
                                            "nativeSrc": "1157:4:12",
                                            "nodeType": "YulIdentifier",
                                            "src": "1157:4:12"
                                          },
                                          "variableNames": [
                                            {
                                              "name": "deleteStart",
                                              "nativeSrc": "1142:11:12",
                                              "nodeType": "YulIdentifier",
                                              "src": "1142:11:12"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "name": "startIndex",
                                          "nativeSrc": "1122:10:12",
                                          "nodeType": "YulIdentifier",
                                          "src": "1122:10:12"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1134:4:12",
                                          "nodeType": "YulLiteral",
                                          "src": "1134:4:12",
                                          "type": "",
                                          "value": "0x20"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "lt",
                                        "nativeSrc": "1119:2:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "1119:2:12"
                                      },
                                      "nativeSrc": "1119:20:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "1119:20:12"
                                    },
                                    "nativeSrc": "1116:47:12",
                                    "nodeType": "YulIf",
                                    "src": "1116:47:12"
                                  },
                                  {
                                    "nativeSrc": "1176:41:12",
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "1176:41:12",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "data",
                                          "nativeSrc": "1190:4:12",
                                          "nodeType": "YulIdentifier",
                                          "src": "1190:4:12"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nativeSrc": "1200:1:12",
                                              "nodeType": "YulLiteral",
                                              "src": "1200:1:12",
                                              "type": "",
                                              "value": "5"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "name": "len",
                                                  "nativeSrc": "1207:3:12",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "1207:3:12"
                                                },
                                                {
                                                  "kind": "number",
                                                  "nativeSrc": "1212:2:12",
                                                  "nodeType": "YulLiteral",
                                                  "src": "1212:2:12",
                                                  "type": "",
                                                  "value": "31"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nativeSrc": "1203:3:12",
                                                "nodeType": "YulIdentifier",
                                                "src": "1203:3:12"
                                              },
                                              "nativeSrc": "1203:12:12",
                                              "nodeType": "YulFunctionCall",
                                              "src": "1203:12:12"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shr",
                                            "nativeSrc": "1196:3:12",
                                            "nodeType": "YulIdentifier",
                                            "src": "1196:3:12"
                                          },
                                          "nativeSrc": "1196:20:12",
                                          "nodeType": "YulFunctionCall",
                                          "src": "1196:20:12"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "1186:3:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "1186:3:12"
                                      },
                                      "nativeSrc": "1186:31:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "1186:31:12"
                                    },
                                    "variables": [
                                      {
                                        "name": "_1",
                                        "nativeSrc": "1180:2:12",
                                        "nodeType": "YulTypedName",
                                        "src": "1180:2:12",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "nativeSrc": "1230:24:12",
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "1230:24:12",
                                    "value": {
                                      "name": "deleteStart",
                                      "nativeSrc": "1243:11:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "1243:11:12"
                                    },
                                    "variables": [
                                      {
                                        "name": "start",
                                        "nativeSrc": "1234:5:12",
                                        "nodeType": "YulTypedName",
                                        "src": "1234:5:12",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "body": {
                                      "nativeSrc": "1328:20:12",
                                      "nodeType": "YulBlock",
                                      "src": "1328:20:12",
                                      "statements": [
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "name": "start",
                                                "nativeSrc": "1337:5:12",
                                                "nodeType": "YulIdentifier",
                                                "src": "1337:5:12"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "1344:1:12",
                                                "nodeType": "YulLiteral",
                                                "src": "1344:1:12",
                                                "type": "",
                                                "value": "0"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sstore",
                                              "nativeSrc": "1330:6:12",
                                              "nodeType": "YulIdentifier",
                                              "src": "1330:6:12"
                                            },
                                            "nativeSrc": "1330:16:12",
                                            "nodeType": "YulFunctionCall",
                                            "src": "1330:16:12"
                                          },
                                          "nativeSrc": "1330:16:12",
                                          "nodeType": "YulExpressionStatement",
                                          "src": "1330:16:12"
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "name": "start",
                                          "nativeSrc": "1278:5:12",
                                          "nodeType": "YulIdentifier",
                                          "src": "1278:5:12"
                                        },
                                        {
                                          "name": "_1",
                                          "nativeSrc": "1285:2:12",
                                          "nodeType": "YulIdentifier",
                                          "src": "1285:2:12"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "lt",
                                        "nativeSrc": "1275:2:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "1275:2:12"
                                      },
                                      "nativeSrc": "1275:13:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "1275:13:12"
                                    },
                                    "nativeSrc": "1267:81:12",
                                    "nodeType": "YulForLoop",
                                    "post": {
                                      "nativeSrc": "1289:26:12",
                                      "nodeType": "YulBlock",
                                      "src": "1289:26:12",
                                      "statements": [
                                        {
                                          "nativeSrc": "1291:22:12",
                                          "nodeType": "YulAssignment",
                                          "src": "1291:22:12",
                                          "value": {
                                            "arguments": [
                                              {
                                                "name": "start",
                                                "nativeSrc": "1304:5:12",
                                                "nodeType": "YulIdentifier",
                                                "src": "1304:5:12"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "1311:1:12",
                                                "nodeType": "YulLiteral",
                                                "src": "1311:1:12",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nativeSrc": "1300:3:12",
                                              "nodeType": "YulIdentifier",
                                              "src": "1300:3:12"
                                            },
                                            "nativeSrc": "1300:13:12",
                                            "nodeType": "YulFunctionCall",
                                            "src": "1300:13:12"
                                          },
                                          "variableNames": [
                                            {
                                              "name": "start",
                                              "nativeSrc": "1291:5:12",
                                              "nodeType": "YulIdentifier",
                                              "src": "1291:5:12"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    "pre": {
                                      "nativeSrc": "1271:3:12",
                                      "nodeType": "YulBlock",
                                      "src": "1271:3:12",
                                      "statements": []
                                    },
                                    "src": "1267:81:12"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "len",
                                    "nativeSrc": "943:3:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "943:3:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "948:2:12",
                                    "nodeType": "YulLiteral",
                                    "src": "948:2:12",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "940:2:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "940:2:12"
                                },
                                "nativeSrc": "940:11:12",
                                "nodeType": "YulFunctionCall",
                                "src": "940:11:12"
                              },
                              "nativeSrc": "937:421:12",
                              "nodeType": "YulIf",
                              "src": "937:421:12"
                            }
                          ]
                        },
                        "name": "clean_up_bytearray_end_slots_string_storage",
                        "nativeSrc": "846:518:12",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "array",
                            "nativeSrc": "899:5:12",
                            "nodeType": "YulTypedName",
                            "src": "899:5:12",
                            "type": ""
                          },
                          {
                            "name": "len",
                            "nativeSrc": "906:3:12",
                            "nodeType": "YulTypedName",
                            "src": "906:3:12",
                            "type": ""
                          },
                          {
                            "name": "startIndex",
                            "nativeSrc": "911:10:12",
                            "nodeType": "YulTypedName",
                            "src": "911:10:12",
                            "type": ""
                          }
                        ],
                        "src": "846:518:12"
                      },
                      {
                        "body": {
                          "nativeSrc": "1454:81:12",
                          "nodeType": "YulBlock",
                          "src": "1454:81:12",
                          "statements": [
                            {
                              "nativeSrc": "1464:65:12",
                              "nodeType": "YulAssignment",
                              "src": "1464:65:12",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "data",
                                        "nativeSrc": "1479:4:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "1479:4:12"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "1497:1:12",
                                                    "nodeType": "YulLiteral",
                                                    "src": "1497:1:12",
                                                    "type": "",
                                                    "value": "3"
                                                  },
                                                  {
                                                    "name": "len",
                                                    "nativeSrc": "1500:3:12",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "1500:3:12"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nativeSrc": "1493:3:12",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "1493:3:12"
                                                },
                                                "nativeSrc": "1493:11:12",
                                                "nodeType": "YulFunctionCall",
                                                "src": "1493:11:12"
                                              },
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "1510:1:12",
                                                    "nodeType": "YulLiteral",
                                                    "src": "1510:1:12",
                                                    "type": "",
                                                    "value": "0"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "not",
                                                  "nativeSrc": "1506:3:12",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "1506:3:12"
                                                },
                                                "nativeSrc": "1506:6:12",
                                                "nodeType": "YulFunctionCall",
                                                "src": "1506:6:12"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shr",
                                              "nativeSrc": "1489:3:12",
                                              "nodeType": "YulIdentifier",
                                              "src": "1489:3:12"
                                            },
                                            "nativeSrc": "1489:24:12",
                                            "nodeType": "YulFunctionCall",
                                            "src": "1489:24:12"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "not",
                                          "nativeSrc": "1485:3:12",
                                          "nodeType": "YulIdentifier",
                                          "src": "1485:3:12"
                                        },
                                        "nativeSrc": "1485:29:12",
                                        "nodeType": "YulFunctionCall",
                                        "src": "1485:29:12"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "1475:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "1475:3:12"
                                    },
                                    "nativeSrc": "1475:40:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1475:40:12"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nativeSrc": "1521:1:12",
                                        "nodeType": "YulLiteral",
                                        "src": "1521:1:12",
                                        "type": "",
                                        "value": "1"
                                      },
                                      {
                                        "name": "len",
                                        "nativeSrc": "1524:3:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "1524:3:12"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nativeSrc": "1517:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "1517:3:12"
                                    },
                                    "nativeSrc": "1517:11:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1517:11:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "or",
                                  "nativeSrc": "1472:2:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "1472:2:12"
                                },
                                "nativeSrc": "1472:57:12",
                                "nodeType": "YulFunctionCall",
                                "src": "1472:57:12"
                              },
                              "variableNames": [
                                {
                                  "name": "used",
                                  "nativeSrc": "1464:4:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "1464:4:12"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "extract_used_part_and_set_length_of_short_byte_array",
                        "nativeSrc": "1369:166:12",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "data",
                            "nativeSrc": "1431:4:12",
                            "nodeType": "YulTypedName",
                            "src": "1431:4:12",
                            "type": ""
                          },
                          {
                            "name": "len",
                            "nativeSrc": "1437:3:12",
                            "nodeType": "YulTypedName",
                            "src": "1437:3:12",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "used",
                            "nativeSrc": "1445:4:12",
                            "nodeType": "YulTypedName",
                            "src": "1445:4:12",
                            "type": ""
                          }
                        ],
                        "src": "1369:166:12"
                      },
                      {
                        "body": {
                          "nativeSrc": "1636:1203:12",
                          "nodeType": "YulBlock",
                          "src": "1636:1203:12",
                          "statements": [
                            {
                              "nativeSrc": "1646:24:12",
                              "nodeType": "YulVariableDeclaration",
                              "src": "1646:24:12",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "src",
                                    "nativeSrc": "1666:3:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "1666:3:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "1660:5:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "1660:5:12"
                                },
                                "nativeSrc": "1660:10:12",
                                "nodeType": "YulFunctionCall",
                                "src": "1660:10:12"
                              },
                              "variables": [
                                {
                                  "name": "newLen",
                                  "nativeSrc": "1650:6:12",
                                  "nodeType": "YulTypedName",
                                  "src": "1650:6:12",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "1713:22:12",
                                "nodeType": "YulBlock",
                                "src": "1713:22:12",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nativeSrc": "1715:16:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "1715:16:12"
                                      },
                                      "nativeSrc": "1715:18:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "1715:18:12"
                                    },
                                    "nativeSrc": "1715:18:12",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1715:18:12"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "newLen",
                                    "nativeSrc": "1685:6:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "1685:6:12"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nativeSrc": "1701:2:12",
                                            "nodeType": "YulLiteral",
                                            "src": "1701:2:12",
                                            "type": "",
                                            "value": "64"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "1705:1:12",
                                            "nodeType": "YulLiteral",
                                            "src": "1705:1:12",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nativeSrc": "1697:3:12",
                                          "nodeType": "YulIdentifier",
                                          "src": "1697:3:12"
                                        },
                                        "nativeSrc": "1697:10:12",
                                        "nodeType": "YulFunctionCall",
                                        "src": "1697:10:12"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "1709:1:12",
                                        "nodeType": "YulLiteral",
                                        "src": "1709:1:12",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "1693:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "1693:3:12"
                                    },
                                    "nativeSrc": "1693:18:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1693:18:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "1682:2:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "1682:2:12"
                                },
                                "nativeSrc": "1682:30:12",
                                "nodeType": "YulFunctionCall",
                                "src": "1682:30:12"
                              },
                              "nativeSrc": "1679:56:12",
                              "nodeType": "YulIf",
                              "src": "1679:56:12"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "slot",
                                    "nativeSrc": "1788:4:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "1788:4:12"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "slot",
                                            "nativeSrc": "1826:4:12",
                                            "nodeType": "YulIdentifier",
                                            "src": "1826:4:12"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sload",
                                          "nativeSrc": "1820:5:12",
                                          "nodeType": "YulIdentifier",
                                          "src": "1820:5:12"
                                        },
                                        "nativeSrc": "1820:11:12",
                                        "nodeType": "YulFunctionCall",
                                        "src": "1820:11:12"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "extract_byte_array_length",
                                      "nativeSrc": "1794:25:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "1794:25:12"
                                    },
                                    "nativeSrc": "1794:38:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1794:38:12"
                                  },
                                  {
                                    "name": "newLen",
                                    "nativeSrc": "1834:6:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "1834:6:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "clean_up_bytearray_end_slots_string_storage",
                                  "nativeSrc": "1744:43:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "1744:43:12"
                                },
                                "nativeSrc": "1744:97:12",
                                "nodeType": "YulFunctionCall",
                                "src": "1744:97:12"
                              },
                              "nativeSrc": "1744:97:12",
                              "nodeType": "YulExpressionStatement",
                              "src": "1744:97:12"
                            },
                            {
                              "nativeSrc": "1850:18:12",
                              "nodeType": "YulVariableDeclaration",
                              "src": "1850:18:12",
                              "value": {
                                "kind": "number",
                                "nativeSrc": "1867:1:12",
                                "nodeType": "YulLiteral",
                                "src": "1867:1:12",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "srcOffset",
                                  "nativeSrc": "1854:9:12",
                                  "nodeType": "YulTypedName",
                                  "src": "1854:9:12",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nativeSrc": "1877:17:12",
                              "nodeType": "YulAssignment",
                              "src": "1877:17:12",
                              "value": {
                                "kind": "number",
                                "nativeSrc": "1890:4:12",
                                "nodeType": "YulLiteral",
                                "src": "1890:4:12",
                                "type": "",
                                "value": "0x20"
                              },
                              "variableNames": [
                                {
                                  "name": "srcOffset",
                                  "nativeSrc": "1877:9:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "1877:9:12"
                                }
                              ]
                            },
                            {
                              "cases": [
                                {
                                  "body": {
                                    "nativeSrc": "1940:642:12",
                                    "nodeType": "YulBlock",
                                    "src": "1940:642:12",
                                    "statements": [
                                      {
                                        "nativeSrc": "1954:35:12",
                                        "nodeType": "YulVariableDeclaration",
                                        "src": "1954:35:12",
                                        "value": {
                                          "arguments": [
                                            {
                                              "name": "newLen",
                                              "nativeSrc": "1973:6:12",
                                              "nodeType": "YulIdentifier",
                                              "src": "1973:6:12"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "kind": "number",
                                                  "nativeSrc": "1985:2:12",
                                                  "nodeType": "YulLiteral",
                                                  "src": "1985:2:12",
                                                  "type": "",
                                                  "value": "31"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "not",
                                                "nativeSrc": "1981:3:12",
                                                "nodeType": "YulIdentifier",
                                                "src": "1981:3:12"
                                              },
                                              "nativeSrc": "1981:7:12",
                                              "nodeType": "YulFunctionCall",
                                              "src": "1981:7:12"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "and",
                                            "nativeSrc": "1969:3:12",
                                            "nodeType": "YulIdentifier",
                                            "src": "1969:3:12"
                                          },
                                          "nativeSrc": "1969:20:12",
                                          "nodeType": "YulFunctionCall",
                                          "src": "1969:20:12"
                                        },
                                        "variables": [
                                          {
                                            "name": "loopEnd",
                                            "nativeSrc": "1958:7:12",
                                            "nodeType": "YulTypedName",
                                            "src": "1958:7:12",
                                            "type": ""
                                          }
                                        ]
                                      },
                                      {
                                        "nativeSrc": "2002:49:12",
                                        "nodeType": "YulVariableDeclaration",
                                        "src": "2002:49:12",
                                        "value": {
                                          "arguments": [
                                            {
                                              "name": "slot",
                                              "nativeSrc": "2046:4:12",
                                              "nodeType": "YulIdentifier",
                                              "src": "2046:4:12"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "array_dataslot_string_storage",
                                            "nativeSrc": "2016:29:12",
                                            "nodeType": "YulIdentifier",
                                            "src": "2016:29:12"
                                          },
                                          "nativeSrc": "2016:35:12",
                                          "nodeType": "YulFunctionCall",
                                          "src": "2016:35:12"
                                        },
                                        "variables": [
                                          {
                                            "name": "dstPtr",
                                            "nativeSrc": "2006:6:12",
                                            "nodeType": "YulTypedName",
                                            "src": "2006:6:12",
                                            "type": ""
                                          }
                                        ]
                                      },
                                      {
                                        "nativeSrc": "2064:10:12",
                                        "nodeType": "YulVariableDeclaration",
                                        "src": "2064:10:12",
                                        "value": {
                                          "kind": "number",
                                          "nativeSrc": "2073:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "2073:1:12",
                                          "type": "",
                                          "value": "0"
                                        },
                                        "variables": [
                                          {
                                            "name": "i",
                                            "nativeSrc": "2068:1:12",
                                            "nodeType": "YulTypedName",
                                            "src": "2068:1:12",
                                            "type": ""
                                          }
                                        ]
                                      },
                                      {
                                        "body": {
                                          "nativeSrc": "2144:165:12",
                                          "nodeType": "YulBlock",
                                          "src": "2144:165:12",
                                          "statements": [
                                            {
                                              "expression": {
                                                "arguments": [
                                                  {
                                                    "name": "dstPtr",
                                                    "nativeSrc": "2169:6:12",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "2169:6:12"
                                                  },
                                                  {
                                                    "arguments": [
                                                      {
                                                        "arguments": [
                                                          {
                                                            "name": "src",
                                                            "nativeSrc": "2187:3:12",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "2187:3:12"
                                                          },
                                                          {
                                                            "name": "srcOffset",
                                                            "nativeSrc": "2192:9:12",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "2192:9:12"
                                                          }
                                                        ],
                                                        "functionName": {
                                                          "name": "add",
                                                          "nativeSrc": "2183:3:12",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "2183:3:12"
                                                        },
                                                        "nativeSrc": "2183:19:12",
                                                        "nodeType": "YulFunctionCall",
                                                        "src": "2183:19:12"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "mload",
                                                      "nativeSrc": "2177:5:12",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "2177:5:12"
                                                    },
                                                    "nativeSrc": "2177:26:12",
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "2177:26:12"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "sstore",
                                                  "nativeSrc": "2162:6:12",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2162:6:12"
                                                },
                                                "nativeSrc": "2162:42:12",
                                                "nodeType": "YulFunctionCall",
                                                "src": "2162:42:12"
                                              },
                                              "nativeSrc": "2162:42:12",
                                              "nodeType": "YulExpressionStatement",
                                              "src": "2162:42:12"
                                            },
                                            {
                                              "nativeSrc": "2221:24:12",
                                              "nodeType": "YulAssignment",
                                              "src": "2221:24:12",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "name": "dstPtr",
                                                    "nativeSrc": "2235:6:12",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "2235:6:12"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "2243:1:12",
                                                    "nodeType": "YulLiteral",
                                                    "src": "2243:1:12",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nativeSrc": "2231:3:12",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2231:3:12"
                                                },
                                                "nativeSrc": "2231:14:12",
                                                "nodeType": "YulFunctionCall",
                                                "src": "2231:14:12"
                                              },
                                              "variableNames": [
                                                {
                                                  "name": "dstPtr",
                                                  "nativeSrc": "2221:6:12",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2221:6:12"
                                                }
                                              ]
                                            },
                                            {
                                              "nativeSrc": "2262:33:12",
                                              "nodeType": "YulAssignment",
                                              "src": "2262:33:12",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "name": "srcOffset",
                                                    "nativeSrc": "2279:9:12",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "2279:9:12"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "2290:4:12",
                                                    "nodeType": "YulLiteral",
                                                    "src": "2290:4:12",
                                                    "type": "",
                                                    "value": "0x20"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nativeSrc": "2275:3:12",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2275:3:12"
                                                },
                                                "nativeSrc": "2275:20:12",
                                                "nodeType": "YulFunctionCall",
                                                "src": "2275:20:12"
                                              },
                                              "variableNames": [
                                                {
                                                  "name": "srcOffset",
                                                  "nativeSrc": "2262:9:12",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2262:9:12"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        "condition": {
                                          "arguments": [
                                            {
                                              "name": "i",
                                              "nativeSrc": "2098:1:12",
                                              "nodeType": "YulIdentifier",
                                              "src": "2098:1:12"
                                            },
                                            {
                                              "name": "loopEnd",
                                              "nativeSrc": "2101:7:12",
                                              "nodeType": "YulIdentifier",
                                              "src": "2101:7:12"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "lt",
                                            "nativeSrc": "2095:2:12",
                                            "nodeType": "YulIdentifier",
                                            "src": "2095:2:12"
                                          },
                                          "nativeSrc": "2095:14:12",
                                          "nodeType": "YulFunctionCall",
                                          "src": "2095:14:12"
                                        },
                                        "nativeSrc": "2087:222:12",
                                        "nodeType": "YulForLoop",
                                        "post": {
                                          "nativeSrc": "2110:21:12",
                                          "nodeType": "YulBlock",
                                          "src": "2110:21:12",
                                          "statements": [
                                            {
                                              "nativeSrc": "2112:17:12",
                                              "nodeType": "YulAssignment",
                                              "src": "2112:17:12",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "name": "i",
                                                    "nativeSrc": "2121:1:12",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "2121:1:12"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "2124:4:12",
                                                    "nodeType": "YulLiteral",
                                                    "src": "2124:4:12",
                                                    "type": "",
                                                    "value": "0x20"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nativeSrc": "2117:3:12",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2117:3:12"
                                                },
                                                "nativeSrc": "2117:12:12",
                                                "nodeType": "YulFunctionCall",
                                                "src": "2117:12:12"
                                              },
                                              "variableNames": [
                                                {
                                                  "name": "i",
                                                  "nativeSrc": "2112:1:12",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2112:1:12"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        "pre": {
                                          "nativeSrc": "2091:3:12",
                                          "nodeType": "YulBlock",
                                          "src": "2091:3:12",
                                          "statements": []
                                        },
                                        "src": "2087:222:12"
                                      },
                                      {
                                        "body": {
                                          "nativeSrc": "2357:166:12",
                                          "nodeType": "YulBlock",
                                          "src": "2357:166:12",
                                          "statements": [
                                            {
                                              "nativeSrc": "2375:43:12",
                                              "nodeType": "YulVariableDeclaration",
                                              "src": "2375:43:12",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "src",
                                                        "nativeSrc": "2402:3:12",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "2402:3:12"
                                                      },
                                                      {
                                                        "name": "srcOffset",
                                                        "nativeSrc": "2407:9:12",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "2407:9:12"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "add",
                                                      "nativeSrc": "2398:3:12",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "2398:3:12"
                                                    },
                                                    "nativeSrc": "2398:19:12",
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "2398:19:12"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "mload",
                                                  "nativeSrc": "2392:5:12",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2392:5:12"
                                                },
                                                "nativeSrc": "2392:26:12",
                                                "nodeType": "YulFunctionCall",
                                                "src": "2392:26:12"
                                              },
                                              "variables": [
                                                {
                                                  "name": "lastValue",
                                                  "nativeSrc": "2379:9:12",
                                                  "nodeType": "YulTypedName",
                                                  "src": "2379:9:12",
                                                  "type": ""
                                                }
                                              ]
                                            },
                                            {
                                              "expression": {
                                                "arguments": [
                                                  {
                                                    "name": "dstPtr",
                                                    "nativeSrc": "2442:6:12",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "2442:6:12"
                                                  },
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "lastValue",
                                                        "nativeSrc": "2454:9:12",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "2454:9:12"
                                                      },
                                                      {
                                                        "arguments": [
                                                          {
                                                            "arguments": [
                                                              {
                                                                "arguments": [
                                                                  {
                                                                    "arguments": [
                                                                      {
                                                                        "kind": "number",
                                                                        "nativeSrc": "2481:1:12",
                                                                        "nodeType": "YulLiteral",
                                                                        "src": "2481:1:12",
                                                                        "type": "",
                                                                        "value": "3"
                                                                      },
                                                                      {
                                                                        "name": "newLen",
                                                                        "nativeSrc": "2484:6:12",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "2484:6:12"
                                                                      }
                                                                    ],
                                                                    "functionName": {
                                                                      "name": "shl",
                                                                      "nativeSrc": "2477:3:12",
                                                                      "nodeType": "YulIdentifier",
                                                                      "src": "2477:3:12"
                                                                    },
                                                                    "nativeSrc": "2477:14:12",
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "2477:14:12"
                                                                  },
                                                                  {
                                                                    "kind": "number",
                                                                    "nativeSrc": "2493:3:12",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "2493:3:12",
                                                                    "type": "",
                                                                    "value": "248"
                                                                  }
                                                                ],
                                                                "functionName": {
                                                                  "name": "and",
                                                                  "nativeSrc": "2473:3:12",
                                                                  "nodeType": "YulIdentifier",
                                                                  "src": "2473:3:12"
                                                                },
                                                                "nativeSrc": "2473:24:12",
                                                                "nodeType": "YulFunctionCall",
                                                                "src": "2473:24:12"
                                                              },
                                                              {
                                                                "arguments": [
                                                                  {
                                                                    "kind": "number",
                                                                    "nativeSrc": "2503:1:12",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "2503:1:12",
                                                                    "type": "",
                                                                    "value": "0"
                                                                  }
                                                                ],
                                                                "functionName": {
                                                                  "name": "not",
                                                                  "nativeSrc": "2499:3:12",
                                                                  "nodeType": "YulIdentifier",
                                                                  "src": "2499:3:12"
                                                                },
                                                                "nativeSrc": "2499:6:12",
                                                                "nodeType": "YulFunctionCall",
                                                                "src": "2499:6:12"
                                                              }
                                                            ],
                                                            "functionName": {
                                                              "name": "shr",
                                                              "nativeSrc": "2469:3:12",
                                                              "nodeType": "YulIdentifier",
                                                              "src": "2469:3:12"
                                                            },
                                                            "nativeSrc": "2469:37:12",
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "2469:37:12"
                                                          }
                                                        ],
                                                        "functionName": {
                                                          "name": "not",
                                                          "nativeSrc": "2465:3:12",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "2465:3:12"
                                                        },
                                                        "nativeSrc": "2465:42:12",
                                                        "nodeType": "YulFunctionCall",
                                                        "src": "2465:42:12"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "and",
                                                      "nativeSrc": "2450:3:12",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "2450:3:12"
                                                    },
                                                    "nativeSrc": "2450:58:12",
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "2450:58:12"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "sstore",
                                                  "nativeSrc": "2435:6:12",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2435:6:12"
                                                },
                                                "nativeSrc": "2435:74:12",
                                                "nodeType": "YulFunctionCall",
                                                "src": "2435:74:12"
                                              },
                                              "nativeSrc": "2435:74:12",
                                              "nodeType": "YulExpressionStatement",
                                              "src": "2435:74:12"
                                            }
                                          ]
                                        },
                                        "condition": {
                                          "arguments": [
                                            {
                                              "name": "loopEnd",
                                              "nativeSrc": "2328:7:12",
                                              "nodeType": "YulIdentifier",
                                              "src": "2328:7:12"
                                            },
                                            {
                                              "name": "newLen",
                                              "nativeSrc": "2337:6:12",
                                              "nodeType": "YulIdentifier",
                                              "src": "2337:6:12"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "lt",
                                            "nativeSrc": "2325:2:12",
                                            "nodeType": "YulIdentifier",
                                            "src": "2325:2:12"
                                          },
                                          "nativeSrc": "2325:19:12",
                                          "nodeType": "YulFunctionCall",
                                          "src": "2325:19:12"
                                        },
                                        "nativeSrc": "2322:201:12",
                                        "nodeType": "YulIf",
                                        "src": "2322:201:12"
                                      },
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "name": "slot",
                                              "nativeSrc": "2543:4:12",
                                              "nodeType": "YulIdentifier",
                                              "src": "2543:4:12"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "arguments": [
                                                    {
                                                      "kind": "number",
                                                      "nativeSrc": "2557:1:12",
                                                      "nodeType": "YulLiteral",
                                                      "src": "2557:1:12",
                                                      "type": "",
                                                      "value": "1"
                                                    },
                                                    {
                                                      "name": "newLen",
                                                      "nativeSrc": "2560:6:12",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "2560:6:12"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "shl",
                                                    "nativeSrc": "2553:3:12",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "2553:3:12"
                                                  },
                                                  "nativeSrc": "2553:14:12",
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "2553:14:12"
                                                },
                                                {
                                                  "kind": "number",
                                                  "nativeSrc": "2569:1:12",
                                                  "nodeType": "YulLiteral",
                                                  "src": "2569:1:12",
                                                  "type": "",
                                                  "value": "1"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nativeSrc": "2549:3:12",
                                                "nodeType": "YulIdentifier",
                                                "src": "2549:3:12"
                                              },
                                              "nativeSrc": "2549:22:12",
                                              "nodeType": "YulFunctionCall",
                                              "src": "2549:22:12"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "sstore",
                                            "nativeSrc": "2536:6:12",
                                            "nodeType": "YulIdentifier",
                                            "src": "2536:6:12"
                                          },
                                          "nativeSrc": "2536:36:12",
                                          "nodeType": "YulFunctionCall",
                                          "src": "2536:36:12"
                                        },
                                        "nativeSrc": "2536:36:12",
                                        "nodeType": "YulExpressionStatement",
                                        "src": "2536:36:12"
                                      }
                                    ]
                                  },
                                  "nativeSrc": "1933:649:12",
                                  "nodeType": "YulCase",
                                  "src": "1933:649:12",
                                  "value": {
                                    "kind": "number",
                                    "nativeSrc": "1938:1:12",
                                    "nodeType": "YulLiteral",
                                    "src": "1938:1:12",
                                    "type": "",
                                    "value": "1"
                                  }
                                },
                                {
                                  "body": {
                                    "nativeSrc": "2599:234:12",
                                    "nodeType": "YulBlock",
                                    "src": "2599:234:12",
                                    "statements": [
                                      {
                                        "nativeSrc": "2613:14:12",
                                        "nodeType": "YulVariableDeclaration",
                                        "src": "2613:14:12",
                                        "value": {
                                          "kind": "number",
                                          "nativeSrc": "2626:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "2626:1:12",
                                          "type": "",
                                          "value": "0"
                                        },
                                        "variables": [
                                          {
                                            "name": "value",
                                            "nativeSrc": "2617:5:12",
                                            "nodeType": "YulTypedName",
                                            "src": "2617:5:12",
                                            "type": ""
                                          }
                                        ]
                                      },
                                      {
                                        "body": {
                                          "nativeSrc": "2662:67:12",
                                          "nodeType": "YulBlock",
                                          "src": "2662:67:12",
                                          "statements": [
                                            {
                                              "nativeSrc": "2680:35:12",
                                              "nodeType": "YulAssignment",
                                              "src": "2680:35:12",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "src",
                                                        "nativeSrc": "2699:3:12",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "2699:3:12"
                                                      },
                                                      {
                                                        "name": "srcOffset",
                                                        "nativeSrc": "2704:9:12",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "2704:9:12"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "add",
                                                      "nativeSrc": "2695:3:12",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "2695:3:12"
                                                    },
                                                    "nativeSrc": "2695:19:12",
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "2695:19:12"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "mload",
                                                  "nativeSrc": "2689:5:12",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2689:5:12"
                                                },
                                                "nativeSrc": "2689:26:12",
                                                "nodeType": "YulFunctionCall",
                                                "src": "2689:26:12"
                                              },
                                              "variableNames": [
                                                {
                                                  "name": "value",
                                                  "nativeSrc": "2680:5:12",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2680:5:12"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        "condition": {
                                          "name": "newLen",
                                          "nativeSrc": "2643:6:12",
                                          "nodeType": "YulIdentifier",
                                          "src": "2643:6:12"
                                        },
                                        "nativeSrc": "2640:89:12",
                                        "nodeType": "YulIf",
                                        "src": "2640:89:12"
                                      },
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "name": "slot",
                                              "nativeSrc": "2749:4:12",
                                              "nodeType": "YulIdentifier",
                                              "src": "2749:4:12"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "name": "value",
                                                  "nativeSrc": "2808:5:12",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2808:5:12"
                                                },
                                                {
                                                  "name": "newLen",
                                                  "nativeSrc": "2815:6:12",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2815:6:12"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "extract_used_part_and_set_length_of_short_byte_array",
                                                "nativeSrc": "2755:52:12",
                                                "nodeType": "YulIdentifier",
                                                "src": "2755:52:12"
                                              },
                                              "nativeSrc": "2755:67:12",
                                              "nodeType": "YulFunctionCall",
                                              "src": "2755:67:12"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "sstore",
                                            "nativeSrc": "2742:6:12",
                                            "nodeType": "YulIdentifier",
                                            "src": "2742:6:12"
                                          },
                                          "nativeSrc": "2742:81:12",
                                          "nodeType": "YulFunctionCall",
                                          "src": "2742:81:12"
                                        },
                                        "nativeSrc": "2742:81:12",
                                        "nodeType": "YulExpressionStatement",
                                        "src": "2742:81:12"
                                      }
                                    ]
                                  },
                                  "nativeSrc": "2591:242:12",
                                  "nodeType": "YulCase",
                                  "src": "2591:242:12",
                                  "value": "default"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "newLen",
                                    "nativeSrc": "1913:6:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "1913:6:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1921:2:12",
                                    "nodeType": "YulLiteral",
                                    "src": "1921:2:12",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "1910:2:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "1910:2:12"
                                },
                                "nativeSrc": "1910:14:12",
                                "nodeType": "YulFunctionCall",
                                "src": "1910:14:12"
                              },
                              "nativeSrc": "1903:930:12",
                              "nodeType": "YulSwitch",
                              "src": "1903:930:12"
                            }
                          ]
                        },
                        "name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
                        "nativeSrc": "1540:1299:12",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "slot",
                            "nativeSrc": "1621:4:12",
                            "nodeType": "YulTypedName",
                            "src": "1621:4:12",
                            "type": ""
                          },
                          {
                            "name": "src",
                            "nativeSrc": "1627:3:12",
                            "nodeType": "YulTypedName",
                            "src": "1627:3:12",
                            "type": ""
                          }
                        ],
                        "src": "1540:1299:12"
                      },
                      {
                        "body": {
                          "nativeSrc": "2876:95:12",
                          "nodeType": "YulBlock",
                          "src": "2876:95:12",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "2893:1:12",
                                    "nodeType": "YulLiteral",
                                    "src": "2893:1:12",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nativeSrc": "2900:3:12",
                                        "nodeType": "YulLiteral",
                                        "src": "2900:3:12",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "2905:10:12",
                                        "nodeType": "YulLiteral",
                                        "src": "2905:10:12",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nativeSrc": "2896:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "2896:3:12"
                                    },
                                    "nativeSrc": "2896:20:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2896:20:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "2886:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "2886:6:12"
                                },
                                "nativeSrc": "2886:31:12",
                                "nodeType": "YulFunctionCall",
                                "src": "2886:31:12"
                              },
                              "nativeSrc": "2886:31:12",
                              "nodeType": "YulExpressionStatement",
                              "src": "2886:31:12"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "2933:1:12",
                                    "nodeType": "YulLiteral",
                                    "src": "2933:1:12",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "2936:4:12",
                                    "nodeType": "YulLiteral",
                                    "src": "2936:4:12",
                                    "type": "",
                                    "value": "0x11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "2926:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "2926:6:12"
                                },
                                "nativeSrc": "2926:15:12",
                                "nodeType": "YulFunctionCall",
                                "src": "2926:15:12"
                              },
                              "nativeSrc": "2926:15:12",
                              "nodeType": "YulExpressionStatement",
                              "src": "2926:15:12"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "2957:1:12",
                                    "nodeType": "YulLiteral",
                                    "src": "2957:1:12",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "2960:4:12",
                                    "nodeType": "YulLiteral",
                                    "src": "2960:4:12",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nativeSrc": "2950:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "2950:6:12"
                                },
                                "nativeSrc": "2950:15:12",
                                "nodeType": "YulFunctionCall",
                                "src": "2950:15:12"
                              },
                              "nativeSrc": "2950:15:12",
                              "nodeType": "YulExpressionStatement",
                              "src": "2950:15:12"
                            }
                          ]
                        },
                        "name": "panic_error_0x11",
                        "nativeSrc": "2844:127:12",
                        "nodeType": "YulFunctionDefinition",
                        "src": "2844:127:12"
                      },
                      {
                        "body": {
                          "nativeSrc": "3045:306:12",
                          "nodeType": "YulBlock",
                          "src": "3045:306:12",
                          "statements": [
                            {
                              "nativeSrc": "3055:10:12",
                              "nodeType": "YulAssignment",
                              "src": "3055:10:12",
                              "value": {
                                "kind": "number",
                                "nativeSrc": "3064:1:12",
                                "nodeType": "YulLiteral",
                                "src": "3064:1:12",
                                "type": "",
                                "value": "1"
                              },
                              "variableNames": [
                                {
                                  "name": "power",
                                  "nativeSrc": "3055:5:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "3055:5:12"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "3074:13:12",
                              "nodeType": "YulAssignment",
                              "src": "3074:13:12",
                              "value": {
                                "name": "_base",
                                "nativeSrc": "3082:5:12",
                                "nodeType": "YulIdentifier",
                                "src": "3082:5:12"
                              },
                              "variableNames": [
                                {
                                  "name": "base",
                                  "nativeSrc": "3074:4:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "3074:4:12"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "3132:213:12",
                                "nodeType": "YulBlock",
                                "src": "3132:213:12",
                                "statements": [
                                  {
                                    "body": {
                                      "nativeSrc": "3174:22:12",
                                      "nodeType": "YulBlock",
                                      "src": "3174:22:12",
                                      "statements": [
                                        {
                                          "expression": {
                                            "arguments": [],
                                            "functionName": {
                                              "name": "panic_error_0x11",
                                              "nativeSrc": "3176:16:12",
                                              "nodeType": "YulIdentifier",
                                              "src": "3176:16:12"
                                            },
                                            "nativeSrc": "3176:18:12",
                                            "nodeType": "YulFunctionCall",
                                            "src": "3176:18:12"
                                          },
                                          "nativeSrc": "3176:18:12",
                                          "nodeType": "YulExpressionStatement",
                                          "src": "3176:18:12"
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "name": "base",
                                          "nativeSrc": "3152:4:12",
                                          "nodeType": "YulIdentifier",
                                          "src": "3152:4:12"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "name": "max",
                                              "nativeSrc": "3162:3:12",
                                              "nodeType": "YulIdentifier",
                                              "src": "3162:3:12"
                                            },
                                            {
                                              "name": "base",
                                              "nativeSrc": "3167:4:12",
                                              "nodeType": "YulIdentifier",
                                              "src": "3167:4:12"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "div",
                                            "nativeSrc": "3158:3:12",
                                            "nodeType": "YulIdentifier",
                                            "src": "3158:3:12"
                                          },
                                          "nativeSrc": "3158:14:12",
                                          "nodeType": "YulFunctionCall",
                                          "src": "3158:14:12"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "gt",
                                        "nativeSrc": "3149:2:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "3149:2:12"
                                      },
                                      "nativeSrc": "3149:24:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "3149:24:12"
                                    },
                                    "nativeSrc": "3146:50:12",
                                    "nodeType": "YulIf",
                                    "src": "3146:50:12"
                                  },
                                  {
                                    "body": {
                                      "nativeSrc": "3229:29:12",
                                      "nodeType": "YulBlock",
                                      "src": "3229:29:12",
                                      "statements": [
                                        {
                                          "nativeSrc": "3231:25:12",
                                          "nodeType": "YulAssignment",
                                          "src": "3231:25:12",
                                          "value": {
                                            "arguments": [
                                              {
                                                "name": "power",
                                                "nativeSrc": "3244:5:12",
                                                "nodeType": "YulIdentifier",
                                                "src": "3244:5:12"
                                              },
                                              {
                                                "name": "base",
                                                "nativeSrc": "3251:4:12",
                                                "nodeType": "YulIdentifier",
                                                "src": "3251:4:12"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "mul",
                                              "nativeSrc": "3240:3:12",
                                              "nodeType": "YulIdentifier",
                                              "src": "3240:3:12"
                                            },
                                            "nativeSrc": "3240:16:12",
                                            "nodeType": "YulFunctionCall",
                                            "src": "3240:16:12"
                                          },
                                          "variableNames": [
                                            {
                                              "name": "power",
                                              "nativeSrc": "3231:5:12",
                                              "nodeType": "YulIdentifier",
                                              "src": "3231:5:12"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "name": "exponent",
                                          "nativeSrc": "3216:8:12",
                                          "nodeType": "YulIdentifier",
                                          "src": "3216:8:12"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "3226:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "3226:1:12",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "and",
                                        "nativeSrc": "3212:3:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "3212:3:12"
                                      },
                                      "nativeSrc": "3212:16:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "3212:16:12"
                                    },
                                    "nativeSrc": "3209:49:12",
                                    "nodeType": "YulIf",
                                    "src": "3209:49:12"
                                  },
                                  {
                                    "nativeSrc": "3271:23:12",
                                    "nodeType": "YulAssignment",
                                    "src": "3271:23:12",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "base",
                                          "nativeSrc": "3283:4:12",
                                          "nodeType": "YulIdentifier",
                                          "src": "3283:4:12"
                                        },
                                        {
                                          "name": "base",
                                          "nativeSrc": "3289:4:12",
                                          "nodeType": "YulIdentifier",
                                          "src": "3289:4:12"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mul",
                                        "nativeSrc": "3279:3:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "3279:3:12"
                                      },
                                      "nativeSrc": "3279:15:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "3279:15:12"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "base",
                                        "nativeSrc": "3271:4:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "3271:4:12"
                                      }
                                    ]
                                  },
                                  {
                                    "nativeSrc": "3307:28:12",
                                    "nodeType": "YulAssignment",
                                    "src": "3307:28:12",
                                    "value": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "3323:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "3323:1:12",
                                          "type": "",
                                          "value": "1"
                                        },
                                        {
                                          "name": "exponent",
                                          "nativeSrc": "3326:8:12",
                                          "nodeType": "YulIdentifier",
                                          "src": "3326:8:12"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "shr",
                                        "nativeSrc": "3319:3:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "3319:3:12"
                                      },
                                      "nativeSrc": "3319:16:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "3319:16:12"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "exponent",
                                        "nativeSrc": "3307:8:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "3307:8:12"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "exponent",
                                    "nativeSrc": "3107:8:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "3107:8:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "3117:1:12",
                                    "nodeType": "YulLiteral",
                                    "src": "3117:1:12",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "3104:2:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "3104:2:12"
                                },
                                "nativeSrc": "3104:15:12",
                                "nodeType": "YulFunctionCall",
                                "src": "3104:15:12"
                              },
                              "nativeSrc": "3096:249:12",
                              "nodeType": "YulForLoop",
                              "post": {
                                "nativeSrc": "3120:3:12",
                                "nodeType": "YulBlock",
                                "src": "3120:3:12",
                                "statements": []
                              },
                              "pre": {
                                "nativeSrc": "3100:3:12",
                                "nodeType": "YulBlock",
                                "src": "3100:3:12",
                                "statements": []
                              },
                              "src": "3096:249:12"
                            }
                          ]
                        },
                        "name": "checked_exp_helper",
                        "nativeSrc": "2976:375:12",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "_base",
                            "nativeSrc": "3004:5:12",
                            "nodeType": "YulTypedName",
                            "src": "3004:5:12",
                            "type": ""
                          },
                          {
                            "name": "exponent",
                            "nativeSrc": "3011:8:12",
                            "nodeType": "YulTypedName",
                            "src": "3011:8:12",
                            "type": ""
                          },
                          {
                            "name": "max",
                            "nativeSrc": "3021:3:12",
                            "nodeType": "YulTypedName",
                            "src": "3021:3:12",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "power",
                            "nativeSrc": "3029:5:12",
                            "nodeType": "YulTypedName",
                            "src": "3029:5:12",
                            "type": ""
                          },
                          {
                            "name": "base",
                            "nativeSrc": "3036:4:12",
                            "nodeType": "YulTypedName",
                            "src": "3036:4:12",
                            "type": ""
                          }
                        ],
                        "src": "2976:375:12"
                      },
                      {
                        "body": {
                          "nativeSrc": "3415:843:12",
                          "nodeType": "YulBlock",
                          "src": "3415:843:12",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "3453:52:12",
                                "nodeType": "YulBlock",
                                "src": "3453:52:12",
                                "statements": [
                                  {
                                    "nativeSrc": "3467:10:12",
                                    "nodeType": "YulAssignment",
                                    "src": "3467:10:12",
                                    "value": {
                                      "kind": "number",
                                      "nativeSrc": "3476:1:12",
                                      "nodeType": "YulLiteral",
                                      "src": "3476:1:12",
                                      "type": "",
                                      "value": "1"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "power",
                                        "nativeSrc": "3467:5:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "3467:5:12"
                                      }
                                    ]
                                  },
                                  {
                                    "nativeSrc": "3490:5:12",
                                    "nodeType": "YulLeave",
                                    "src": "3490:5:12"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "exponent",
                                    "nativeSrc": "3435:8:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "3435:8:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "3428:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "3428:6:12"
                                },
                                "nativeSrc": "3428:16:12",
                                "nodeType": "YulFunctionCall",
                                "src": "3428:16:12"
                              },
                              "nativeSrc": "3425:80:12",
                              "nodeType": "YulIf",
                              "src": "3425:80:12"
                            },
                            {
                              "body": {
                                "nativeSrc": "3538:52:12",
                                "nodeType": "YulBlock",
                                "src": "3538:52:12",
                                "statements": [
                                  {
                                    "nativeSrc": "3552:10:12",
                                    "nodeType": "YulAssignment",
                                    "src": "3552:10:12",
                                    "value": {
                                      "kind": "number",
                                      "nativeSrc": "3561:1:12",
                                      "nodeType": "YulLiteral",
                                      "src": "3561:1:12",
                                      "type": "",
                                      "value": "0"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "power",
                                        "nativeSrc": "3552:5:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "3552:5:12"
                                      }
                                    ]
                                  },
                                  {
                                    "nativeSrc": "3575:5:12",
                                    "nodeType": "YulLeave",
                                    "src": "3575:5:12"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "base",
                                    "nativeSrc": "3524:4:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "3524:4:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "3517:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "3517:6:12"
                                },
                                "nativeSrc": "3517:12:12",
                                "nodeType": "YulFunctionCall",
                                "src": "3517:12:12"
                              },
                              "nativeSrc": "3514:76:12",
                              "nodeType": "YulIf",
                              "src": "3514:76:12"
                            },
                            {
                              "cases": [
                                {
                                  "body": {
                                    "nativeSrc": "3626:52:12",
                                    "nodeType": "YulBlock",
                                    "src": "3626:52:12",
                                    "statements": [
                                      {
                                        "nativeSrc": "3640:10:12",
                                        "nodeType": "YulAssignment",
                                        "src": "3640:10:12",
                                        "value": {
                                          "kind": "number",
                                          "nativeSrc": "3649:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "3649:1:12",
                                          "type": "",
                                          "value": "1"
                                        },
                                        "variableNames": [
                                          {
                                            "name": "power",
                                            "nativeSrc": "3640:5:12",
                                            "nodeType": "YulIdentifier",
                                            "src": "3640:5:12"
                                          }
                                        ]
                                      },
                                      {
                                        "nativeSrc": "3663:5:12",
                                        "nodeType": "YulLeave",
                                        "src": "3663:5:12"
                                      }
                                    ]
                                  },
                                  "nativeSrc": "3619:59:12",
                                  "nodeType": "YulCase",
                                  "src": "3619:59:12",
                                  "value": {
                                    "kind": "number",
                                    "nativeSrc": "3624:1:12",
                                    "nodeType": "YulLiteral",
                                    "src": "3624:1:12",
                                    "type": "",
                                    "value": "1"
                                  }
                                },
                                {
                                  "body": {
                                    "nativeSrc": "3694:167:12",
                                    "nodeType": "YulBlock",
                                    "src": "3694:167:12",
                                    "statements": [
                                      {
                                        "body": {
                                          "nativeSrc": "3729:22:12",
                                          "nodeType": "YulBlock",
                                          "src": "3729:22:12",
                                          "statements": [
                                            {
                                              "expression": {
                                                "arguments": [],
                                                "functionName": {
                                                  "name": "panic_error_0x11",
                                                  "nativeSrc": "3731:16:12",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "3731:16:12"
                                                },
                                                "nativeSrc": "3731:18:12",
                                                "nodeType": "YulFunctionCall",
                                                "src": "3731:18:12"
                                              },
                                              "nativeSrc": "3731:18:12",
                                              "nodeType": "YulExpressionStatement",
                                              "src": "3731:18:12"
                                            }
                                          ]
                                        },
                                        "condition": {
                                          "arguments": [
                                            {
                                              "name": "exponent",
                                              "nativeSrc": "3714:8:12",
                                              "nodeType": "YulIdentifier",
                                              "src": "3714:8:12"
                                            },
                                            {
                                              "kind": "number",
                                              "nativeSrc": "3724:3:12",
                                              "nodeType": "YulLiteral",
                                              "src": "3724:3:12",
                                              "type": "",
                                              "value": "255"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "gt",
                                            "nativeSrc": "3711:2:12",
                                            "nodeType": "YulIdentifier",
                                            "src": "3711:2:12"
                                          },
                                          "nativeSrc": "3711:17:12",
                                          "nodeType": "YulFunctionCall",
                                          "src": "3711:17:12"
                                        },
                                        "nativeSrc": "3708:43:12",
                                        "nodeType": "YulIf",
                                        "src": "3708:43:12"
                                      },
                                      {
                                        "nativeSrc": "3764:25:12",
                                        "nodeType": "YulAssignment",
                                        "src": "3764:25:12",
                                        "value": {
                                          "arguments": [
                                            {
                                              "name": "exponent",
                                              "nativeSrc": "3777:8:12",
                                              "nodeType": "YulIdentifier",
                                              "src": "3777:8:12"
                                            },
                                            {
                                              "kind": "number",
                                              "nativeSrc": "3787:1:12",
                                              "nodeType": "YulLiteral",
                                              "src": "3787:1:12",
                                              "type": "",
                                              "value": "1"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shl",
                                            "nativeSrc": "3773:3:12",
                                            "nodeType": "YulIdentifier",
                                            "src": "3773:3:12"
                                          },
                                          "nativeSrc": "3773:16:12",
                                          "nodeType": "YulFunctionCall",
                                          "src": "3773:16:12"
                                        },
                                        "variableNames": [
                                          {
                                            "name": "power",
                                            "nativeSrc": "3764:5:12",
                                            "nodeType": "YulIdentifier",
                                            "src": "3764:5:12"
                                          }
                                        ]
                                      },
                                      {
                                        "nativeSrc": "3802:11:12",
                                        "nodeType": "YulVariableDeclaration",
                                        "src": "3802:11:12",
                                        "value": {
                                          "kind": "number",
                                          "nativeSrc": "3812:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "3812:1:12",
                                          "type": "",
                                          "value": "0"
                                        },
                                        "variables": [
                                          {
                                            "name": "_1",
                                            "nativeSrc": "3806:2:12",
                                            "nodeType": "YulTypedName",
                                            "src": "3806:2:12",
                                            "type": ""
                                          }
                                        ]
                                      },
                                      {
                                        "nativeSrc": "3826:7:12",
                                        "nodeType": "YulAssignment",
                                        "src": "3826:7:12",
                                        "value": {
                                          "kind": "number",
                                          "nativeSrc": "3832:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "3832:1:12",
                                          "type": "",
                                          "value": "0"
                                        },
                                        "variableNames": [
                                          {
                                            "name": "_1",
                                            "nativeSrc": "3826:2:12",
                                            "nodeType": "YulIdentifier",
                                            "src": "3826:2:12"
                                          }
                                        ]
                                      },
                                      {
                                        "nativeSrc": "3846:5:12",
                                        "nodeType": "YulLeave",
                                        "src": "3846:5:12"
                                      }
                                    ]
                                  },
                                  "nativeSrc": "3687:174:12",
                                  "nodeType": "YulCase",
                                  "src": "3687:174:12",
                                  "value": {
                                    "kind": "number",
                                    "nativeSrc": "3692:1:12",
                                    "nodeType": "YulLiteral",
                                    "src": "3692:1:12",
                                    "type": "",
                                    "value": "2"
                                  }
                                }
                              ],
                              "expression": {
                                "name": "base",
                                "nativeSrc": "3606:4:12",
                                "nodeType": "YulIdentifier",
                                "src": "3606:4:12"
                              },
                              "nativeSrc": "3599:262:12",
                              "nodeType": "YulSwitch",
                              "src": "3599:262:12"
                            },
                            {
                              "body": {
                                "nativeSrc": "3959:114:12",
                                "nodeType": "YulBlock",
                                "src": "3959:114:12",
                                "statements": [
                                  {
                                    "nativeSrc": "3973:28:12",
                                    "nodeType": "YulAssignment",
                                    "src": "3973:28:12",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "base",
                                          "nativeSrc": "3986:4:12",
                                          "nodeType": "YulIdentifier",
                                          "src": "3986:4:12"
                                        },
                                        {
                                          "name": "exponent",
                                          "nativeSrc": "3992:8:12",
                                          "nodeType": "YulIdentifier",
                                          "src": "3992:8:12"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "exp",
                                        "nativeSrc": "3982:3:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "3982:3:12"
                                      },
                                      "nativeSrc": "3982:19:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "3982:19:12"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "power",
                                        "nativeSrc": "3973:5:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "3973:5:12"
                                      }
                                    ]
                                  },
                                  {
                                    "nativeSrc": "4014:11:12",
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "4014:11:12",
                                    "value": {
                                      "kind": "number",
                                      "nativeSrc": "4024:1:12",
                                      "nodeType": "YulLiteral",
                                      "src": "4024:1:12",
                                      "type": "",
                                      "value": "0"
                                    },
                                    "variables": [
                                      {
                                        "name": "_2",
                                        "nativeSrc": "4018:2:12",
                                        "nodeType": "YulTypedName",
                                        "src": "4018:2:12",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "nativeSrc": "4038:7:12",
                                    "nodeType": "YulAssignment",
                                    "src": "4038:7:12",
                                    "value": {
                                      "kind": "number",
                                      "nativeSrc": "4044:1:12",
                                      "nodeType": "YulLiteral",
                                      "src": "4044:1:12",
                                      "type": "",
                                      "value": "0"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "_2",
                                        "nativeSrc": "4038:2:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "4038:2:12"
                                      }
                                    ]
                                  },
                                  {
                                    "nativeSrc": "4058:5:12",
                                    "nodeType": "YulLeave",
                                    "src": "4058:5:12"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "base",
                                            "nativeSrc": "3883:4:12",
                                            "nodeType": "YulIdentifier",
                                            "src": "3883:4:12"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "3889:2:12",
                                            "nodeType": "YulLiteral",
                                            "src": "3889:2:12",
                                            "type": "",
                                            "value": "11"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "lt",
                                          "nativeSrc": "3880:2:12",
                                          "nodeType": "YulIdentifier",
                                          "src": "3880:2:12"
                                        },
                                        "nativeSrc": "3880:12:12",
                                        "nodeType": "YulFunctionCall",
                                        "src": "3880:12:12"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "exponent",
                                            "nativeSrc": "3897:8:12",
                                            "nodeType": "YulIdentifier",
                                            "src": "3897:8:12"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "3907:2:12",
                                            "nodeType": "YulLiteral",
                                            "src": "3907:2:12",
                                            "type": "",
                                            "value": "78"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "lt",
                                          "nativeSrc": "3894:2:12",
                                          "nodeType": "YulIdentifier",
                                          "src": "3894:2:12"
                                        },
                                        "nativeSrc": "3894:16:12",
                                        "nodeType": "YulFunctionCall",
                                        "src": "3894:16:12"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "3876:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "3876:3:12"
                                    },
                                    "nativeSrc": "3876:35:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "3876:35:12"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "base",
                                            "nativeSrc": "3920:4:12",
                                            "nodeType": "YulIdentifier",
                                            "src": "3920:4:12"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "3926:3:12",
                                            "nodeType": "YulLiteral",
                                            "src": "3926:3:12",
                                            "type": "",
                                            "value": "307"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "lt",
                                          "nativeSrc": "3917:2:12",
                                          "nodeType": "YulIdentifier",
                                          "src": "3917:2:12"
                                        },
                                        "nativeSrc": "3917:13:12",
                                        "nodeType": "YulFunctionCall",
                                        "src": "3917:13:12"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "exponent",
                                            "nativeSrc": "3935:8:12",
                                            "nodeType": "YulIdentifier",
                                            "src": "3935:8:12"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "3945:2:12",
                                            "nodeType": "YulLiteral",
                                            "src": "3945:2:12",
                                            "type": "",
                                            "value": "32"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "lt",
                                          "nativeSrc": "3932:2:12",
                                          "nodeType": "YulIdentifier",
                                          "src": "3932:2:12"
                                        },
                                        "nativeSrc": "3932:16:12",
                                        "nodeType": "YulFunctionCall",
                                        "src": "3932:16:12"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "3913:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "3913:3:12"
                                    },
                                    "nativeSrc": "3913:36:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "3913:36:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "or",
                                  "nativeSrc": "3873:2:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "3873:2:12"
                                },
                                "nativeSrc": "3873:77:12",
                                "nodeType": "YulFunctionCall",
                                "src": "3873:77:12"
                              },
                              "nativeSrc": "3870:203:12",
                              "nodeType": "YulIf",
                              "src": "3870:203:12"
                            },
                            {
                              "nativeSrc": "4082:65:12",
                              "nodeType": "YulVariableDeclaration",
                              "src": "4082:65:12",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "base",
                                    "nativeSrc": "4124:4:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "4124:4:12"
                                  },
                                  {
                                    "name": "exponent",
                                    "nativeSrc": "4130:8:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "4130:8:12"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nativeSrc": "4144:1:12",
                                        "nodeType": "YulLiteral",
                                        "src": "4144:1:12",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nativeSrc": "4140:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "4140:3:12"
                                    },
                                    "nativeSrc": "4140:6:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4140:6:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "checked_exp_helper",
                                  "nativeSrc": "4105:18:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "4105:18:12"
                                },
                                "nativeSrc": "4105:42:12",
                                "nodeType": "YulFunctionCall",
                                "src": "4105:42:12"
                              },
                              "variables": [
                                {
                                  "name": "power_1",
                                  "nativeSrc": "4086:7:12",
                                  "nodeType": "YulTypedName",
                                  "src": "4086:7:12",
                                  "type": ""
                                },
                                {
                                  "name": "base_1",
                                  "nativeSrc": "4095:6:12",
                                  "nodeType": "YulTypedName",
                                  "src": "4095:6:12",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "4192:22:12",
                                "nodeType": "YulBlock",
                                "src": "4192:22:12",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nativeSrc": "4194:16:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "4194:16:12"
                                      },
                                      "nativeSrc": "4194:18:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "4194:18:12"
                                    },
                                    "nativeSrc": "4194:18:12",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4194:18:12"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "power_1",
                                    "nativeSrc": "4162:7:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "4162:7:12"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nativeSrc": "4179:1:12",
                                            "nodeType": "YulLiteral",
                                            "src": "4179:1:12",
                                            "type": "",
                                            "value": "0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "not",
                                          "nativeSrc": "4175:3:12",
                                          "nodeType": "YulIdentifier",
                                          "src": "4175:3:12"
                                        },
                                        "nativeSrc": "4175:6:12",
                                        "nodeType": "YulFunctionCall",
                                        "src": "4175:6:12"
                                      },
                                      {
                                        "name": "base_1",
                                        "nativeSrc": "4183:6:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "4183:6:12"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "div",
                                      "nativeSrc": "4171:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "4171:3:12"
                                    },
                                    "nativeSrc": "4171:19:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4171:19:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "4159:2:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "4159:2:12"
                                },
                                "nativeSrc": "4159:32:12",
                                "nodeType": "YulFunctionCall",
                                "src": "4159:32:12"
                              },
                              "nativeSrc": "4156:58:12",
                              "nodeType": "YulIf",
                              "src": "4156:58:12"
                            },
                            {
                              "nativeSrc": "4223:29:12",
                              "nodeType": "YulAssignment",
                              "src": "4223:29:12",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "power_1",
                                    "nativeSrc": "4236:7:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "4236:7:12"
                                  },
                                  {
                                    "name": "base_1",
                                    "nativeSrc": "4245:6:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "4245:6:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nativeSrc": "4232:3:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "4232:3:12"
                                },
                                "nativeSrc": "4232:20:12",
                                "nodeType": "YulFunctionCall",
                                "src": "4232:20:12"
                              },
                              "variableNames": [
                                {
                                  "name": "power",
                                  "nativeSrc": "4223:5:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "4223:5:12"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_exp_unsigned",
                        "nativeSrc": "3356:902:12",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "base",
                            "nativeSrc": "3386:4:12",
                            "nodeType": "YulTypedName",
                            "src": "3386:4:12",
                            "type": ""
                          },
                          {
                            "name": "exponent",
                            "nativeSrc": "3392:8:12",
                            "nodeType": "YulTypedName",
                            "src": "3392:8:12",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "power",
                            "nativeSrc": "3405:5:12",
                            "nodeType": "YulTypedName",
                            "src": "3405:5:12",
                            "type": ""
                          }
                        ],
                        "src": "3356:902:12"
                      },
                      {
                        "body": {
                          "nativeSrc": "4331:72:12",
                          "nodeType": "YulBlock",
                          "src": "4331:72:12",
                          "statements": [
                            {
                              "nativeSrc": "4341:56:12",
                              "nodeType": "YulAssignment",
                              "src": "4341:56:12",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "base",
                                    "nativeSrc": "4371:4:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "4371:4:12"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "exponent",
                                        "nativeSrc": "4381:8:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "4381:8:12"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "4391:4:12",
                                        "nodeType": "YulLiteral",
                                        "src": "4391:4:12",
                                        "type": "",
                                        "value": "0xff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "4377:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "4377:3:12"
                                    },
                                    "nativeSrc": "4377:19:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4377:19:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "checked_exp_unsigned",
                                  "nativeSrc": "4350:20:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "4350:20:12"
                                },
                                "nativeSrc": "4350:47:12",
                                "nodeType": "YulFunctionCall",
                                "src": "4350:47:12"
                              },
                              "variableNames": [
                                {
                                  "name": "power",
                                  "nativeSrc": "4341:5:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "4341:5:12"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_exp_t_uint256_t_uint8",
                        "nativeSrc": "4263:140:12",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "base",
                            "nativeSrc": "4302:4:12",
                            "nodeType": "YulTypedName",
                            "src": "4302:4:12",
                            "type": ""
                          },
                          {
                            "name": "exponent",
                            "nativeSrc": "4308:8:12",
                            "nodeType": "YulTypedName",
                            "src": "4308:8:12",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "power",
                            "nativeSrc": "4321:5:12",
                            "nodeType": "YulTypedName",
                            "src": "4321:5:12",
                            "type": ""
                          }
                        ],
                        "src": "4263:140:12"
                      },
                      {
                        "body": {
                          "nativeSrc": "4460:116:12",
                          "nodeType": "YulBlock",
                          "src": "4460:116:12",
                          "statements": [
                            {
                              "nativeSrc": "4470:20:12",
                              "nodeType": "YulAssignment",
                              "src": "4470:20:12",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nativeSrc": "4485:1:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "4485:1:12"
                                  },
                                  {
                                    "name": "y",
                                    "nativeSrc": "4488:1:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "4488:1:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nativeSrc": "4481:3:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "4481:3:12"
                                },
                                "nativeSrc": "4481:9:12",
                                "nodeType": "YulFunctionCall",
                                "src": "4481:9:12"
                              },
                              "variableNames": [
                                {
                                  "name": "product",
                                  "nativeSrc": "4470:7:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "4470:7:12"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "4548:22:12",
                                "nodeType": "YulBlock",
                                "src": "4548:22:12",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nativeSrc": "4550:16:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "4550:16:12"
                                      },
                                      "nativeSrc": "4550:18:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "4550:18:12"
                                    },
                                    "nativeSrc": "4550:18:12",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4550:18:12"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "x",
                                            "nativeSrc": "4519:1:12",
                                            "nodeType": "YulIdentifier",
                                            "src": "4519:1:12"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nativeSrc": "4512:6:12",
                                          "nodeType": "YulIdentifier",
                                          "src": "4512:6:12"
                                        },
                                        "nativeSrc": "4512:9:12",
                                        "nodeType": "YulFunctionCall",
                                        "src": "4512:9:12"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "y",
                                            "nativeSrc": "4526:1:12",
                                            "nodeType": "YulIdentifier",
                                            "src": "4526:1:12"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "name": "product",
                                                "nativeSrc": "4533:7:12",
                                                "nodeType": "YulIdentifier",
                                                "src": "4533:7:12"
                                              },
                                              {
                                                "name": "x",
                                                "nativeSrc": "4542:1:12",
                                                "nodeType": "YulIdentifier",
                                                "src": "4542:1:12"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "div",
                                              "nativeSrc": "4529:3:12",
                                              "nodeType": "YulIdentifier",
                                              "src": "4529:3:12"
                                            },
                                            "nativeSrc": "4529:15:12",
                                            "nodeType": "YulFunctionCall",
                                            "src": "4529:15:12"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "eq",
                                          "nativeSrc": "4523:2:12",
                                          "nodeType": "YulIdentifier",
                                          "src": "4523:2:12"
                                        },
                                        "nativeSrc": "4523:22:12",
                                        "nodeType": "YulFunctionCall",
                                        "src": "4523:22:12"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "or",
                                      "nativeSrc": "4509:2:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "4509:2:12"
                                    },
                                    "nativeSrc": "4509:37:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4509:37:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "4502:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "4502:6:12"
                                },
                                "nativeSrc": "4502:45:12",
                                "nodeType": "YulFunctionCall",
                                "src": "4502:45:12"
                              },
                              "nativeSrc": "4499:71:12",
                              "nodeType": "YulIf",
                              "src": "4499:71:12"
                            }
                          ]
                        },
                        "name": "checked_mul_t_uint256",
                        "nativeSrc": "4408:168:12",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nativeSrc": "4439:1:12",
                            "nodeType": "YulTypedName",
                            "src": "4439:1:12",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nativeSrc": "4442:1:12",
                            "nodeType": "YulTypedName",
                            "src": "4442:1:12",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "product",
                            "nativeSrc": "4448:7:12",
                            "nodeType": "YulTypedName",
                            "src": "4448:7:12",
                            "type": ""
                          }
                        ],
                        "src": "4408:168:12"
                      },
                      {
                        "body": {
                          "nativeSrc": "4682:102:12",
                          "nodeType": "YulBlock",
                          "src": "4682:102:12",
                          "statements": [
                            {
                              "nativeSrc": "4692:26:12",
                              "nodeType": "YulAssignment",
                              "src": "4692:26:12",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "4704:9:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "4704:9:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "4715:2:12",
                                    "nodeType": "YulLiteral",
                                    "src": "4715:2:12",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "4700:3:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "4700:3:12"
                                },
                                "nativeSrc": "4700:18:12",
                                "nodeType": "YulFunctionCall",
                                "src": "4700:18:12"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "4692:4:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "4692:4:12"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "4734:9:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "4734:9:12"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nativeSrc": "4749:6:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "4749:6:12"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nativeSrc": "4765:3:12",
                                                "nodeType": "YulLiteral",
                                                "src": "4765:3:12",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "4770:1:12",
                                                "nodeType": "YulLiteral",
                                                "src": "4770:1:12",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nativeSrc": "4761:3:12",
                                              "nodeType": "YulIdentifier",
                                              "src": "4761:3:12"
                                            },
                                            "nativeSrc": "4761:11:12",
                                            "nodeType": "YulFunctionCall",
                                            "src": "4761:11:12"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "4774:1:12",
                                            "nodeType": "YulLiteral",
                                            "src": "4774:1:12",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nativeSrc": "4757:3:12",
                                          "nodeType": "YulIdentifier",
                                          "src": "4757:3:12"
                                        },
                                        "nativeSrc": "4757:19:12",
                                        "nodeType": "YulFunctionCall",
                                        "src": "4757:19:12"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "4745:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "4745:3:12"
                                    },
                                    "nativeSrc": "4745:32:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4745:32:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "4727:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "4727:6:12"
                                },
                                "nativeSrc": "4727:51:12",
                                "nodeType": "YulFunctionCall",
                                "src": "4727:51:12"
                              },
                              "nativeSrc": "4727:51:12",
                              "nodeType": "YulExpressionStatement",
                              "src": "4727:51:12"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nativeSrc": "4581:203:12",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "4651:9:12",
                            "nodeType": "YulTypedName",
                            "src": "4651:9:12",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "4662:6:12",
                            "nodeType": "YulTypedName",
                            "src": "4662:6:12",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "4673:4:12",
                            "nodeType": "YulTypedName",
                            "src": "4673:4:12",
                            "type": ""
                          }
                        ],
                        "src": "4581:203:12"
                      },
                      {
                        "body": {
                          "nativeSrc": "4963:173:12",
                          "nodeType": "YulBlock",
                          "src": "4963:173:12",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "4980:9:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "4980:9:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "4991:2:12",
                                    "nodeType": "YulLiteral",
                                    "src": "4991:2:12",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "4973:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "4973:6:12"
                                },
                                "nativeSrc": "4973:21:12",
                                "nodeType": "YulFunctionCall",
                                "src": "4973:21:12"
                              },
                              "nativeSrc": "4973:21:12",
                              "nodeType": "YulExpressionStatement",
                              "src": "4973:21:12"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "5014:9:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "5014:9:12"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "5025:2:12",
                                        "nodeType": "YulLiteral",
                                        "src": "5025:2:12",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "5010:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "5010:3:12"
                                    },
                                    "nativeSrc": "5010:18:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "5010:18:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "5030:2:12",
                                    "nodeType": "YulLiteral",
                                    "src": "5030:2:12",
                                    "type": "",
                                    "value": "23"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "5003:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "5003:6:12"
                                },
                                "nativeSrc": "5003:30:12",
                                "nodeType": "YulFunctionCall",
                                "src": "5003:30:12"
                              },
                              "nativeSrc": "5003:30:12",
                              "nodeType": "YulExpressionStatement",
                              "src": "5003:30:12"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "5053:9:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "5053:9:12"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "5064:2:12",
                                        "nodeType": "YulLiteral",
                                        "src": "5064:2:12",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "5049:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "5049:3:12"
                                    },
                                    "nativeSrc": "5049:18:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "5049:18:12"
                                  },
                                  {
                                    "hexValue": "546f6b656e207472616e7366657273207061757365642e",
                                    "kind": "string",
                                    "nativeSrc": "5069:25:12",
                                    "nodeType": "YulLiteral",
                                    "src": "5069:25:12",
                                    "type": "",
                                    "value": "Token transfers paused."
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "5042:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "5042:6:12"
                                },
                                "nativeSrc": "5042:53:12",
                                "nodeType": "YulFunctionCall",
                                "src": "5042:53:12"
                              },
                              "nativeSrc": "5042:53:12",
                              "nodeType": "YulExpressionStatement",
                              "src": "5042:53:12"
                            },
                            {
                              "nativeSrc": "5104:26:12",
                              "nodeType": "YulAssignment",
                              "src": "5104:26:12",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "5116:9:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "5116:9:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "5127:2:12",
                                    "nodeType": "YulLiteral",
                                    "src": "5127:2:12",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "5112:3:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "5112:3:12"
                                },
                                "nativeSrc": "5112:18:12",
                                "nodeType": "YulFunctionCall",
                                "src": "5112:18:12"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "5104:4:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "5104:4:12"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_4883a4db8fa89fd27599c351c2e5d12230f9c7f95977ac82d41b94b3b13e60a6__to_t_string_memory_ptr__fromStack_reversed",
                        "nativeSrc": "4789:347:12",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "4940:9:12",
                            "nodeType": "YulTypedName",
                            "src": "4940:9:12",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "4954:4:12",
                            "nodeType": "YulTypedName",
                            "src": "4954:4:12",
                            "type": ""
                          }
                        ],
                        "src": "4789:347:12"
                      },
                      {
                        "body": {
                          "nativeSrc": "5189:77:12",
                          "nodeType": "YulBlock",
                          "src": "5189:77:12",
                          "statements": [
                            {
                              "nativeSrc": "5199:16:12",
                              "nodeType": "YulAssignment",
                              "src": "5199:16:12",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nativeSrc": "5210:1:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "5210:1:12"
                                  },
                                  {
                                    "name": "y",
                                    "nativeSrc": "5213:1:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "5213:1:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "5206:3:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "5206:3:12"
                                },
                                "nativeSrc": "5206:9:12",
                                "nodeType": "YulFunctionCall",
                                "src": "5206:9:12"
                              },
                              "variableNames": [
                                {
                                  "name": "sum",
                                  "nativeSrc": "5199:3:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "5199:3:12"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "5238:22:12",
                                "nodeType": "YulBlock",
                                "src": "5238:22:12",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nativeSrc": "5240:16:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "5240:16:12"
                                      },
                                      "nativeSrc": "5240:18:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "5240:18:12"
                                    },
                                    "nativeSrc": "5240:18:12",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5240:18:12"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nativeSrc": "5230:1:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "5230:1:12"
                                  },
                                  {
                                    "name": "sum",
                                    "nativeSrc": "5233:3:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "5233:3:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "5227:2:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "5227:2:12"
                                },
                                "nativeSrc": "5227:10:12",
                                "nodeType": "YulFunctionCall",
                                "src": "5227:10:12"
                              },
                              "nativeSrc": "5224:36:12",
                              "nodeType": "YulIf",
                              "src": "5224:36:12"
                            }
                          ]
                        },
                        "name": "checked_add_t_uint256",
                        "nativeSrc": "5141:125:12",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nativeSrc": "5172:1:12",
                            "nodeType": "YulTypedName",
                            "src": "5172:1:12",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nativeSrc": "5175:1:12",
                            "nodeType": "YulTypedName",
                            "src": "5175:1:12",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "sum",
                            "nativeSrc": "5181:3:12",
                            "nodeType": "YulTypedName",
                            "src": "5181:3:12",
                            "type": ""
                          }
                        ],
                        "src": "5141:125:12"
                      },
                      {
                        "body": {
                          "nativeSrc": "5428:188:12",
                          "nodeType": "YulBlock",
                          "src": "5428:188:12",
                          "statements": [
                            {
                              "nativeSrc": "5438:26:12",
                              "nodeType": "YulAssignment",
                              "src": "5438:26:12",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "5450:9:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "5450:9:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "5461:2:12",
                                    "nodeType": "YulLiteral",
                                    "src": "5461:2:12",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "5446:3:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "5446:3:12"
                                },
                                "nativeSrc": "5446:18:12",
                                "nodeType": "YulFunctionCall",
                                "src": "5446:18:12"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "5438:4:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "5438:4:12"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "5480:9:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "5480:9:12"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nativeSrc": "5495:6:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "5495:6:12"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nativeSrc": "5511:3:12",
                                                "nodeType": "YulLiteral",
                                                "src": "5511:3:12",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "5516:1:12",
                                                "nodeType": "YulLiteral",
                                                "src": "5516:1:12",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nativeSrc": "5507:3:12",
                                              "nodeType": "YulIdentifier",
                                              "src": "5507:3:12"
                                            },
                                            "nativeSrc": "5507:11:12",
                                            "nodeType": "YulFunctionCall",
                                            "src": "5507:11:12"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "5520:1:12",
                                            "nodeType": "YulLiteral",
                                            "src": "5520:1:12",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nativeSrc": "5503:3:12",
                                          "nodeType": "YulIdentifier",
                                          "src": "5503:3:12"
                                        },
                                        "nativeSrc": "5503:19:12",
                                        "nodeType": "YulFunctionCall",
                                        "src": "5503:19:12"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "5491:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "5491:3:12"
                                    },
                                    "nativeSrc": "5491:32:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "5491:32:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "5473:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "5473:6:12"
                                },
                                "nativeSrc": "5473:51:12",
                                "nodeType": "YulFunctionCall",
                                "src": "5473:51:12"
                              },
                              "nativeSrc": "5473:51:12",
                              "nodeType": "YulExpressionStatement",
                              "src": "5473:51:12"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "5544:9:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "5544:9:12"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "5555:2:12",
                                        "nodeType": "YulLiteral",
                                        "src": "5555:2:12",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "5540:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "5540:3:12"
                                    },
                                    "nativeSrc": "5540:18:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "5540:18:12"
                                  },
                                  {
                                    "name": "value1",
                                    "nativeSrc": "5560:6:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "5560:6:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "5533:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "5533:6:12"
                                },
                                "nativeSrc": "5533:34:12",
                                "nodeType": "YulFunctionCall",
                                "src": "5533:34:12"
                              },
                              "nativeSrc": "5533:34:12",
                              "nodeType": "YulExpressionStatement",
                              "src": "5533:34:12"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "5587:9:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "5587:9:12"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "5598:2:12",
                                        "nodeType": "YulLiteral",
                                        "src": "5598:2:12",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "5583:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "5583:3:12"
                                    },
                                    "nativeSrc": "5583:18:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "5583:18:12"
                                  },
                                  {
                                    "name": "value2",
                                    "nativeSrc": "5603:6:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "5603:6:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "5576:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "5576:6:12"
                                },
                                "nativeSrc": "5576:34:12",
                                "nodeType": "YulFunctionCall",
                                "src": "5576:34:12"
                              },
                              "nativeSrc": "5576:34:12",
                              "nodeType": "YulExpressionStatement",
                              "src": "5576:34:12"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
                        "nativeSrc": "5271:345:12",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "5381:9:12",
                            "nodeType": "YulTypedName",
                            "src": "5381:9:12",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nativeSrc": "5392:6:12",
                            "nodeType": "YulTypedName",
                            "src": "5392:6:12",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nativeSrc": "5400:6:12",
                            "nodeType": "YulTypedName",
                            "src": "5400:6:12",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "5408:6:12",
                            "nodeType": "YulTypedName",
                            "src": "5408:6:12",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "5419:4:12",
                            "nodeType": "YulTypedName",
                            "src": "5419:4:12",
                            "type": ""
                          }
                        ],
                        "src": "5271:345:12"
                      },
                      {
                        "body": {
                          "nativeSrc": "5722:76:12",
                          "nodeType": "YulBlock",
                          "src": "5722:76:12",
                          "statements": [
                            {
                              "nativeSrc": "5732:26:12",
                              "nodeType": "YulAssignment",
                              "src": "5732:26:12",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "5744:9:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "5744:9:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "5755:2:12",
                                    "nodeType": "YulLiteral",
                                    "src": "5755:2:12",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "5740:3:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "5740:3:12"
                                },
                                "nativeSrc": "5740:18:12",
                                "nodeType": "YulFunctionCall",
                                "src": "5740:18:12"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "5732:4:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "5732:4:12"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "5774:9:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "5774:9:12"
                                  },
                                  {
                                    "name": "value0",
                                    "nativeSrc": "5785:6:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "5785:6:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "5767:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "5767:6:12"
                                },
                                "nativeSrc": "5767:25:12",
                                "nodeType": "YulFunctionCall",
                                "src": "5767:25:12"
                              },
                              "nativeSrc": "5767:25:12",
                              "nodeType": "YulExpressionStatement",
                              "src": "5767:25:12"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                        "nativeSrc": "5621:177:12",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "5691:9:12",
                            "nodeType": "YulTypedName",
                            "src": "5691:9:12",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "5702:6:12",
                            "nodeType": "YulTypedName",
                            "src": "5702:6:12",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "5713:4:12",
                            "nodeType": "YulTypedName",
                            "src": "5713:4:12",
                            "type": ""
                          }
                        ],
                        "src": "5621:177:12"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_exp_helper(_base, exponent, max) -> power, base\n    {\n        power := 1\n        base := _base\n        for { } gt(exponent, 1) { }\n        {\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            let _1 := 0\n            _1 := 0\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            let _2 := 0\n            _2 := 0\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent, not(0))\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_4883a4db8fa89fd27599c351c2e5d12230f9c7f95977ac82d41b94b3b13e60a6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Token transfers paused.\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
                  "id": 12,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "linkReferences": {},
              "object": "60806040526002600c5534801561001557600080fd5b50604051611e0a380380611e0a8339810160408190526100349161039a565b6040518060400160405280600d81526020016c10d85b5c1d5cc810dc99591a5d609a1b8152506040518060400160405280600381526020016221a1a960e91b81525081600390816100859190610451565b5060046100928282610451565b506100a29150600090503361011e565b506100cd7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a3361011e565b506100f87f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a63361011e565b50610118336101096012600a61060c565b6101139084610622565b6101ce565b5061064c565b60008281526006602090815260408083206001600160a01b038516845290915281205460ff166101c45760008381526006602090815260408083206001600160a01b03861684529091529020805460ff1916600117905561017c3390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45060016101c8565b5060005b92915050565b6001600160a01b0382166101fd5760405163ec442f0560e01b8152600060048201526024015b60405180910390fd5b6102096000838361020d565b5050565b60055460ff16156102605760405162461bcd60e51b815260206004820152601760248201527f546f6b656e207472616e7366657273207061757365642e00000000000000000060448201526064016101f4565b61026b838383610270565b505050565b6001600160a01b03831661029b5780600260008282546102909190610639565b9091555061030d9050565b6001600160a01b038316600090815260208190526040902054818110156102ee5760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016101f4565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b03821661032957600280548290039055610348565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161038d91815260200190565b60405180910390a3505050565b6000602082840312156103ac57600080fd5b5051919050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806103dd57607f821691505b6020821081036103fd57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561026b57806000526020600020601f840160051c8101602085101561042a5750805b601f840160051c820191505b8181101561044a5760008155600101610436565b5050505050565b81516001600160401b0381111561046a5761046a6103b3565b61047e8161047884546103c9565b84610403565b6020601f8211600181146104b2576000831561049a5750848201515b600019600385901b1c1916600184901b17845561044a565b600084815260208120601f198516915b828110156104e257878501518255602094850194600190920191016104c2565b50848210156105005786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b6001815b6001841115610560578085048111156105445761054461050f565b600184161561055257908102905b60019390931c928002610529565b935093915050565b600082610577575060016101c8565b81610584575060006101c8565b816001811461059a57600281146105a4576105c0565b60019150506101c8565b60ff8411156105b5576105b561050f565b50506001821b6101c8565b5060208310610133831016604e8410600b84101617156105e3575081810a6101c8565b6105f06000198484610525565b80600019048211156106045761060461050f565b029392505050565b600061061b60ff841683610568565b9392505050565b80820281158282048414176101c8576101c861050f565b808201808211156101c8576101c861050f565b6117af8061065b6000396000f3fe608060405234801561001057600080fd5b50600436106102065760003560e01c806342966c681161011a57806391d14854116100ad578063a9059cbb1161007c578063a9059cbb14610465578063d539139314610478578063d547741f1461049f578063dd62ed3e146104b2578063e63ab1e9146104eb57600080fd5b806391d148541461042f57806395d89b4114610442578063a217fddf1461044a578063a6c8a3841461045257600080fd5b806370a08231116100e957806370a08231146103cb57806379cc6790146103f45780638456cb59146104075780638aeac5011461040f57600080fd5b806342966c68146103875780635c975abb1461039a5780635cc18e2f146103a557806360caa609146103b857600080fd5b8063248a9ca31161019d5780632f2ff15d1161016c5780632f2ff15d14610337578063313ce5671461034a57806336568abe146103595780633f4ba83a1461036c57806340c10f191461037457600080fd5b8063248a9ca3146102c1578063251de801146102e4578063257caf9e146103045780632803212f1461032457600080fd5b80631a2f7167116101d95780631a2f71671461026d5780631c9cef041461029057806322083bd01461029957806323b872dd146102ae57600080fd5b806301ffc9a71461020b57806306fdde0314610233578063095ea7b31461024857806318160ddd1461025b575b600080fd5b61021e610219366004611284565b610512565b60405190151581526020015b60405180910390f35b61023b610549565b60405161022a91906112b5565b61021e61025636600461131f565b6105db565b6002545b60405190815260200161022a565b61021e61027b366004611349565b600a6020526000908152604090205460ff1681565b61025f600c5481565b6102ac6102a736600461131f565b6105f3565b005b61021e6102bc366004611364565b610794565b61025f6102cf3660046113a1565b60009081526006602052604090206001015490565b61025f6102f2366004611349565b60086020526000908152604090205481565b61025f610312366004611349565b60076020526000908152604090205481565b6102ac61033236600461131f565b6107b8565b6102ac6103453660046113ba565b61084e565b6040516012815260200161022a565b6102ac6103673660046113ba565b610873565b6102ac6108ab565b6102ac61038236600461131f565b6108e0565b6102ac6103953660046113a1565b610a18565b60055460ff1661021e565b6102ac6103b336600461131f565b610a22565b61023b6103c6366004611349565b610abd565b61025f6103d9366004611349565b6001600160a01b031660009081526020819052604090205490565b6102ac61040236600461131f565b610b57565b6102ac610b70565b61025f61041d366004611349565b60096020526000908152604090205481565b61021e61043d3660046113ba565b610ba2565b61023b610bcd565b61025f600081565b6102ac6104603660046113fc565b610bdc565b61021e61047336600461131f565b610c87565b61025f7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b6102ac6104ad3660046113ba565b610c95565b61025f6104c03660046114c6565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61025f7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b60006001600160e01b03198216637965db0b60e01b148061054357506301ffc9a760e01b6001600160e01b03198316145b92915050565b606060038054610558906114f0565b80601f0160208091040260200160405190810160405280929190818152602001828054610584906114f0565b80156105d15780601f106105a6576101008083540402835291602001916105d1565b820191906000526020600020905b8154815290600101906020018083116105b457829003601f168201915b5050505050905090565b6000336105e9818585610cba565b5060019392505050565b600081116106485760405162461bcd60e51b815260206004820181905260248201527f416d6f756e742073686f756c642062652067726561746572207468616e20302e60448201526064015b60405180910390fd5b60006106566012600a611627565b6106609083611636565b336000908152600760209081526040808320546009909252909120549192509061068b90839061164d565b11156106d95760405162461bcd60e51b815260206004820152601d60248201527f45786365656473206461696c79207370656e64696e67206c696d69742e000000604482015260640161063f565b336000908152600860205260409020546106f6906201518061164d565b42111561071b5733600090815260086020908152604080832042905560099091528120555b336000908152600960205260408120805483929061073a90849061164d565b909155506000905061074c8483610c87565b90508061078e5760405162461bcd60e51b815260206004820152601060248201526f2a3930b739b332b9103330b4b632b21760811b604482015260640161063f565b50505050565b6000336107a2858285610cc7565b6107ad858585610d40565b506001949350505050565b60006107c381610d9f565b60006107d16012600a611627565b6107db9084611636565b90506000811161082d5760405162461bcd60e51b815260206004820152601f60248201527f4c696d69742073686f756c642062652067726561746572207468616e20302e00604482015260640161063f565b6001600160a01b039093166000908152600760205260409020929092555050565b60008281526006602052604090206001015461086981610d9f565b61078e8383610da9565b6001600160a01b038116331461089c5760405163334bd91960e11b815260040160405180910390fd5b6108a68282610e3d565b505050565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a6108d581610d9f565b6108dd610eaa565b50565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a661090a81610d9f565b60006109186012600a611627565b6109229084611636565b6001600160a01b038516600090815260076020526040902054909150156109e0576001600160a01b03841660009081526007602090815260408083205460099092529091205461097390839061164d565b11156109e05760405162461bcd60e51b815260206004820152603660248201527f45786365656473206461696c79207370656e64696e67206c696d69742c2063616044820152753713ba103932b1b2b4bb329032bc3a39309021a1a91760511b606482015260840161063f565b6001600160a01b03841660009081526007602052604081208054839290610a0890849061164d565b9091555061078e90508482610efc565b6108dd3382610f32565b60008111610a725760405162461bcd60e51b815260206004820181905260248201527f416d6f756e742073686f756c642062652067726561746572207468616e20302e604482015260640161063f565b60006064600c5483610a849190611636565b610a8e9190611660565b9050610a9e836102a78385611682565b6108a633610aae6012600a611627565b610ab89084611636565b610efc565b600b6020526000908152604090208054610ad6906114f0565b80601f0160208091040260200160405190810160405280929190818152602001828054610b02906114f0565b8015610b4f5780601f10610b2457610100808354040283529160200191610b4f565b820191906000526020600020905b815481529060010190602001808311610b3257829003601f168201915b505050505081565b610b62823383610cc7565b610b6c8282610f32565b5050565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a610b9a81610d9f565b6108dd610f68565b60009182526006602090815260408084206001600160a01b0393909316845291905290205460ff1690565b606060048054610558906114f0565b6000610be781610d9f565b6001600160a01b0383166000908152600a602052604090205460ff1615610c505760405162461bcd60e51b815260206004820152601c60248201527f4d65726368616e7420616c726561647920726567697374657265642e00000000604482015260640161063f565b6001600160a01b0383166000908152600a60209081526040808320805460ff19166001179055600b909152902061078e83826116e3565b6000336105e9818585610d40565b600082815260066020526040902060010154610cb081610d9f565b61078e8383610e3d565b6108a68383836001610fa5565b6001600160a01b0383811660009081526001602090815260408083209386168352929052205460001981101561078e5781811015610d3157604051637dc7a0d960e11b81526001600160a01b0384166004820152602481018290526044810183905260640161063f565b61078e84848484036000610fa5565b6001600160a01b038316610d6a57604051634b637e8f60e11b81526000600482015260240161063f565b6001600160a01b038216610d945760405163ec442f0560e01b81526000600482015260240161063f565b6108a683838361107a565b6108dd81336110d8565b6000610db58383610ba2565b610e355760008381526006602090815260408083206001600160a01b03861684529091529020805460ff19166001179055610ded3390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4506001610543565b506000610543565b6000610e498383610ba2565b15610e355760008381526006602090815260408083206001600160a01b0386168085529252808320805460ff1916905551339286917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a4506001610543565b610eb2611111565b6005805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b038216610f265760405163ec442f0560e01b81526000600482015260240161063f565b610b6c6000838361107a565b6001600160a01b038216610f5c57604051634b637e8f60e11b81526000600482015260240161063f565b610b6c8260008361107a565b610f70611136565b6005805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610edf3390565b6001600160a01b038416610fcf5760405163e602df0560e01b81526000600482015260240161063f565b6001600160a01b038316610ff957604051634a1406b160e11b81526000600482015260240161063f565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561078e57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161106c91815260200190565b60405180910390a350505050565b60055460ff16156110cd5760405162461bcd60e51b815260206004820152601760248201527f546f6b656e207472616e7366657273207061757365642e000000000000000000604482015260640161063f565b6108a683838361115a565b6110e28282610ba2565b610b6c5760405163e2517d3f60e01b81526001600160a01b03821660048201526024810183905260440161063f565b60055460ff1661113457604051638dfc202b60e01b815260040160405180910390fd5b565b60055460ff16156111345760405163d93c066560e01b815260040160405180910390fd5b6001600160a01b03831661118557806002600082825461117a919061164d565b909155506111f79050565b6001600160a01b038316600090815260208190526040902054818110156111d85760405163391434e360e21b81526001600160a01b0385166004820152602481018290526044810183905260640161063f565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b03821661121357600280548290039055611232565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161127791815260200190565b60405180910390a3505050565b60006020828403121561129657600080fd5b81356001600160e01b0319811681146112ae57600080fd5b9392505050565b602081526000825180602084015260005b818110156112e357602081860181015160408684010152016112c6565b506000604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b038116811461131a57600080fd5b919050565b6000806040838503121561133257600080fd5b61133b83611303565b946020939093013593505050565b60006020828403121561135b57600080fd5b6112ae82611303565b60008060006060848603121561137957600080fd5b61138284611303565b925061139060208501611303565b929592945050506040919091013590565b6000602082840312156113b357600080fd5b5035919050565b600080604083850312156113cd57600080fd5b823591506113dd60208401611303565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561140f57600080fd5b61141883611303565b9150602083013567ffffffffffffffff81111561143457600080fd5b8301601f8101851361144557600080fd5b803567ffffffffffffffff81111561145f5761145f6113e6565b604051601f8201601f19908116603f0116810167ffffffffffffffff8111828210171561148e5761148e6113e6565b6040528181528282016020018710156114a657600080fd5b816020840160208301376000602083830101528093505050509250929050565b600080604083850312156114d957600080fd5b6114e283611303565b91506113dd60208401611303565b600181811c9082168061150457607f821691505b60208210810361152457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6001815b600184111561157b5780850481111561155f5761155f61152a565b600184161561156d57908102905b60019390931c928002611544565b935093915050565b60008261159257506001610543565b8161159f57506000610543565b81600181146115b557600281146115bf576115db565b6001915050610543565b60ff8411156115d0576115d061152a565b50506001821b610543565b5060208310610133831016604e8410600b84101617156115fe575081810a610543565b61160b6000198484611540565b806000190482111561161f5761161f61152a565b029392505050565b60006112ae60ff841683611583565b80820281158282048414176105435761054361152a565b808201808211156105435761054361152a565b60008261167d57634e487b7160e01b600052601260045260246000fd5b500490565b818103818111156105435761054361152a565b601f8211156108a657806000526020600020601f840160051c810160208510156116bc5750805b601f840160051c820191505b818110156116dc57600081556001016116c8565b5050505050565b815167ffffffffffffffff8111156116fd576116fd6113e6565b6117118161170b84546114f0565b84611695565b6020601f821160018114611745576000831561172d5750848201515b600019600385901b1c1916600184901b1784556116dc565b600084815260208120601f198516915b828110156117755787850151825560209485019460019092019101611755565b50848210156117935786840151600019600387901b60f8161c191681555b50505050600190811b0190555056fea164736f6c634300081c000a",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x2 PUSH1 0xC SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1E0A CODESIZE SUB DUP1 PUSH2 0x1E0A DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x34 SWAP2 PUSH2 0x39A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD PUSH13 0x10D85B5C1D5CC810DC99591A5D PUSH1 0x9A SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x21A1A9 PUSH1 0xE9 SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x85 SWAP2 SWAP1 PUSH2 0x451 JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0x92 DUP3 DUP3 PUSH2 0x451 JUMP JUMPDEST POP PUSH2 0xA2 SWAP2 POP PUSH1 0x0 SWAP1 POP CALLER PUSH2 0x11E JUMP JUMPDEST POP PUSH2 0xCD PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A CALLER PUSH2 0x11E JUMP JUMPDEST POP PUSH2 0xF8 PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 CALLER PUSH2 0x11E JUMP JUMPDEST POP PUSH2 0x118 CALLER PUSH2 0x109 PUSH1 0x12 PUSH1 0xA PUSH2 0x60C JUMP JUMPDEST PUSH2 0x113 SWAP1 DUP5 PUSH2 0x622 JUMP JUMPDEST PUSH2 0x1CE JUMP JUMPDEST POP PUSH2 0x64C JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1C4 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x17C CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x1C8 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1FD JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x209 PUSH1 0x0 DUP4 DUP4 PUSH2 0x20D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x260 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E207472616E7366657273207061757365642E000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH2 0x26B DUP4 DUP4 DUP4 PUSH2 0x270 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x29B JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x290 SWAP2 SWAP1 PUSH2 0x639 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x30D SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x2EE JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x1F4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x329 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x348 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x38D SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x3DD JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x3FD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x26B JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x42A JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x44A JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x436 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x46A JUMPI PUSH2 0x46A PUSH2 0x3B3 JUMP JUMPDEST PUSH2 0x47E DUP2 PUSH2 0x478 DUP5 SLOAD PUSH2 0x3C9 JUMP JUMPDEST DUP5 PUSH2 0x403 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x4B2 JUMPI PUSH1 0x0 DUP4 ISZERO PUSH2 0x49A JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x44A JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x4E2 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x4C2 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x500 JUMPI DUP7 DUP5 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 JUMPDEST PUSH1 0x1 DUP5 GT ISZERO PUSH2 0x560 JUMPI DUP1 DUP6 DIV DUP2 GT ISZERO PUSH2 0x544 JUMPI PUSH2 0x544 PUSH2 0x50F JUMP JUMPDEST PUSH1 0x1 DUP5 AND ISZERO PUSH2 0x552 JUMPI SWAP1 DUP2 MUL SWAP1 JUMPDEST PUSH1 0x1 SWAP4 SWAP1 SWAP4 SHR SWAP3 DUP1 MUL PUSH2 0x529 JUMP JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x577 JUMPI POP PUSH1 0x1 PUSH2 0x1C8 JUMP JUMPDEST DUP2 PUSH2 0x584 JUMPI POP PUSH1 0x0 PUSH2 0x1C8 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x59A JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x5A4 JUMPI PUSH2 0x5C0 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x1C8 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x5B5 JUMPI PUSH2 0x5B5 PUSH2 0x50F JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x1C8 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x5E3 JUMPI POP DUP2 DUP2 EXP PUSH2 0x1C8 JUMP JUMPDEST PUSH2 0x5F0 PUSH1 0x0 NOT DUP5 DUP5 PUSH2 0x525 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x604 JUMPI PUSH2 0x604 PUSH2 0x50F JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x61B PUSH1 0xFF DUP5 AND DUP4 PUSH2 0x568 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x1C8 JUMPI PUSH2 0x1C8 PUSH2 0x50F JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x1C8 JUMPI PUSH2 0x1C8 PUSH2 0x50F JUMP JUMPDEST PUSH2 0x17AF DUP1 PUSH2 0x65B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x206 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x42966C68 GT PUSH2 0x11A JUMPI DUP1 PUSH4 0x91D14854 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x465 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x478 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x49F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x4B2 JUMPI DUP1 PUSH4 0xE63AB1E9 EQ PUSH2 0x4EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x91D14854 EQ PUSH2 0x42F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x442 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x44A JUMPI DUP1 PUSH4 0xA6C8A384 EQ PUSH2 0x452 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3CB JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x3F4 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x407 JUMPI DUP1 PUSH4 0x8AEAC501 EQ PUSH2 0x40F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x42966C68 EQ PUSH2 0x387 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x39A JUMPI DUP1 PUSH4 0x5CC18E2F EQ PUSH2 0x3A5 JUMPI DUP1 PUSH4 0x60CAA609 EQ PUSH2 0x3B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x248A9CA3 GT PUSH2 0x19D JUMPI DUP1 PUSH4 0x2F2FF15D GT PUSH2 0x16C JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x337 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x34A JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x359 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x36C JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x374 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0x251DE801 EQ PUSH2 0x2E4 JUMPI DUP1 PUSH4 0x257CAF9E EQ PUSH2 0x304 JUMPI DUP1 PUSH4 0x2803212F EQ PUSH2 0x324 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1A2F7167 GT PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x1A2F7167 EQ PUSH2 0x26D JUMPI DUP1 PUSH4 0x1C9CEF04 EQ PUSH2 0x290 JUMPI DUP1 PUSH4 0x22083BD0 EQ PUSH2 0x299 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x248 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x25B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x21E PUSH2 0x219 CALLDATASIZE PUSH1 0x4 PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x512 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23B PUSH2 0x549 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22A SWAP2 SWAP1 PUSH2 0x12B5 JUMP JUMPDEST PUSH2 0x21E PUSH2 0x256 CALLDATASIZE PUSH1 0x4 PUSH2 0x131F JUMP JUMPDEST PUSH2 0x5DB JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x22A JUMP JUMPDEST PUSH2 0x21E PUSH2 0x27B CALLDATASIZE PUSH1 0x4 PUSH2 0x1349 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x25F PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2AC PUSH2 0x2A7 CALLDATASIZE PUSH1 0x4 PUSH2 0x131F JUMP JUMPDEST PUSH2 0x5F3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x21E PUSH2 0x2BC CALLDATASIZE PUSH1 0x4 PUSH2 0x1364 JUMP JUMPDEST PUSH2 0x794 JUMP JUMPDEST PUSH2 0x25F PUSH2 0x2CF CALLDATASIZE PUSH1 0x4 PUSH2 0x13A1 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x25F PUSH2 0x2F2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1349 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x25F PUSH2 0x312 CALLDATASIZE PUSH1 0x4 PUSH2 0x1349 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2AC PUSH2 0x332 CALLDATASIZE PUSH1 0x4 PUSH2 0x131F JUMP JUMPDEST PUSH2 0x7B8 JUMP JUMPDEST PUSH2 0x2AC PUSH2 0x345 CALLDATASIZE PUSH1 0x4 PUSH2 0x13BA JUMP JUMPDEST PUSH2 0x84E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x22A JUMP JUMPDEST PUSH2 0x2AC PUSH2 0x367 CALLDATASIZE PUSH1 0x4 PUSH2 0x13BA JUMP JUMPDEST PUSH2 0x873 JUMP JUMPDEST PUSH2 0x2AC PUSH2 0x8AB JUMP JUMPDEST PUSH2 0x2AC PUSH2 0x382 CALLDATASIZE PUSH1 0x4 PUSH2 0x131F JUMP JUMPDEST PUSH2 0x8E0 JUMP JUMPDEST PUSH2 0x2AC PUSH2 0x395 CALLDATASIZE PUSH1 0x4 PUSH2 0x13A1 JUMP JUMPDEST PUSH2 0xA18 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND PUSH2 0x21E JUMP JUMPDEST PUSH2 0x2AC PUSH2 0x3B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x131F JUMP JUMPDEST PUSH2 0xA22 JUMP JUMPDEST PUSH2 0x23B PUSH2 0x3C6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1349 JUMP JUMPDEST PUSH2 0xABD JUMP JUMPDEST PUSH2 0x25F PUSH2 0x3D9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1349 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2AC PUSH2 0x402 CALLDATASIZE PUSH1 0x4 PUSH2 0x131F JUMP JUMPDEST PUSH2 0xB57 JUMP JUMPDEST PUSH2 0x2AC PUSH2 0xB70 JUMP JUMPDEST PUSH2 0x25F PUSH2 0x41D CALLDATASIZE PUSH1 0x4 PUSH2 0x1349 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x21E PUSH2 0x43D CALLDATASIZE PUSH1 0x4 PUSH2 0x13BA JUMP JUMPDEST PUSH2 0xBA2 JUMP JUMPDEST PUSH2 0x23B PUSH2 0xBCD JUMP JUMPDEST PUSH2 0x25F PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x2AC PUSH2 0x460 CALLDATASIZE PUSH1 0x4 PUSH2 0x13FC JUMP JUMPDEST PUSH2 0xBDC JUMP JUMPDEST PUSH2 0x21E PUSH2 0x473 CALLDATASIZE PUSH1 0x4 PUSH2 0x131F JUMP JUMPDEST PUSH2 0xC87 JUMP JUMPDEST PUSH2 0x25F PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0x2AC PUSH2 0x4AD CALLDATASIZE PUSH1 0x4 PUSH2 0x13BA JUMP JUMPDEST PUSH2 0xC95 JUMP JUMPDEST PUSH2 0x25F PUSH2 0x4C0 CALLDATASIZE PUSH1 0x4 PUSH2 0x14C6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x25F PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x543 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x558 SWAP1 PUSH2 0x14F0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x584 SWAP1 PUSH2 0x14F0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5D1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5A6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5D1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5B4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x5E9 DUP2 DUP6 DUP6 PUSH2 0xCBA JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x648 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E742073686F756C642062652067726561746572207468616E20302E PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x656 PUSH1 0x12 PUSH1 0xA PUSH2 0x1627 JUMP JUMPDEST PUSH2 0x660 SWAP1 DUP4 PUSH2 0x1636 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x9 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD SWAP2 SWAP3 POP SWAP1 PUSH2 0x68B SWAP1 DUP4 SWAP1 PUSH2 0x164D JUMP JUMPDEST GT ISZERO PUSH2 0x6D9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45786365656473206461696C79207370656E64696E67206C696D69742E000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x63F JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x6F6 SWAP1 PUSH3 0x15180 PUSH2 0x164D JUMP JUMPDEST TIMESTAMP GT ISZERO PUSH2 0x71B JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 TIMESTAMP SWAP1 SSTORE PUSH1 0x9 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SSTORE JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x73A SWAP1 DUP5 SWAP1 PUSH2 0x164D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x0 SWAP1 POP PUSH2 0x74C DUP5 DUP4 PUSH2 0xC87 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x78E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x2A3930B739B332B9103330B4B632B217 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x63F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x7A2 DUP6 DUP3 DUP6 PUSH2 0xCC7 JUMP JUMPDEST PUSH2 0x7AD DUP6 DUP6 DUP6 PUSH2 0xD40 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7C3 DUP2 PUSH2 0xD9F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7D1 PUSH1 0x12 PUSH1 0xA PUSH2 0x1627 JUMP JUMPDEST PUSH2 0x7DB SWAP1 DUP5 PUSH2 0x1636 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x82D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C696D69742073686F756C642062652067726561746572207468616E20302E00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x63F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x869 DUP2 PUSH2 0xD9F JUMP JUMPDEST PUSH2 0x78E DUP4 DUP4 PUSH2 0xDA9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x89C JUMPI PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8A6 DUP3 DUP3 PUSH2 0xE3D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0x8D5 DUP2 PUSH2 0xD9F JUMP JUMPDEST PUSH2 0x8DD PUSH2 0xEAA JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x90A DUP2 PUSH2 0xD9F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x918 PUSH1 0x12 PUSH1 0xA PUSH2 0x1627 JUMP JUMPDEST PUSH2 0x922 SWAP1 DUP5 PUSH2 0x1636 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x9E0 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x9 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x973 SWAP1 DUP4 SWAP1 PUSH2 0x164D JUMP JUMPDEST GT ISZERO PUSH2 0x9E0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x36 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45786365656473206461696C79207370656E64696E67206C696D69742C206361 PUSH1 0x44 DUP3 ADD MSTORE PUSH22 0x3713BA103932B1B2B4BB329032BC3A39309021A1A917 PUSH1 0x51 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x63F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xA08 SWAP1 DUP5 SWAP1 PUSH2 0x164D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x78E SWAP1 POP DUP5 DUP3 PUSH2 0xEFC JUMP JUMPDEST PUSH2 0x8DD CALLER DUP3 PUSH2 0xF32 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xA72 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E742073686F756C642062652067726561746572207468616E20302E PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x63F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH1 0xC SLOAD DUP4 PUSH2 0xA84 SWAP2 SWAP1 PUSH2 0x1636 JUMP JUMPDEST PUSH2 0xA8E SWAP2 SWAP1 PUSH2 0x1660 JUMP JUMPDEST SWAP1 POP PUSH2 0xA9E DUP4 PUSH2 0x2A7 DUP4 DUP6 PUSH2 0x1682 JUMP JUMPDEST PUSH2 0x8A6 CALLER PUSH2 0xAAE PUSH1 0x12 PUSH1 0xA PUSH2 0x1627 JUMP JUMPDEST PUSH2 0xAB8 SWAP1 DUP5 PUSH2 0x1636 JUMP JUMPDEST PUSH2 0xEFC JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0xAD6 SWAP1 PUSH2 0x14F0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB02 SWAP1 PUSH2 0x14F0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB4F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB24 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB4F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB32 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH2 0xB62 DUP3 CALLER DUP4 PUSH2 0xCC7 JUMP JUMPDEST PUSH2 0xB6C DUP3 DUP3 PUSH2 0xF32 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0xB9A DUP2 PUSH2 0xD9F JUMP JUMPDEST PUSH2 0x8DD PUSH2 0xF68 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x558 SWAP1 PUSH2 0x14F0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBE7 DUP2 PUSH2 0xD9F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xC50 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D65726368616E7420616C726561647920726567697374657265642E00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x63F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0xB SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH2 0x78E DUP4 DUP3 PUSH2 0x16E3 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x5E9 DUP2 DUP6 DUP6 PUSH2 0xD40 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xCB0 DUP2 PUSH2 0xD9F JUMP JUMPDEST PUSH2 0x78E DUP4 DUP4 PUSH2 0xE3D JUMP JUMPDEST PUSH2 0x8A6 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xFA5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 LT ISZERO PUSH2 0x78E JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xD31 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x63F JUMP JUMPDEST PUSH2 0x78E DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0xFA5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xD6A JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x63F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xD94 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x63F JUMP JUMPDEST PUSH2 0x8A6 DUP4 DUP4 DUP4 PUSH2 0x107A JUMP JUMPDEST PUSH2 0x8DD DUP2 CALLER PUSH2 0x10D8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDB5 DUP4 DUP4 PUSH2 0xBA2 JUMP JUMPDEST PUSH2 0xE35 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0xDED CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x543 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x543 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE49 DUP4 DUP4 PUSH2 0xBA2 JUMP JUMPDEST ISZERO PUSH2 0xE35 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP7 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x543 JUMP JUMPDEST PUSH2 0xEB2 PUSH2 0x1111 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xF26 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x63F JUMP JUMPDEST PUSH2 0xB6C PUSH1 0x0 DUP4 DUP4 PUSH2 0x107A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xF5C JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x63F JUMP JUMPDEST PUSH2 0xB6C DUP3 PUSH1 0x0 DUP4 PUSH2 0x107A JUMP JUMPDEST PUSH2 0xF70 PUSH2 0x1136 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xEDF CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xFCF JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x63F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xFF9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x63F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x78E JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x106C SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x10CD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E207472616E7366657273207061757365642E000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x63F JUMP JUMPDEST PUSH2 0x8A6 DUP4 DUP4 DUP4 PUSH2 0x115A JUMP JUMPDEST PUSH2 0x10E2 DUP3 DUP3 PUSH2 0xBA2 JUMP JUMPDEST PUSH2 0xB6C JUMPI PUSH1 0x40 MLOAD PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x63F JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND PUSH2 0x1134 JUMPI PUSH1 0x40 MLOAD PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1134 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1185 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x117A SWAP2 SWAP1 PUSH2 0x164D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x11F7 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x11D8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x63F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1213 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x1232 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1277 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1296 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x12AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x12E3 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD PUSH1 0x40 DUP7 DUP5 ADD ADD MSTORE ADD PUSH2 0x12C6 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x131A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1332 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x133B DUP4 PUSH2 0x1303 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x135B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12AE DUP3 PUSH2 0x1303 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1379 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1382 DUP5 PUSH2 0x1303 JUMP JUMPDEST SWAP3 POP PUSH2 0x1390 PUSH1 0x20 DUP6 ADD PUSH2 0x1303 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x13DD PUSH1 0x20 DUP5 ADD PUSH2 0x1303 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x140F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1418 DUP4 PUSH2 0x1303 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1434 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x1445 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x145F JUMPI PUSH2 0x145F PUSH2 0x13E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x148E JUMPI PUSH2 0x148E PUSH2 0x13E6 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP3 DUP3 ADD PUSH1 0x20 ADD DUP8 LT ISZERO PUSH2 0x14A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP4 DUP4 ADD ADD MSTORE DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14E2 DUP4 PUSH2 0x1303 JUMP JUMPDEST SWAP2 POP PUSH2 0x13DD PUSH1 0x20 DUP5 ADD PUSH2 0x1303 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1504 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1524 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 JUMPDEST PUSH1 0x1 DUP5 GT ISZERO PUSH2 0x157B JUMPI DUP1 DUP6 DIV DUP2 GT ISZERO PUSH2 0x155F JUMPI PUSH2 0x155F PUSH2 0x152A JUMP JUMPDEST PUSH1 0x1 DUP5 AND ISZERO PUSH2 0x156D JUMPI SWAP1 DUP2 MUL SWAP1 JUMPDEST PUSH1 0x1 SWAP4 SWAP1 SWAP4 SHR SWAP3 DUP1 MUL PUSH2 0x1544 JUMP JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1592 JUMPI POP PUSH1 0x1 PUSH2 0x543 JUMP JUMPDEST DUP2 PUSH2 0x159F JUMPI POP PUSH1 0x0 PUSH2 0x543 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x15B5 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x15BF JUMPI PUSH2 0x15DB JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x543 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x15D0 JUMPI PUSH2 0x15D0 PUSH2 0x152A JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x543 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x15FE JUMPI POP DUP2 DUP2 EXP PUSH2 0x543 JUMP JUMPDEST PUSH2 0x160B PUSH1 0x0 NOT DUP5 DUP5 PUSH2 0x1540 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x161F JUMPI PUSH2 0x161F PUSH2 0x152A JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12AE PUSH1 0xFF DUP5 AND DUP4 PUSH2 0x1583 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x543 JUMPI PUSH2 0x543 PUSH2 0x152A JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x543 JUMPI PUSH2 0x543 PUSH2 0x152A JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x167D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x543 JUMPI PUSH2 0x543 PUSH2 0x152A JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x8A6 JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x16BC JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x16DC JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x16C8 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16FD JUMPI PUSH2 0x16FD PUSH2 0x13E6 JUMP JUMPDEST PUSH2 0x1711 DUP2 PUSH2 0x170B DUP5 SLOAD PUSH2 0x14F0 JUMP JUMPDEST DUP5 PUSH2 0x1695 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1745 JUMPI PUSH1 0x0 DUP4 ISZERO PUSH2 0x172D JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x16DC JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1775 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x1755 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x1793 JUMPI DUP7 DUP5 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP EXP ",
              "sourceMap": "380:4360:11:-:0;;;4268:1;4232:37;;942:321;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1582:113:3;;;;;;;;;;;;;-1:-1:-1;;;1582:113:3;;;;;;;;;;;;;;;;-1:-1:-1;;;1582:113:3;;;1656:5;1648;:13;;;;;;:::i;:::-;-1:-1:-1;1671:7:3;:17;1681:7;1671;:17;:::i;:::-;-1:-1:-1;1018:42:11::1;::::0;-1:-1:-1;2232:4:0::1;::::0;-1:-1:-1;1049:10:11::1;1018;:42::i;:::-;-1:-1:-1::0;1070:35:11::1;519:24;1094:10;1070;:35::i;:::-;-1:-1:-1::0;1115:35:11::1;587:24;1139:10;1115;:35::i;:::-;-1:-1:-1::0;1206:50:11::1;1212:10;1241:14;2761:2:3::0;1241::11::1;:14;:::i;:::-;1224:31;::::0;:14;:31:::1;:::i;:::-;1206:5;:50::i;:::-;942:321:::0;380:4360;;6179:316:0;6256:4;2954:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;2954:29:0;;;;;;;;;;;;6272:217;;6315:12;;;;:6;:12;;;;;;;;-1:-1:-1;;;;;6315:29:0;;;;;;;;;:36;;-1:-1:-1;;6315:36:0;6347:4;6315:36;;;6397:12;735:10:7;;656:96;6397:12:0;-1:-1:-1;;;;;6370:40:0;6388:7;-1:-1:-1;;;;;6370:40:0;6382:4;6370:40;;;;;;;;;;-1:-1:-1;6431:4:0;6424:11;;6272:217;-1:-1:-1;6473:5:0;6272:217;6179:316;;;;:::o;7439:208:3:-;-1:-1:-1;;;;;7509:21:3;;7505:91;;7553:32;;-1:-1:-1;;;7553:32:3;;7582:1;7553:32;;;4727:51:12;4700:18;;7553:32:3;;;;;;;;7505:91;7605:35;7621:1;7625:7;7634:5;7605:7;:35::i;:::-;7439:208;;:::o;3942:217:11:-;1796:7:8;;;;4074:9:11;4066:45;;;;-1:-1:-1;;;4066:45:11;;4991:2:12;4066:45:11;;;4973:21:12;5030:2;5010:18;;;5003:30;5069:25;5049:18;;;5042:53;5112:18;;4066:45:11;4789:347:12;4066:45:11;4121:31;4135:4;4141:2;4145:6;4121:13;:31::i;:::-;3942:217;;;:::o;5989:1107:3:-;-1:-1:-1;;;;;6078:18:3;;6074:540;;6230:5;6214:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6074:540:3;;-1:-1:-1;6074:540:3;;-1:-1:-1;;;;;6288:15:3;;6266:19;6288:15;;;;;;;;;;;6321:19;;;6317:115;;;6367:50;;-1:-1:-1;;;6367:50:3;;-1:-1:-1;;;;;5491:32:12;;6367:50:3;;;5473:51:12;5540:18;;;5533:34;;;5583:18;;;5576:34;;;5446:18;;6367:50:3;5271:345:12;6317:115:3;-1:-1:-1;;;;;6552:15:3;;:9;:15;;;;;;;;;;6570:19;;;;6552:37;;6074:540;-1:-1:-1;;;;;6628:16:3;;6624:425;;6791:12;:21;;;;;;;6624:425;;;-1:-1:-1;;;;;7002:13:3;;:9;:13;;;;;;;;;;:22;;;;;;6624:425;7079:2;-1:-1:-1;;;;;7064:25:3;7073:4;-1:-1:-1;;;;;7064:25:3;;7083:5;7064:25;;;;5767::12;;5755:2;5740:18;;5621:177;7064:25:3;;;;;;;;5989:1107;;;:::o;14:184:12:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;-1:-1:-1;176:16:12;;14:184;-1:-1:-1;14:184:12:o;203:127::-;264:10;259:3;255:20;252:1;245:31;295:4;292:1;285:15;319:4;316:1;309:15;335:380;414:1;410:12;;;;457;;;478:61;;532:4;524:6;520:17;510:27;;478:61;585:2;577:6;574:14;554:18;551:38;548:161;;631:10;626:3;622:20;619:1;612:31;666:4;663:1;656:15;694:4;691:1;684:15;548:161;;335:380;;;:::o;846:518::-;948:2;943:3;940:11;937:421;;;984:5;981:1;974:16;1028:4;1025:1;1015:18;1098:2;1086:10;1082:19;1079:1;1075:27;1069:4;1065:38;1134:4;1122:10;1119:20;1116:47;;;-1:-1:-1;1157:4:12;1116:47;1212:2;1207:3;1203:12;1200:1;1196:20;1190:4;1186:31;1176:41;;1267:81;1285:2;1278:5;1275:13;1267:81;;;1344:1;1330:16;;1311:1;1300:13;1267:81;;;1271:3;;846:518;;;:::o;1540:1299::-;1660:10;;-1:-1:-1;;;;;1682:30:12;;1679:56;;;1715:18;;:::i;:::-;1744:97;1834:6;1794:38;1826:4;1820:11;1794:38;:::i;:::-;1788:4;1744:97;:::i;:::-;1890:4;1921:2;1910:14;;1938:1;1933:649;;;;2626:1;2643:6;2640:89;;;-1:-1:-1;2695:19:12;;;2689:26;2640:89;-1:-1:-1;;1497:1:12;1493:11;;;1489:24;1485:29;1475:40;1521:1;1517:11;;;1472:57;2742:81;;1903:930;;1933:649;793:1;786:14;;;830:4;817:18;;-1:-1:-1;;1969:20:12;;;2087:222;2101:7;2098:1;2095:14;2087:222;;;2183:19;;;2177:26;2162:42;;2290:4;2275:20;;;;2243:1;2231:14;;;;2117:12;2087:222;;;2091:3;2337:6;2328:7;2325:19;2322:201;;;2398:19;;;2392:26;-1:-1:-1;;2481:1:12;2477:14;;;2493:3;2473:24;2469:37;2465:42;2450:58;2435:74;;2322:201;-1:-1:-1;;;;2569:1:12;2553:14;;;2549:22;2536:36;;-1:-1:-1;1540:1299:12:o;2844:127::-;2905:10;2900:3;2896:20;2893:1;2886:31;2936:4;2933:1;2926:15;2960:4;2957:1;2950:15;2976:375;3064:1;3082:5;3096:249;3117:1;3107:8;3104:15;3096:249;;;3167:4;3162:3;3158:14;3152:4;3149:24;3146:50;;;3176:18;;:::i;:::-;3226:1;3216:8;3212:16;3209:49;;;3240:16;;;;3209:49;3323:1;3319:16;;;;;3279:15;;3096:249;;;2976:375;;;;;;:::o;3356:902::-;3405:5;3435:8;3425:80;;-1:-1:-1;3476:1:12;3490:5;;3425:80;3524:4;3514:76;;-1:-1:-1;3561:1:12;3575:5;;3514:76;3606:4;3624:1;3619:59;;;;3692:1;3687:174;;;;3599:262;;3619:59;3649:1;3640:10;;3663:5;;;3687:174;3724:3;3714:8;3711:17;3708:43;;;3731:18;;:::i;:::-;-1:-1:-1;;3787:1:12;3773:16;;3846:5;;3599:262;;3945:2;3935:8;3932:16;3926:3;3920:4;3917:13;3913:36;3907:2;3897:8;3894:16;3889:2;3883:4;3880:12;3876:35;3873:77;3870:203;;;-1:-1:-1;3982:19:12;;;4058:5;;3870:203;4105:42;-1:-1:-1;;4130:8:12;4124:4;4105:42;:::i;:::-;4183:6;4179:1;4175:6;4171:19;4162:7;4159:32;4156:58;;;4194:18;;:::i;:::-;4232:20;;3356:902;-1:-1:-1;;;3356:902:12:o;4263:140::-;4321:5;4350:47;4391:4;4381:8;4377:19;4371:4;4350:47;:::i;:::-;4341:56;4263:140;-1:-1:-1;;;4263:140:12:o;4408:168::-;4481:9;;;4512;;4529:15;;;4523:22;;4509:37;4499:71;;4550:18;;:::i;5141:125::-;5206:9;;;5227:10;;;5224:36;;;5240:18;;:::i;5621:177::-;380:4360:11;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "@DEFAULT_ADMIN_ROLE_29": {
                  "entryPoint": null,
                  "id": 29,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@MINTER_ROLE_1379": {
                  "entryPoint": null,
                  "id": 1379,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@PAUSER_ROLE_1374": {
                  "entryPoint": null,
                  "id": 1374,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_approve_921": {
                  "entryPoint": 3258,
                  "id": 921,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "@_approve_981": {
                  "entryPoint": 4005,
                  "id": 981,
                  "parameterSlots": 4,
                  "returnSlots": 0
                },
                "@_burn_903": {
                  "entryPoint": 3890,
                  "id": 903,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@_checkRole_114": {
                  "entryPoint": 4312,
                  "id": 114,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@_checkRole_93": {
                  "entryPoint": 3487,
                  "id": 93,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@_grantRole_256": {
                  "entryPoint": 3497,
                  "id": 256,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "@_mint_870": {
                  "entryPoint": 3836,
                  "id": 870,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@_msgSender_1192": {
                  "entryPoint": null,
                  "id": 1192,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@_pause_1301": {
                  "entryPoint": 3944,
                  "id": 1301,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_requireNotPaused_1272": {
                  "entryPoint": 4406,
                  "id": 1272,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_requirePaused_1285": {
                  "entryPoint": 4369,
                  "id": 1285,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_revokeRole_294": {
                  "entryPoint": 3645,
                  "id": 294,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "@_spendAllowance_1029": {
                  "entryPoint": 3271,
                  "id": 1029,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "@_transfer_760": {
                  "entryPoint": 3392,
                  "id": 760,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "@_unpause_1317": {
                  "entryPoint": 3754,
                  "id": 1317,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_update_1689": {
                  "entryPoint": 4218,
                  "id": 1689,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "@_update_837": {
                  "entryPoint": 4442,
                  "id": 837,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "@allowance_657": {
                  "entryPoint": null,
                  "id": 657,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "@approve_681": {
                  "entryPoint": 1499,
                  "id": 681,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "@balanceOf_616": {
                  "entryPoint": null,
                  "id": 616,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@burnFrom_1153": {
                  "entryPoint": 2903,
                  "id": 1153,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@burn_1132": {
                  "entryPoint": 2584,
                  "id": 1132,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@cashbackPercentage_1693": {
                  "entryPoint": null,
                  "id": 1693,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@dailySpendingLimit_1383": {
                  "entryPoint": null,
                  "id": 1383,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@decimals_594": {
                  "entryPoint": null,
                  "id": 594,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@getRoleAdmin_128": {
                  "entryPoint": null,
                  "id": 128,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@grantRole_147": {
                  "entryPoint": 2126,
                  "id": 147,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@hasRole_80": {
                  "entryPoint": 2978,
                  "id": 80,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "@isMerchant_1395": {
                  "entryPoint": null,
                  "id": 1395,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@lastSpendingReset_1387": {
                  "entryPoint": null,
                  "id": 1387,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@merchantName_1399": {
                  "entryPoint": 2749,
                  "id": 1399,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@mint_1511": {
                  "entryPoint": 2272,
                  "id": 1511,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@name_576": {
                  "entryPoint": 1353,
                  "id": 576,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@pause_1449": {
                  "entryPoint": 2928,
                  "id": 1449,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@paused_1260": {
                  "entryPoint": null,
                  "id": 1260,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@registerMerchant_1543": {
                  "entryPoint": 3036,
                  "id": 1543,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@renounceRole_189": {
                  "entryPoint": 2163,
                  "id": 189,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@revokeRole_166": {
                  "entryPoint": 3221,
                  "id": 166,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@setDailyLimit_1577": {
                  "entryPoint": 1976,
                  "id": 1577,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@spentToday_1391": {
                  "entryPoint": null,
                  "id": 1391,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@supportsInterface_1341": {
                  "entryPoint": null,
                  "id": 1341,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@supportsInterface_62": {
                  "entryPoint": 1298,
                  "id": 62,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@symbol_585": {
                  "entryPoint": 3021,
                  "id": 585,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@totalSupply_603": {
                  "entryPoint": null,
                  "id": 603,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@transferFrom_713": {
                  "entryPoint": 1940,
                  "id": 713,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "@transferWithCashback_1735": {
                  "entryPoint": 2594,
                  "id": 1735,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@transferWithLimit_1662": {
                  "entryPoint": 1523,
                  "id": 1662,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@transfer_640": {
                  "entryPoint": 3207,
                  "id": 640,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "@unpause_1459": {
                  "entryPoint": 2219,
                  "id": 1459,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "abi_decode_address": {
                  "entryPoint": 4867,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_address": {
                  "entryPoint": 4937,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_addresst_address": {
                  "entryPoint": 5318,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_tuple_t_addresst_addresst_uint256": {
                  "entryPoint": 4964,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 3
                },
                "abi_decode_tuple_t_addresst_string_memory_ptr": {
                  "entryPoint": 5116,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_tuple_t_addresst_uint256": {
                  "entryPoint": 4895,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_tuple_t_bytes32": {
                  "entryPoint": 5025,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_bytes32t_address": {
                  "entryPoint": 5050,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_tuple_t_bytes4": {
                  "entryPoint": 4740,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": 4789,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_3dd5d03a42d94c65612aa39a572e29b54b5a7dcbfd89c9430ed0638f6b29d67c__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_4883a4db8fa89fd27599c351c2e5d12230f9c7f95977ac82d41b94b3b13e60a6__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_5a4547c6e8528c5f7522e620f017033bad79c14d9d83736fcdb98681fb668b75__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_af3195a179ad05055599ce517a796284d1531c0cdddc2475f9a4492a8cc2e347__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_c81948f77ae7b56f1759fc612b6b373d090eebe7124f74c528fff8e0a139fe69__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_cceb5fa596334024605abeece7820bf456c2bd75cc9b2f6d93df4e5fbd05fed3__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_d2fb8b5c7966e68075ae8a0ce6eef76a742f48c6a121de0fee75e7991bb124cf__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "array_dataslot_string_storage": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "checked_add_t_uint256": {
                  "entryPoint": 5709,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_div_t_uint256": {
                  "entryPoint": 5728,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_exp_helper": {
                  "entryPoint": 5440,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 2
                },
                "checked_exp_t_uint256_t_uint8": {
                  "entryPoint": 5671,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_exp_unsigned": {
                  "entryPoint": 5507,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_mul_t_uint256": {
                  "entryPoint": 5686,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "checked_sub_t_uint256": {
                  "entryPoint": 5762,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "clean_up_bytearray_end_slots_string_storage": {
                  "entryPoint": 5781,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
                  "entryPoint": 5859,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "extract_byte_array_length": {
                  "entryPoint": 5360,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "extract_used_part_and_set_length_of_short_byte_array": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "panic_error_0x11": {
                  "entryPoint": 5418,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x41": {
                  "entryPoint": 5094,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nativeSrc": "0:12944:12",
                    "nodeType": "YulBlock",
                    "src": "0:12944:12",
                    "statements": [
                      {
                        "nativeSrc": "6:3:12",
                        "nodeType": "YulBlock",
                        "src": "6:3:12",
                        "statements": []
                      },
                      {
                        "body": {
                          "nativeSrc": "83:217:12",
                          "nodeType": "YulBlock",
                          "src": "83:217:12",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "129:16:12",
                                "nodeType": "YulBlock",
                                "src": "129:16:12",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "138:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "138:1:12",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "141:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "141:1:12",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "131:6:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "131:6:12"
                                      },
                                      "nativeSrc": "131:12:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "131:12:12"
                                    },
                                    "nativeSrc": "131:12:12",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "131:12:12"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "104:7:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "104:7:12"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "113:9:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "113:9:12"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "100:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "100:3:12"
                                    },
                                    "nativeSrc": "100:23:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "100:23:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "125:2:12",
                                    "nodeType": "YulLiteral",
                                    "src": "125:2:12",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "96:3:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "96:3:12"
                                },
                                "nativeSrc": "96:32:12",
                                "nodeType": "YulFunctionCall",
                                "src": "96:32:12"
                              },
                              "nativeSrc": "93:52:12",
                              "nodeType": "YulIf",
                              "src": "93:52:12"
                            },
                            {
                              "nativeSrc": "154:36:12",
                              "nodeType": "YulVariableDeclaration",
                              "src": "154:36:12",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "180:9:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "180:9:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nativeSrc": "167:12:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "167:12:12"
                                },
                                "nativeSrc": "167:23:12",
                                "nodeType": "YulFunctionCall",
                                "src": "167:23:12"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nativeSrc": "158:5:12",
                                  "nodeType": "YulTypedName",
                                  "src": "158:5:12",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "254:16:12",
                                "nodeType": "YulBlock",
                                "src": "254:16:12",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "263:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "263:1:12",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "266:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "266:1:12",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "256:6:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "256:6:12"
                                      },
                                      "nativeSrc": "256:12:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "256:12:12"
                                    },
                                    "nativeSrc": "256:12:12",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "256:12:12"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nativeSrc": "212:5:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "212:5:12"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nativeSrc": "223:5:12",
                                            "nodeType": "YulIdentifier",
                                            "src": "223:5:12"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nativeSrc": "234:3:12",
                                                "nodeType": "YulLiteral",
                                                "src": "234:3:12",
                                                "type": "",
                                                "value": "224"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "239:10:12",
                                                "nodeType": "YulLiteral",
                                                "src": "239:10:12",
                                                "type": "",
                                                "value": "0xffffffff"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nativeSrc": "230:3:12",
                                              "nodeType": "YulIdentifier",
                                              "src": "230:3:12"
                                            },
                                            "nativeSrc": "230:20:12",
                                            "nodeType": "YulFunctionCall",
                                            "src": "230:20:12"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nativeSrc": "219:3:12",
                                          "nodeType": "YulIdentifier",
                                          "src": "219:3:12"
                                        },
                                        "nativeSrc": "219:32:12",
                                        "nodeType": "YulFunctionCall",
                                        "src": "219:32:12"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nativeSrc": "209:2:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "209:2:12"
                                    },
                                    "nativeSrc": "209:43:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "209:43:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "202:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "202:6:12"
                                },
                                "nativeSrc": "202:51:12",
                                "nodeType": "YulFunctionCall",
                                "src": "202:51:12"
                              },
                              "nativeSrc": "199:71:12",
                              "nodeType": "YulIf",
                              "src": "199:71:12"
                            },
                            {
                              "nativeSrc": "279:15:12",
                              "nodeType": "YulAssignment",
                              "src": "279:15:12",
                              "value": {
                                "name": "value",
                                "nativeSrc": "289:5:12",
                                "nodeType": "YulIdentifier",
                                "src": "289:5:12"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "279:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "279:6:12"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_bytes4",
                        "nativeSrc": "14:286:12",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "49:9:12",
                            "nodeType": "YulTypedName",
                            "src": "49:9:12",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nativeSrc": "60:7:12",
                            "nodeType": "YulTypedName",
                            "src": "60:7:12",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nativeSrc": "72:6:12",
                            "nodeType": "YulTypedName",
                            "src": "72:6:12",
                            "type": ""
                          }
                        ],
                        "src": "14:286:12"
                      },
                      {
                        "body": {
                          "nativeSrc": "400:92:12",
                          "nodeType": "YulBlock",
                          "src": "400:92:12",
                          "statements": [
                            {
                              "nativeSrc": "410:26:12",
                              "nodeType": "YulAssignment",
                              "src": "410:26:12",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "422:9:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "422:9:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "433:2:12",
                                    "nodeType": "YulLiteral",
                                    "src": "433:2:12",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "418:3:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "418:3:12"
                                },
                                "nativeSrc": "418:18:12",
                                "nodeType": "YulFunctionCall",
                                "src": "418:18:12"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "410:4:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "410:4:12"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "452:9:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "452:9:12"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value0",
                                            "nativeSrc": "477:6:12",
                                            "nodeType": "YulIdentifier",
                                            "src": "477:6:12"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nativeSrc": "470:6:12",
                                          "nodeType": "YulIdentifier",
                                          "src": "470:6:12"
                                        },
                                        "nativeSrc": "470:14:12",
                                        "nodeType": "YulFunctionCall",
                                        "src": "470:14:12"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nativeSrc": "463:6:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "463:6:12"
                                    },
                                    "nativeSrc": "463:22:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "463:22:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "445:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "445:6:12"
                                },
                                "nativeSrc": "445:41:12",
                                "nodeType": "YulFunctionCall",
                                "src": "445:41:12"
                              },
                              "nativeSrc": "445:41:12",
                              "nodeType": "YulExpressionStatement",
                              "src": "445:41:12"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
                        "nativeSrc": "305:187:12",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "369:9:12",
                            "nodeType": "YulTypedName",
                            "src": "369:9:12",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "380:6:12",
                            "nodeType": "YulTypedName",
                            "src": "380:6:12",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "391:4:12",
                            "nodeType": "YulTypedName",
                            "src": "391:4:12",
                            "type": ""
                          }
                        ],
                        "src": "305:187:12"
                      },
                      {
                        "body": {
                          "nativeSrc": "618:406:12",
                          "nodeType": "YulBlock",
                          "src": "618:406:12",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "635:9:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "635:9:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "646:2:12",
                                    "nodeType": "YulLiteral",
                                    "src": "646:2:12",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "628:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "628:6:12"
                                },
                                "nativeSrc": "628:21:12",
                                "nodeType": "YulFunctionCall",
                                "src": "628:21:12"
                              },
                              "nativeSrc": "628:21:12",
                              "nodeType": "YulExpressionStatement",
                              "src": "628:21:12"
                            },
                            {
                              "nativeSrc": "658:27:12",
                              "nodeType": "YulVariableDeclaration",
                              "src": "658:27:12",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nativeSrc": "678:6:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "678:6:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "672:5:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "672:5:12"
                                },
                                "nativeSrc": "672:13:12",
                                "nodeType": "YulFunctionCall",
                                "src": "672:13:12"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nativeSrc": "662:6:12",
                                  "nodeType": "YulTypedName",
                                  "src": "662:6:12",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "705:9:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "705:9:12"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "716:2:12",
                                        "nodeType": "YulLiteral",
                                        "src": "716:2:12",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "701:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "701:3:12"
                                    },
                                    "nativeSrc": "701:18:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "701:18:12"
                                  },
                                  {
                                    "name": "length",
                                    "nativeSrc": "721:6:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "721:6:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "694:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "694:6:12"
                                },
                                "nativeSrc": "694:34:12",
                                "nodeType": "YulFunctionCall",
                                "src": "694:34:12"
                              },
                              "nativeSrc": "694:34:12",
                              "nodeType": "YulExpressionStatement",
                              "src": "694:34:12"
                            },
                            {
                              "nativeSrc": "737:10:12",
                              "nodeType": "YulVariableDeclaration",
                              "src": "737:10:12",
                              "value": {
                                "kind": "number",
                                "nativeSrc": "746:1:12",
                                "nodeType": "YulLiteral",
                                "src": "746:1:12",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "i",
                                  "nativeSrc": "741:1:12",
                                  "nodeType": "YulTypedName",
                                  "src": "741:1:12",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "806:90:12",
                                "nodeType": "YulBlock",
                                "src": "806:90:12",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "headStart",
                                                  "nativeSrc": "835:9:12",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "835:9:12"
                                                },
                                                {
                                                  "name": "i",
                                                  "nativeSrc": "846:1:12",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "846:1:12"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nativeSrc": "831:3:12",
                                                "nodeType": "YulIdentifier",
                                                "src": "831:3:12"
                                              },
                                              "nativeSrc": "831:17:12",
                                              "nodeType": "YulFunctionCall",
                                              "src": "831:17:12"
                                            },
                                            {
                                              "kind": "number",
                                              "nativeSrc": "850:2:12",
                                              "nodeType": "YulLiteral",
                                              "src": "850:2:12",
                                              "type": "",
                                              "value": "64"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nativeSrc": "827:3:12",
                                            "nodeType": "YulIdentifier",
                                            "src": "827:3:12"
                                          },
                                          "nativeSrc": "827:26:12",
                                          "nodeType": "YulFunctionCall",
                                          "src": "827:26:12"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "arguments": [
                                                    {
                                                      "name": "value0",
                                                      "nativeSrc": "869:6:12",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "869:6:12"
                                                    },
                                                    {
                                                      "name": "i",
                                                      "nativeSrc": "877:1:12",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "877:1:12"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "add",
                                                    "nativeSrc": "865:3:12",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "865:3:12"
                                                  },
                                                  "nativeSrc": "865:14:12",
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "865:14:12"
                                                },
                                                {
                                                  "kind": "number",
                                                  "nativeSrc": "881:2:12",
                                                  "nodeType": "YulLiteral",
                                                  "src": "881:2:12",
                                                  "type": "",
                                                  "value": "32"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nativeSrc": "861:3:12",
                                                "nodeType": "YulIdentifier",
                                                "src": "861:3:12"
                                              },
                                              "nativeSrc": "861:23:12",
                                              "nodeType": "YulFunctionCall",
                                              "src": "861:23:12"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nativeSrc": "855:5:12",
                                            "nodeType": "YulIdentifier",
                                            "src": "855:5:12"
                                          },
                                          "nativeSrc": "855:30:12",
                                          "nodeType": "YulFunctionCall",
                                          "src": "855:30:12"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nativeSrc": "820:6:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "820:6:12"
                                      },
                                      "nativeSrc": "820:66:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "820:66:12"
                                    },
                                    "nativeSrc": "820:66:12",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "820:66:12"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nativeSrc": "767:1:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "767:1:12"
                                  },
                                  {
                                    "name": "length",
                                    "nativeSrc": "770:6:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "770:6:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nativeSrc": "764:2:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "764:2:12"
                                },
                                "nativeSrc": "764:13:12",
                                "nodeType": "YulFunctionCall",
                                "src": "764:13:12"
                              },
                              "nativeSrc": "756:140:12",
                              "nodeType": "YulForLoop",
                              "post": {
                                "nativeSrc": "778:19:12",
                                "nodeType": "YulBlock",
                                "src": "778:19:12",
                                "statements": [
                                  {
                                    "nativeSrc": "780:15:12",
                                    "nodeType": "YulAssignment",
                                    "src": "780:15:12",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nativeSrc": "789:1:12",
                                          "nodeType": "YulIdentifier",
                                          "src": "789:1:12"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "792:2:12",
                                          "nodeType": "YulLiteral",
                                          "src": "792:2:12",
                                          "type": "",
                                          "value": "32"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "785:3:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "785:3:12"
                                      },
                                      "nativeSrc": "785:10:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "785:10:12"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nativeSrc": "780:1:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "780:1:12"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nativeSrc": "760:3:12",
                                "nodeType": "YulBlock",
                                "src": "760:3:12",
                                "statements": []
                              },
                              "src": "756:140:12"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nativeSrc": "920:9:12",
                                            "nodeType": "YulIdentifier",
                                            "src": "920:9:12"
                                          },
                                          {
                                            "name": "length",
                                            "nativeSrc": "931:6:12",
                                            "nodeType": "YulIdentifier",
                                            "src": "931:6:12"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nativeSrc": "916:3:12",
                                          "nodeType": "YulIdentifier",
                                          "src": "916:3:12"
                                        },
                                        "nativeSrc": "916:22:12",
                                        "nodeType": "YulFunctionCall",
                                        "src": "916:22:12"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "940:2:12",
                                        "nodeType": "YulLiteral",
                                        "src": "940:2:12",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "912:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "912:3:12"
                                    },
                                    "nativeSrc": "912:31:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "912:31:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "945:1:12",
                                    "nodeType": "YulLiteral",
                                    "src": "945:1:12",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "905:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "905:6:12"
                                },
                                "nativeSrc": "905:42:12",
                                "nodeType": "YulFunctionCall",
                                "src": "905:42:12"
                              },
                              "nativeSrc": "905:42:12",
                              "nodeType": "YulExpressionStatement",
                              "src": "905:42:12"
                            },
                            {
                              "nativeSrc": "956:62:12",
                              "nodeType": "YulAssignment",
                              "src": "956:62:12",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "972:9:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "972:9:12"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "length",
                                                "nativeSrc": "991:6:12",
                                                "nodeType": "YulIdentifier",
                                                "src": "991:6:12"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "999:2:12",
                                                "nodeType": "YulLiteral",
                                                "src": "999:2:12",
                                                "type": "",
                                                "value": "31"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nativeSrc": "987:3:12",
                                              "nodeType": "YulIdentifier",
                                              "src": "987:3:12"
                                            },
                                            "nativeSrc": "987:15:12",
                                            "nodeType": "YulFunctionCall",
                                            "src": "987:15:12"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nativeSrc": "1008:2:12",
                                                "nodeType": "YulLiteral",
                                                "src": "1008:2:12",
                                                "type": "",
                                                "value": "31"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "not",
                                              "nativeSrc": "1004:3:12",
                                              "nodeType": "YulIdentifier",
                                              "src": "1004:3:12"
                                            },
                                            "nativeSrc": "1004:7:12",
                                            "nodeType": "YulFunctionCall",
                                            "src": "1004:7:12"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nativeSrc": "983:3:12",
                                          "nodeType": "YulIdentifier",
                                          "src": "983:3:12"
                                        },
                                        "nativeSrc": "983:29:12",
                                        "nodeType": "YulFunctionCall",
                                        "src": "983:29:12"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "968:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "968:3:12"
                                    },
                                    "nativeSrc": "968:45:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "968:45:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1015:2:12",
                                    "nodeType": "YulLiteral",
                                    "src": "1015:2:12",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "964:3:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "964:3:12"
                                },
                                "nativeSrc": "964:54:12",
                                "nodeType": "YulFunctionCall",
                                "src": "964:54:12"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "956:4:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "956:4:12"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
                        "nativeSrc": "497:527:12",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "587:9:12",
                            "nodeType": "YulTypedName",
                            "src": "587:9:12",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "598:6:12",
                            "nodeType": "YulTypedName",
                            "src": "598:6:12",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "609:4:12",
                            "nodeType": "YulTypedName",
                            "src": "609:4:12",
                            "type": ""
                          }
                        ],
                        "src": "497:527:12"
                      },
                      {
                        "body": {
                          "nativeSrc": "1078:124:12",
                          "nodeType": "YulBlock",
                          "src": "1078:124:12",
                          "statements": [
                            {
                              "nativeSrc": "1088:29:12",
                              "nodeType": "YulAssignment",
                              "src": "1088:29:12",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nativeSrc": "1110:6:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "1110:6:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nativeSrc": "1097:12:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "1097:12:12"
                                },
                                "nativeSrc": "1097:20:12",
                                "nodeType": "YulFunctionCall",
                                "src": "1097:20:12"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nativeSrc": "1088:5:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "1088:5:12"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "1180:16:12",
                                "nodeType": "YulBlock",
                                "src": "1180:16:12",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1189:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "1189:1:12",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1192:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "1192:1:12",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "1182:6:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "1182:6:12"
                                      },
                                      "nativeSrc": "1182:12:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "1182:12:12"
                                    },
                                    "nativeSrc": "1182:12:12",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1182:12:12"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nativeSrc": "1139:5:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "1139:5:12"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nativeSrc": "1150:5:12",
                                            "nodeType": "YulIdentifier",
                                            "src": "1150:5:12"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "1165:3:12",
                                                    "nodeType": "YulLiteral",
                                                    "src": "1165:3:12",
                                                    "type": "",
                                                    "value": "160"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "1170:1:12",
                                                    "nodeType": "YulLiteral",
                                                    "src": "1170:1:12",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nativeSrc": "1161:3:12",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "1161:3:12"
                                                },
                                                "nativeSrc": "1161:11:12",
                                                "nodeType": "YulFunctionCall",
                                                "src": "1161:11:12"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "1174:1:12",
                                                "nodeType": "YulLiteral",
                                                "src": "1174:1:12",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nativeSrc": "1157:3:12",
                                              "nodeType": "YulIdentifier",
                                              "src": "1157:3:12"
                                            },
                                            "nativeSrc": "1157:19:12",
                                            "nodeType": "YulFunctionCall",
                                            "src": "1157:19:12"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nativeSrc": "1146:3:12",
                                          "nodeType": "YulIdentifier",
                                          "src": "1146:3:12"
                                        },
                                        "nativeSrc": "1146:31:12",
                                        "nodeType": "YulFunctionCall",
                                        "src": "1146:31:12"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nativeSrc": "1136:2:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "1136:2:12"
                                    },
                                    "nativeSrc": "1136:42:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1136:42:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "1129:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "1129:6:12"
                                },
                                "nativeSrc": "1129:50:12",
                                "nodeType": "YulFunctionCall",
                                "src": "1129:50:12"
                              },
                              "nativeSrc": "1126:70:12",
                              "nodeType": "YulIf",
                              "src": "1126:70:12"
                            }
                          ]
                        },
                        "name": "abi_decode_address",
                        "nativeSrc": "1029:173:12",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nativeSrc": "1057:6:12",
                            "nodeType": "YulTypedName",
                            "src": "1057:6:12",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nativeSrc": "1068:5:12",
                            "nodeType": "YulTypedName",
                            "src": "1068:5:12",
                            "type": ""
                          }
                        ],
                        "src": "1029:173:12"
                      },
                      {
                        "body": {
                          "nativeSrc": "1294:213:12",
                          "nodeType": "YulBlock",
                          "src": "1294:213:12",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "1340:16:12",
                                "nodeType": "YulBlock",
                                "src": "1340:16:12",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1349:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "1349:1:12",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1352:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "1352:1:12",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "1342:6:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "1342:6:12"
                                      },
                                      "nativeSrc": "1342:12:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "1342:12:12"
                                    },
                                    "nativeSrc": "1342:12:12",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1342:12:12"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "1315:7:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "1315:7:12"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "1324:9:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "1324:9:12"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "1311:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "1311:3:12"
                                    },
                                    "nativeSrc": "1311:23:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1311:23:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1336:2:12",
                                    "nodeType": "YulLiteral",
                                    "src": "1336:2:12",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "1307:3:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "1307:3:12"
                                },
                                "nativeSrc": "1307:32:12",
                                "nodeType": "YulFunctionCall",
                                "src": "1307:32:12"
                              },
                              "nativeSrc": "1304:52:12",
                              "nodeType": "YulIf",
                              "src": "1304:52:12"
                            },
                            {
                              "nativeSrc": "1365:39:12",
                              "nodeType": "YulAssignment",
                              "src": "1365:39:12",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "1394:9:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "1394:9:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nativeSrc": "1375:18:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "1375:18:12"
                                },
                                "nativeSrc": "1375:29:12",
                                "nodeType": "YulFunctionCall",
                                "src": "1375:29:12"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "1365:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "1365:6:12"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "1413:14:12",
                              "nodeType": "YulVariableDeclaration",
                              "src": "1413:14:12",
                              "value": {
                                "kind": "number",
                                "nativeSrc": "1426:1:12",
                                "nodeType": "YulLiteral",
                                "src": "1426:1:12",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nativeSrc": "1417:5:12",
                                  "nodeType": "YulTypedName",
                                  "src": "1417:5:12",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nativeSrc": "1436:41:12",
                              "nodeType": "YulAssignment",
                              "src": "1436:41:12",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "1462:9:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "1462:9:12"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "1473:2:12",
                                        "nodeType": "YulLiteral",
                                        "src": "1473:2:12",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "1458:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "1458:3:12"
                                    },
                                    "nativeSrc": "1458:18:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1458:18:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nativeSrc": "1445:12:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "1445:12:12"
                                },
                                "nativeSrc": "1445:32:12",
                                "nodeType": "YulFunctionCall",
                                "src": "1445:32:12"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nativeSrc": "1436:5:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "1436:5:12"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "1486:15:12",
                              "nodeType": "YulAssignment",
                              "src": "1486:15:12",
                              "value": {
                                "name": "value",
                                "nativeSrc": "1496:5:12",
                                "nodeType": "YulIdentifier",
                                "src": "1496:5:12"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nativeSrc": "1486:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "1486:6:12"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_uint256",
                        "nativeSrc": "1207:300:12",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "1252:9:12",
                            "nodeType": "YulTypedName",
                            "src": "1252:9:12",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nativeSrc": "1263:7:12",
                            "nodeType": "YulTypedName",
                            "src": "1263:7:12",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nativeSrc": "1275:6:12",
                            "nodeType": "YulTypedName",
                            "src": "1275:6:12",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nativeSrc": "1283:6:12",
                            "nodeType": "YulTypedName",
                            "src": "1283:6:12",
                            "type": ""
                          }
                        ],
                        "src": "1207:300:12"
                      },
                      {
                        "body": {
                          "nativeSrc": "1613:76:12",
                          "nodeType": "YulBlock",
                          "src": "1613:76:12",
                          "statements": [
                            {
                              "nativeSrc": "1623:26:12",
                              "nodeType": "YulAssignment",
                              "src": "1623:26:12",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "1635:9:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "1635:9:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1646:2:12",
                                    "nodeType": "YulLiteral",
                                    "src": "1646:2:12",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "1631:3:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "1631:3:12"
                                },
                                "nativeSrc": "1631:18:12",
                                "nodeType": "YulFunctionCall",
                                "src": "1631:18:12"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "1623:4:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "1623:4:12"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "1665:9:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "1665:9:12"
                                  },
                                  {
                                    "name": "value0",
                                    "nativeSrc": "1676:6:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "1676:6:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "1658:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "1658:6:12"
                                },
                                "nativeSrc": "1658:25:12",
                                "nodeType": "YulFunctionCall",
                                "src": "1658:25:12"
                              },
                              "nativeSrc": "1658:25:12",
                              "nodeType": "YulExpressionStatement",
                              "src": "1658:25:12"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                        "nativeSrc": "1512:177:12",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "1582:9:12",
                            "nodeType": "YulTypedName",
                            "src": "1582:9:12",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "1593:6:12",
                            "nodeType": "YulTypedName",
                            "src": "1593:6:12",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "1604:4:12",
                            "nodeType": "YulTypedName",
                            "src": "1604:4:12",
                            "type": ""
                          }
                        ],
                        "src": "1512:177:12"
                      },
                      {
                        "body": {
                          "nativeSrc": "1764:116:12",
                          "nodeType": "YulBlock",
                          "src": "1764:116:12",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "1810:16:12",
                                "nodeType": "YulBlock",
                                "src": "1810:16:12",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1819:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "1819:1:12",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "1822:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "1822:1:12",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "1812:6:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "1812:6:12"
                                      },
                                      "nativeSrc": "1812:12:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "1812:12:12"
                                    },
                                    "nativeSrc": "1812:12:12",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1812:12:12"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "1785:7:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "1785:7:12"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "1794:9:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "1794:9:12"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "1781:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "1781:3:12"
                                    },
                                    "nativeSrc": "1781:23:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1781:23:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1806:2:12",
                                    "nodeType": "YulLiteral",
                                    "src": "1806:2:12",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "1777:3:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "1777:3:12"
                                },
                                "nativeSrc": "1777:32:12",
                                "nodeType": "YulFunctionCall",
                                "src": "1777:32:12"
                              },
                              "nativeSrc": "1774:52:12",
                              "nodeType": "YulIf",
                              "src": "1774:52:12"
                            },
                            {
                              "nativeSrc": "1835:39:12",
                              "nodeType": "YulAssignment",
                              "src": "1835:39:12",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "1864:9:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "1864:9:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nativeSrc": "1845:18:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "1845:18:12"
                                },
                                "nativeSrc": "1845:29:12",
                                "nodeType": "YulFunctionCall",
                                "src": "1845:29:12"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "1835:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "1835:6:12"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address",
                        "nativeSrc": "1694:186:12",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "1730:9:12",
                            "nodeType": "YulTypedName",
                            "src": "1730:9:12",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nativeSrc": "1741:7:12",
                            "nodeType": "YulTypedName",
                            "src": "1741:7:12",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nativeSrc": "1753:6:12",
                            "nodeType": "YulTypedName",
                            "src": "1753:6:12",
                            "type": ""
                          }
                        ],
                        "src": "1694:186:12"
                      },
                      {
                        "body": {
                          "nativeSrc": "1989:270:12",
                          "nodeType": "YulBlock",
                          "src": "1989:270:12",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "2035:16:12",
                                "nodeType": "YulBlock",
                                "src": "2035:16:12",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2044:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "2044:1:12",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2047:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "2047:1:12",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "2037:6:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "2037:6:12"
                                      },
                                      "nativeSrc": "2037:12:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "2037:12:12"
                                    },
                                    "nativeSrc": "2037:12:12",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2037:12:12"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "2010:7:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "2010:7:12"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "2019:9:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "2019:9:12"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "2006:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "2006:3:12"
                                    },
                                    "nativeSrc": "2006:23:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2006:23:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "2031:2:12",
                                    "nodeType": "YulLiteral",
                                    "src": "2031:2:12",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "2002:3:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "2002:3:12"
                                },
                                "nativeSrc": "2002:32:12",
                                "nodeType": "YulFunctionCall",
                                "src": "2002:32:12"
                              },
                              "nativeSrc": "1999:52:12",
                              "nodeType": "YulIf",
                              "src": "1999:52:12"
                            },
                            {
                              "nativeSrc": "2060:39:12",
                              "nodeType": "YulAssignment",
                              "src": "2060:39:12",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "2089:9:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "2089:9:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nativeSrc": "2070:18:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "2070:18:12"
                                },
                                "nativeSrc": "2070:29:12",
                                "nodeType": "YulFunctionCall",
                                "src": "2070:29:12"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "2060:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "2060:6:12"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "2108:48:12",
                              "nodeType": "YulAssignment",
                              "src": "2108:48:12",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "2141:9:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "2141:9:12"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "2152:2:12",
                                        "nodeType": "YulLiteral",
                                        "src": "2152:2:12",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "2137:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "2137:3:12"
                                    },
                                    "nativeSrc": "2137:18:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2137:18:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nativeSrc": "2118:18:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "2118:18:12"
                                },
                                "nativeSrc": "2118:38:12",
                                "nodeType": "YulFunctionCall",
                                "src": "2118:38:12"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nativeSrc": "2108:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "2108:6:12"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "2165:14:12",
                              "nodeType": "YulVariableDeclaration",
                              "src": "2165:14:12",
                              "value": {
                                "kind": "number",
                                "nativeSrc": "2178:1:12",
                                "nodeType": "YulLiteral",
                                "src": "2178:1:12",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nativeSrc": "2169:5:12",
                                  "nodeType": "YulTypedName",
                                  "src": "2169:5:12",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nativeSrc": "2188:41:12",
                              "nodeType": "YulAssignment",
                              "src": "2188:41:12",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "2214:9:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "2214:9:12"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "2225:2:12",
                                        "nodeType": "YulLiteral",
                                        "src": "2225:2:12",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "2210:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "2210:3:12"
                                    },
                                    "nativeSrc": "2210:18:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2210:18:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nativeSrc": "2197:12:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "2197:12:12"
                                },
                                "nativeSrc": "2197:32:12",
                                "nodeType": "YulFunctionCall",
                                "src": "2197:32:12"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nativeSrc": "2188:5:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "2188:5:12"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "2238:15:12",
                              "nodeType": "YulAssignment",
                              "src": "2238:15:12",
                              "value": {
                                "name": "value",
                                "nativeSrc": "2248:5:12",
                                "nodeType": "YulIdentifier",
                                "src": "2248:5:12"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nativeSrc": "2238:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "2238:6:12"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_addresst_uint256",
                        "nativeSrc": "1885:374:12",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "1939:9:12",
                            "nodeType": "YulTypedName",
                            "src": "1939:9:12",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nativeSrc": "1950:7:12",
                            "nodeType": "YulTypedName",
                            "src": "1950:7:12",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nativeSrc": "1962:6:12",
                            "nodeType": "YulTypedName",
                            "src": "1962:6:12",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nativeSrc": "1970:6:12",
                            "nodeType": "YulTypedName",
                            "src": "1970:6:12",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nativeSrc": "1978:6:12",
                            "nodeType": "YulTypedName",
                            "src": "1978:6:12",
                            "type": ""
                          }
                        ],
                        "src": "1885:374:12"
                      },
                      {
                        "body": {
                          "nativeSrc": "2334:156:12",
                          "nodeType": "YulBlock",
                          "src": "2334:156:12",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "2380:16:12",
                                "nodeType": "YulBlock",
                                "src": "2380:16:12",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2389:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "2389:1:12",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2392:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "2392:1:12",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "2382:6:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "2382:6:12"
                                      },
                                      "nativeSrc": "2382:12:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "2382:12:12"
                                    },
                                    "nativeSrc": "2382:12:12",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2382:12:12"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "2355:7:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "2355:7:12"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "2364:9:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "2364:9:12"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "2351:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "2351:3:12"
                                    },
                                    "nativeSrc": "2351:23:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2351:23:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "2376:2:12",
                                    "nodeType": "YulLiteral",
                                    "src": "2376:2:12",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "2347:3:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "2347:3:12"
                                },
                                "nativeSrc": "2347:32:12",
                                "nodeType": "YulFunctionCall",
                                "src": "2347:32:12"
                              },
                              "nativeSrc": "2344:52:12",
                              "nodeType": "YulIf",
                              "src": "2344:52:12"
                            },
                            {
                              "nativeSrc": "2405:14:12",
                              "nodeType": "YulVariableDeclaration",
                              "src": "2405:14:12",
                              "value": {
                                "kind": "number",
                                "nativeSrc": "2418:1:12",
                                "nodeType": "YulLiteral",
                                "src": "2418:1:12",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nativeSrc": "2409:5:12",
                                  "nodeType": "YulTypedName",
                                  "src": "2409:5:12",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nativeSrc": "2428:32:12",
                              "nodeType": "YulAssignment",
                              "src": "2428:32:12",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "2450:9:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "2450:9:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nativeSrc": "2437:12:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "2437:12:12"
                                },
                                "nativeSrc": "2437:23:12",
                                "nodeType": "YulFunctionCall",
                                "src": "2437:23:12"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nativeSrc": "2428:5:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "2428:5:12"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "2469:15:12",
                              "nodeType": "YulAssignment",
                              "src": "2469:15:12",
                              "value": {
                                "name": "value",
                                "nativeSrc": "2479:5:12",
                                "nodeType": "YulIdentifier",
                                "src": "2479:5:12"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "2469:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "2469:6:12"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_bytes32",
                        "nativeSrc": "2264:226:12",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "2300:9:12",
                            "nodeType": "YulTypedName",
                            "src": "2300:9:12",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nativeSrc": "2311:7:12",
                            "nodeType": "YulTypedName",
                            "src": "2311:7:12",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nativeSrc": "2323:6:12",
                            "nodeType": "YulTypedName",
                            "src": "2323:6:12",
                            "type": ""
                          }
                        ],
                        "src": "2264:226:12"
                      },
                      {
                        "body": {
                          "nativeSrc": "2596:76:12",
                          "nodeType": "YulBlock",
                          "src": "2596:76:12",
                          "statements": [
                            {
                              "nativeSrc": "2606:26:12",
                              "nodeType": "YulAssignment",
                              "src": "2606:26:12",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "2618:9:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "2618:9:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "2629:2:12",
                                    "nodeType": "YulLiteral",
                                    "src": "2629:2:12",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "2614:3:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "2614:3:12"
                                },
                                "nativeSrc": "2614:18:12",
                                "nodeType": "YulFunctionCall",
                                "src": "2614:18:12"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "2606:4:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "2606:4:12"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "2648:9:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "2648:9:12"
                                  },
                                  {
                                    "name": "value0",
                                    "nativeSrc": "2659:6:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "2659:6:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "2641:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "2641:6:12"
                                },
                                "nativeSrc": "2641:25:12",
                                "nodeType": "YulFunctionCall",
                                "src": "2641:25:12"
                              },
                              "nativeSrc": "2641:25:12",
                              "nodeType": "YulExpressionStatement",
                              "src": "2641:25:12"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
                        "nativeSrc": "2495:177:12",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "2565:9:12",
                            "nodeType": "YulTypedName",
                            "src": "2565:9:12",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "2576:6:12",
                            "nodeType": "YulTypedName",
                            "src": "2576:6:12",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "2587:4:12",
                            "nodeType": "YulTypedName",
                            "src": "2587:4:12",
                            "type": ""
                          }
                        ],
                        "src": "2495:177:12"
                      },
                      {
                        "body": {
                          "nativeSrc": "2764:213:12",
                          "nodeType": "YulBlock",
                          "src": "2764:213:12",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "2810:16:12",
                                "nodeType": "YulBlock",
                                "src": "2810:16:12",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2819:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "2819:1:12",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "2822:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "2822:1:12",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "2812:6:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "2812:6:12"
                                      },
                                      "nativeSrc": "2812:12:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "2812:12:12"
                                    },
                                    "nativeSrc": "2812:12:12",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2812:12:12"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "2785:7:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "2785:7:12"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "2794:9:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "2794:9:12"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "2781:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "2781:3:12"
                                    },
                                    "nativeSrc": "2781:23:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2781:23:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "2806:2:12",
                                    "nodeType": "YulLiteral",
                                    "src": "2806:2:12",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "2777:3:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "2777:3:12"
                                },
                                "nativeSrc": "2777:32:12",
                                "nodeType": "YulFunctionCall",
                                "src": "2777:32:12"
                              },
                              "nativeSrc": "2774:52:12",
                              "nodeType": "YulIf",
                              "src": "2774:52:12"
                            },
                            {
                              "nativeSrc": "2835:14:12",
                              "nodeType": "YulVariableDeclaration",
                              "src": "2835:14:12",
                              "value": {
                                "kind": "number",
                                "nativeSrc": "2848:1:12",
                                "nodeType": "YulLiteral",
                                "src": "2848:1:12",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nativeSrc": "2839:5:12",
                                  "nodeType": "YulTypedName",
                                  "src": "2839:5:12",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nativeSrc": "2858:32:12",
                              "nodeType": "YulAssignment",
                              "src": "2858:32:12",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "2880:9:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "2880:9:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nativeSrc": "2867:12:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "2867:12:12"
                                },
                                "nativeSrc": "2867:23:12",
                                "nodeType": "YulFunctionCall",
                                "src": "2867:23:12"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nativeSrc": "2858:5:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "2858:5:12"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "2899:15:12",
                              "nodeType": "YulAssignment",
                              "src": "2899:15:12",
                              "value": {
                                "name": "value",
                                "nativeSrc": "2909:5:12",
                                "nodeType": "YulIdentifier",
                                "src": "2909:5:12"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "2899:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "2899:6:12"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "2923:48:12",
                              "nodeType": "YulAssignment",
                              "src": "2923:48:12",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "2956:9:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "2956:9:12"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "2967:2:12",
                                        "nodeType": "YulLiteral",
                                        "src": "2967:2:12",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "2952:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "2952:3:12"
                                    },
                                    "nativeSrc": "2952:18:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "2952:18:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nativeSrc": "2933:18:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "2933:18:12"
                                },
                                "nativeSrc": "2933:38:12",
                                "nodeType": "YulFunctionCall",
                                "src": "2933:38:12"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nativeSrc": "2923:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "2923:6:12"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_bytes32t_address",
                        "nativeSrc": "2677:300:12",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "2722:9:12",
                            "nodeType": "YulTypedName",
                            "src": "2722:9:12",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nativeSrc": "2733:7:12",
                            "nodeType": "YulTypedName",
                            "src": "2733:7:12",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nativeSrc": "2745:6:12",
                            "nodeType": "YulTypedName",
                            "src": "2745:6:12",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nativeSrc": "2753:6:12",
                            "nodeType": "YulTypedName",
                            "src": "2753:6:12",
                            "type": ""
                          }
                        ],
                        "src": "2677:300:12"
                      },
                      {
                        "body": {
                          "nativeSrc": "3079:87:12",
                          "nodeType": "YulBlock",
                          "src": "3079:87:12",
                          "statements": [
                            {
                              "nativeSrc": "3089:26:12",
                              "nodeType": "YulAssignment",
                              "src": "3089:26:12",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "3101:9:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "3101:9:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "3112:2:12",
                                    "nodeType": "YulLiteral",
                                    "src": "3112:2:12",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "3097:3:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "3097:3:12"
                                },
                                "nativeSrc": "3097:18:12",
                                "nodeType": "YulFunctionCall",
                                "src": "3097:18:12"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "3089:4:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "3089:4:12"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "3131:9:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "3131:9:12"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nativeSrc": "3146:6:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "3146:6:12"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "3154:4:12",
                                        "nodeType": "YulLiteral",
                                        "src": "3154:4:12",
                                        "type": "",
                                        "value": "0xff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "3142:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "3142:3:12"
                                    },
                                    "nativeSrc": "3142:17:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "3142:17:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "3124:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "3124:6:12"
                                },
                                "nativeSrc": "3124:36:12",
                                "nodeType": "YulFunctionCall",
                                "src": "3124:36:12"
                              },
                              "nativeSrc": "3124:36:12",
                              "nodeType": "YulExpressionStatement",
                              "src": "3124:36:12"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
                        "nativeSrc": "2982:184:12",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "3048:9:12",
                            "nodeType": "YulTypedName",
                            "src": "3048:9:12",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "3059:6:12",
                            "nodeType": "YulTypedName",
                            "src": "3059:6:12",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "3070:4:12",
                            "nodeType": "YulTypedName",
                            "src": "3070:4:12",
                            "type": ""
                          }
                        ],
                        "src": "2982:184:12"
                      },
                      {
                        "body": {
                          "nativeSrc": "3241:156:12",
                          "nodeType": "YulBlock",
                          "src": "3241:156:12",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "3287:16:12",
                                "nodeType": "YulBlock",
                                "src": "3287:16:12",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "3296:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "3296:1:12",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "3299:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "3299:1:12",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "3289:6:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "3289:6:12"
                                      },
                                      "nativeSrc": "3289:12:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "3289:12:12"
                                    },
                                    "nativeSrc": "3289:12:12",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3289:12:12"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "3262:7:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "3262:7:12"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "3271:9:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "3271:9:12"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "3258:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "3258:3:12"
                                    },
                                    "nativeSrc": "3258:23:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "3258:23:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "3283:2:12",
                                    "nodeType": "YulLiteral",
                                    "src": "3283:2:12",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "3254:3:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "3254:3:12"
                                },
                                "nativeSrc": "3254:32:12",
                                "nodeType": "YulFunctionCall",
                                "src": "3254:32:12"
                              },
                              "nativeSrc": "3251:52:12",
                              "nodeType": "YulIf",
                              "src": "3251:52:12"
                            },
                            {
                              "nativeSrc": "3312:14:12",
                              "nodeType": "YulVariableDeclaration",
                              "src": "3312:14:12",
                              "value": {
                                "kind": "number",
                                "nativeSrc": "3325:1:12",
                                "nodeType": "YulLiteral",
                                "src": "3325:1:12",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nativeSrc": "3316:5:12",
                                  "nodeType": "YulTypedName",
                                  "src": "3316:5:12",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nativeSrc": "3335:32:12",
                              "nodeType": "YulAssignment",
                              "src": "3335:32:12",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "3357:9:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "3357:9:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nativeSrc": "3344:12:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "3344:12:12"
                                },
                                "nativeSrc": "3344:23:12",
                                "nodeType": "YulFunctionCall",
                                "src": "3344:23:12"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nativeSrc": "3335:5:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "3335:5:12"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "3376:15:12",
                              "nodeType": "YulAssignment",
                              "src": "3376:15:12",
                              "value": {
                                "name": "value",
                                "nativeSrc": "3386:5:12",
                                "nodeType": "YulIdentifier",
                                "src": "3386:5:12"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "3376:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "3376:6:12"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256",
                        "nativeSrc": "3171:226:12",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "3207:9:12",
                            "nodeType": "YulTypedName",
                            "src": "3207:9:12",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nativeSrc": "3218:7:12",
                            "nodeType": "YulTypedName",
                            "src": "3218:7:12",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nativeSrc": "3230:6:12",
                            "nodeType": "YulTypedName",
                            "src": "3230:6:12",
                            "type": ""
                          }
                        ],
                        "src": "3171:226:12"
                      },
                      {
                        "body": {
                          "nativeSrc": "3434:95:12",
                          "nodeType": "YulBlock",
                          "src": "3434:95:12",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "3451:1:12",
                                    "nodeType": "YulLiteral",
                                    "src": "3451:1:12",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nativeSrc": "3458:3:12",
                                        "nodeType": "YulLiteral",
                                        "src": "3458:3:12",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "3463:10:12",
                                        "nodeType": "YulLiteral",
                                        "src": "3463:10:12",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nativeSrc": "3454:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "3454:3:12"
                                    },
                                    "nativeSrc": "3454:20:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "3454:20:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "3444:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "3444:6:12"
                                },
                                "nativeSrc": "3444:31:12",
                                "nodeType": "YulFunctionCall",
                                "src": "3444:31:12"
                              },
                              "nativeSrc": "3444:31:12",
                              "nodeType": "YulExpressionStatement",
                              "src": "3444:31:12"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "3491:1:12",
                                    "nodeType": "YulLiteral",
                                    "src": "3491:1:12",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "3494:4:12",
                                    "nodeType": "YulLiteral",
                                    "src": "3494:4:12",
                                    "type": "",
                                    "value": "0x41"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "3484:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "3484:6:12"
                                },
                                "nativeSrc": "3484:15:12",
                                "nodeType": "YulFunctionCall",
                                "src": "3484:15:12"
                              },
                              "nativeSrc": "3484:15:12",
                              "nodeType": "YulExpressionStatement",
                              "src": "3484:15:12"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "3515:1:12",
                                    "nodeType": "YulLiteral",
                                    "src": "3515:1:12",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "3518:4:12",
                                    "nodeType": "YulLiteral",
                                    "src": "3518:4:12",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nativeSrc": "3508:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "3508:6:12"
                                },
                                "nativeSrc": "3508:15:12",
                                "nodeType": "YulFunctionCall",
                                "src": "3508:15:12"
                              },
                              "nativeSrc": "3508:15:12",
                              "nodeType": "YulExpressionStatement",
                              "src": "3508:15:12"
                            }
                          ]
                        },
                        "name": "panic_error_0x41",
                        "nativeSrc": "3402:127:12",
                        "nodeType": "YulFunctionDefinition",
                        "src": "3402:127:12"
                      },
                      {
                        "body": {
                          "nativeSrc": "3631:922:12",
                          "nodeType": "YulBlock",
                          "src": "3631:922:12",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "3677:16:12",
                                "nodeType": "YulBlock",
                                "src": "3677:16:12",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "3686:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "3686:1:12",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "3689:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "3689:1:12",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "3679:6:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "3679:6:12"
                                      },
                                      "nativeSrc": "3679:12:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "3679:12:12"
                                    },
                                    "nativeSrc": "3679:12:12",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3679:12:12"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "3652:7:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "3652:7:12"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "3661:9:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "3661:9:12"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "3648:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "3648:3:12"
                                    },
                                    "nativeSrc": "3648:23:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "3648:23:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "3673:2:12",
                                    "nodeType": "YulLiteral",
                                    "src": "3673:2:12",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "3644:3:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "3644:3:12"
                                },
                                "nativeSrc": "3644:32:12",
                                "nodeType": "YulFunctionCall",
                                "src": "3644:32:12"
                              },
                              "nativeSrc": "3641:52:12",
                              "nodeType": "YulIf",
                              "src": "3641:52:12"
                            },
                            {
                              "nativeSrc": "3702:39:12",
                              "nodeType": "YulAssignment",
                              "src": "3702:39:12",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "3731:9:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "3731:9:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nativeSrc": "3712:18:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "3712:18:12"
                                },
                                "nativeSrc": "3712:29:12",
                                "nodeType": "YulFunctionCall",
                                "src": "3712:29:12"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "3702:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "3702:6:12"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "3750:46:12",
                              "nodeType": "YulVariableDeclaration",
                              "src": "3750:46:12",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "3781:9:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "3781:9:12"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "3792:2:12",
                                        "nodeType": "YulLiteral",
                                        "src": "3792:2:12",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "3777:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "3777:3:12"
                                    },
                                    "nativeSrc": "3777:18:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "3777:18:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nativeSrc": "3764:12:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "3764:12:12"
                                },
                                "nativeSrc": "3764:32:12",
                                "nodeType": "YulFunctionCall",
                                "src": "3764:32:12"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nativeSrc": "3754:6:12",
                                  "nodeType": "YulTypedName",
                                  "src": "3754:6:12",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "3839:16:12",
                                "nodeType": "YulBlock",
                                "src": "3839:16:12",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "3848:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "3848:1:12",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "3851:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "3851:1:12",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "3841:6:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "3841:6:12"
                                      },
                                      "nativeSrc": "3841:12:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "3841:12:12"
                                    },
                                    "nativeSrc": "3841:12:12",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3841:12:12"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nativeSrc": "3811:6:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "3811:6:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "3819:18:12",
                                    "nodeType": "YulLiteral",
                                    "src": "3819:18:12",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "3808:2:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "3808:2:12"
                                },
                                "nativeSrc": "3808:30:12",
                                "nodeType": "YulFunctionCall",
                                "src": "3808:30:12"
                              },
                              "nativeSrc": "3805:50:12",
                              "nodeType": "YulIf",
                              "src": "3805:50:12"
                            },
                            {
                              "nativeSrc": "3864:32:12",
                              "nodeType": "YulVariableDeclaration",
                              "src": "3864:32:12",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "3878:9:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "3878:9:12"
                                  },
                                  {
                                    "name": "offset",
                                    "nativeSrc": "3889:6:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "3889:6:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "3874:3:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "3874:3:12"
                                },
                                "nativeSrc": "3874:22:12",
                                "nodeType": "YulFunctionCall",
                                "src": "3874:22:12"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nativeSrc": "3868:2:12",
                                  "nodeType": "YulTypedName",
                                  "src": "3868:2:12",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "3944:16:12",
                                "nodeType": "YulBlock",
                                "src": "3944:16:12",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "3953:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "3953:1:12",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "3956:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "3956:1:12",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "3946:6:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "3946:6:12"
                                      },
                                      "nativeSrc": "3946:12:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "3946:12:12"
                                    },
                                    "nativeSrc": "3946:12:12",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3946:12:12"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "_1",
                                            "nativeSrc": "3923:2:12",
                                            "nodeType": "YulIdentifier",
                                            "src": "3923:2:12"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "3927:4:12",
                                            "nodeType": "YulLiteral",
                                            "src": "3927:4:12",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nativeSrc": "3919:3:12",
                                          "nodeType": "YulIdentifier",
                                          "src": "3919:3:12"
                                        },
                                        "nativeSrc": "3919:13:12",
                                        "nodeType": "YulFunctionCall",
                                        "src": "3919:13:12"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "3934:7:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "3934:7:12"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nativeSrc": "3915:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "3915:3:12"
                                    },
                                    "nativeSrc": "3915:27:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "3915:27:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "3908:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "3908:6:12"
                                },
                                "nativeSrc": "3908:35:12",
                                "nodeType": "YulFunctionCall",
                                "src": "3908:35:12"
                              },
                              "nativeSrc": "3905:55:12",
                              "nodeType": "YulIf",
                              "src": "3905:55:12"
                            },
                            {
                              "nativeSrc": "3969:30:12",
                              "nodeType": "YulVariableDeclaration",
                              "src": "3969:30:12",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "_1",
                                    "nativeSrc": "3996:2:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "3996:2:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nativeSrc": "3983:12:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "3983:12:12"
                                },
                                "nativeSrc": "3983:16:12",
                                "nodeType": "YulFunctionCall",
                                "src": "3983:16:12"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nativeSrc": "3973:6:12",
                                  "nodeType": "YulTypedName",
                                  "src": "3973:6:12",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "4042:22:12",
                                "nodeType": "YulBlock",
                                "src": "4042:22:12",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nativeSrc": "4044:16:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "4044:16:12"
                                      },
                                      "nativeSrc": "4044:18:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "4044:18:12"
                                    },
                                    "nativeSrc": "4044:18:12",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4044:18:12"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nativeSrc": "4014:6:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "4014:6:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "4022:18:12",
                                    "nodeType": "YulLiteral",
                                    "src": "4022:18:12",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "4011:2:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "4011:2:12"
                                },
                                "nativeSrc": "4011:30:12",
                                "nodeType": "YulFunctionCall",
                                "src": "4011:30:12"
                              },
                              "nativeSrc": "4008:56:12",
                              "nodeType": "YulIf",
                              "src": "4008:56:12"
                            },
                            {
                              "nativeSrc": "4073:23:12",
                              "nodeType": "YulVariableDeclaration",
                              "src": "4073:23:12",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "4093:2:12",
                                    "nodeType": "YulLiteral",
                                    "src": "4093:2:12",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "4087:5:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "4087:5:12"
                                },
                                "nativeSrc": "4087:9:12",
                                "nodeType": "YulFunctionCall",
                                "src": "4087:9:12"
                              },
                              "variables": [
                                {
                                  "name": "memPtr",
                                  "nativeSrc": "4077:6:12",
                                  "nodeType": "YulTypedName",
                                  "src": "4077:6:12",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nativeSrc": "4105:85:12",
                              "nodeType": "YulVariableDeclaration",
                              "src": "4105:85:12",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nativeSrc": "4127:6:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "4127:6:12"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "name": "length",
                                                    "nativeSrc": "4151:6:12",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "4151:6:12"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "4159:4:12",
                                                    "nodeType": "YulLiteral",
                                                    "src": "4159:4:12",
                                                    "type": "",
                                                    "value": "0x1f"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nativeSrc": "4147:3:12",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "4147:3:12"
                                                },
                                                "nativeSrc": "4147:17:12",
                                                "nodeType": "YulFunctionCall",
                                                "src": "4147:17:12"
                                              },
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "4170:2:12",
                                                    "nodeType": "YulLiteral",
                                                    "src": "4170:2:12",
                                                    "type": "",
                                                    "value": "31"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "not",
                                                  "nativeSrc": "4166:3:12",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "4166:3:12"
                                                },
                                                "nativeSrc": "4166:7:12",
                                                "nodeType": "YulFunctionCall",
                                                "src": "4166:7:12"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "and",
                                              "nativeSrc": "4143:3:12",
                                              "nodeType": "YulIdentifier",
                                              "src": "4143:3:12"
                                            },
                                            "nativeSrc": "4143:31:12",
                                            "nodeType": "YulFunctionCall",
                                            "src": "4143:31:12"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "4176:2:12",
                                            "nodeType": "YulLiteral",
                                            "src": "4176:2:12",
                                            "type": "",
                                            "value": "63"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nativeSrc": "4139:3:12",
                                          "nodeType": "YulIdentifier",
                                          "src": "4139:3:12"
                                        },
                                        "nativeSrc": "4139:40:12",
                                        "nodeType": "YulFunctionCall",
                                        "src": "4139:40:12"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nativeSrc": "4185:2:12",
                                            "nodeType": "YulLiteral",
                                            "src": "4185:2:12",
                                            "type": "",
                                            "value": "31"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "not",
                                          "nativeSrc": "4181:3:12",
                                          "nodeType": "YulIdentifier",
                                          "src": "4181:3:12"
                                        },
                                        "nativeSrc": "4181:7:12",
                                        "nodeType": "YulFunctionCall",
                                        "src": "4181:7:12"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "4135:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "4135:3:12"
                                    },
                                    "nativeSrc": "4135:54:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4135:54:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "4123:3:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "4123:3:12"
                                },
                                "nativeSrc": "4123:67:12",
                                "nodeType": "YulFunctionCall",
                                "src": "4123:67:12"
                              },
                              "variables": [
                                {
                                  "name": "newFreePtr",
                                  "nativeSrc": "4109:10:12",
                                  "nodeType": "YulTypedName",
                                  "src": "4109:10:12",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "4265:22:12",
                                "nodeType": "YulBlock",
                                "src": "4265:22:12",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nativeSrc": "4267:16:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "4267:16:12"
                                      },
                                      "nativeSrc": "4267:18:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "4267:18:12"
                                    },
                                    "nativeSrc": "4267:18:12",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4267:18:12"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nativeSrc": "4208:10:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "4208:10:12"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "4220:18:12",
                                        "nodeType": "YulLiteral",
                                        "src": "4220:18:12",
                                        "type": "",
                                        "value": "0xffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nativeSrc": "4205:2:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "4205:2:12"
                                    },
                                    "nativeSrc": "4205:34:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4205:34:12"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nativeSrc": "4244:10:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "4244:10:12"
                                      },
                                      {
                                        "name": "memPtr",
                                        "nativeSrc": "4256:6:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "4256:6:12"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nativeSrc": "4241:2:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "4241:2:12"
                                    },
                                    "nativeSrc": "4241:22:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4241:22:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "or",
                                  "nativeSrc": "4202:2:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "4202:2:12"
                                },
                                "nativeSrc": "4202:62:12",
                                "nodeType": "YulFunctionCall",
                                "src": "4202:62:12"
                              },
                              "nativeSrc": "4199:88:12",
                              "nodeType": "YulIf",
                              "src": "4199:88:12"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "4303:2:12",
                                    "nodeType": "YulLiteral",
                                    "src": "4303:2:12",
                                    "type": "",
                                    "value": "64"
                                  },
                                  {
                                    "name": "newFreePtr",
                                    "nativeSrc": "4307:10:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "4307:10:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "4296:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "4296:6:12"
                                },
                                "nativeSrc": "4296:22:12",
                                "nodeType": "YulFunctionCall",
                                "src": "4296:22:12"
                              },
                              "nativeSrc": "4296:22:12",
                              "nodeType": "YulExpressionStatement",
                              "src": "4296:22:12"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nativeSrc": "4334:6:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "4334:6:12"
                                  },
                                  {
                                    "name": "length",
                                    "nativeSrc": "4342:6:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "4342:6:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "4327:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "4327:6:12"
                                },
                                "nativeSrc": "4327:22:12",
                                "nodeType": "YulFunctionCall",
                                "src": "4327:22:12"
                              },
                              "nativeSrc": "4327:22:12",
                              "nodeType": "YulExpressionStatement",
                              "src": "4327:22:12"
                            },
                            {
                              "body": {
                                "nativeSrc": "4399:16:12",
                                "nodeType": "YulBlock",
                                "src": "4399:16:12",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "4408:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "4408:1:12",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "4411:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "4411:1:12",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "4401:6:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "4401:6:12"
                                      },
                                      "nativeSrc": "4401:12:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "4401:12:12"
                                    },
                                    "nativeSrc": "4401:12:12",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4401:12:12"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "_1",
                                            "nativeSrc": "4372:2:12",
                                            "nodeType": "YulIdentifier",
                                            "src": "4372:2:12"
                                          },
                                          {
                                            "name": "length",
                                            "nativeSrc": "4376:6:12",
                                            "nodeType": "YulIdentifier",
                                            "src": "4376:6:12"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nativeSrc": "4368:3:12",
                                          "nodeType": "YulIdentifier",
                                          "src": "4368:3:12"
                                        },
                                        "nativeSrc": "4368:15:12",
                                        "nodeType": "YulFunctionCall",
                                        "src": "4368:15:12"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "4385:2:12",
                                        "nodeType": "YulLiteral",
                                        "src": "4385:2:12",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "4364:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "4364:3:12"
                                    },
                                    "nativeSrc": "4364:24:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4364:24:12"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nativeSrc": "4390:7:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "4390:7:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "4361:2:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "4361:2:12"
                                },
                                "nativeSrc": "4361:37:12",
                                "nodeType": "YulFunctionCall",
                                "src": "4361:37:12"
                              },
                              "nativeSrc": "4358:57:12",
                              "nodeType": "YulIf",
                              "src": "4358:57:12"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nativeSrc": "4441:6:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "4441:6:12"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "4449:2:12",
                                        "nodeType": "YulLiteral",
                                        "src": "4449:2:12",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "4437:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "4437:3:12"
                                    },
                                    "nativeSrc": "4437:15:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4437:15:12"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "_1",
                                        "nativeSrc": "4458:2:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "4458:2:12"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "4462:2:12",
                                        "nodeType": "YulLiteral",
                                        "src": "4462:2:12",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "4454:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "4454:3:12"
                                    },
                                    "nativeSrc": "4454:11:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4454:11:12"
                                  },
                                  {
                                    "name": "length",
                                    "nativeSrc": "4467:6:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "4467:6:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldatacopy",
                                  "nativeSrc": "4424:12:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "4424:12:12"
                                },
                                "nativeSrc": "4424:50:12",
                                "nodeType": "YulFunctionCall",
                                "src": "4424:50:12"
                              },
                              "nativeSrc": "4424:50:12",
                              "nodeType": "YulExpressionStatement",
                              "src": "4424:50:12"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "memPtr",
                                            "nativeSrc": "4498:6:12",
                                            "nodeType": "YulIdentifier",
                                            "src": "4498:6:12"
                                          },
                                          {
                                            "name": "length",
                                            "nativeSrc": "4506:6:12",
                                            "nodeType": "YulIdentifier",
                                            "src": "4506:6:12"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nativeSrc": "4494:3:12",
                                          "nodeType": "YulIdentifier",
                                          "src": "4494:3:12"
                                        },
                                        "nativeSrc": "4494:19:12",
                                        "nodeType": "YulFunctionCall",
                                        "src": "4494:19:12"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "4515:2:12",
                                        "nodeType": "YulLiteral",
                                        "src": "4515:2:12",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "4490:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "4490:3:12"
                                    },
                                    "nativeSrc": "4490:28:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4490:28:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "4520:1:12",
                                    "nodeType": "YulLiteral",
                                    "src": "4520:1:12",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "4483:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "4483:6:12"
                                },
                                "nativeSrc": "4483:39:12",
                                "nodeType": "YulFunctionCall",
                                "src": "4483:39:12"
                              },
                              "nativeSrc": "4483:39:12",
                              "nodeType": "YulExpressionStatement",
                              "src": "4483:39:12"
                            },
                            {
                              "nativeSrc": "4531:16:12",
                              "nodeType": "YulAssignment",
                              "src": "4531:16:12",
                              "value": {
                                "name": "memPtr",
                                "nativeSrc": "4541:6:12",
                                "nodeType": "YulIdentifier",
                                "src": "4541:6:12"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nativeSrc": "4531:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "4531:6:12"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_string_memory_ptr",
                        "nativeSrc": "3534:1019:12",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "3589:9:12",
                            "nodeType": "YulTypedName",
                            "src": "3589:9:12",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nativeSrc": "3600:7:12",
                            "nodeType": "YulTypedName",
                            "src": "3600:7:12",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nativeSrc": "3612:6:12",
                            "nodeType": "YulTypedName",
                            "src": "3612:6:12",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nativeSrc": "3620:6:12",
                            "nodeType": "YulTypedName",
                            "src": "3620:6:12",
                            "type": ""
                          }
                        ],
                        "src": "3534:1019:12"
                      },
                      {
                        "body": {
                          "nativeSrc": "4645:173:12",
                          "nodeType": "YulBlock",
                          "src": "4645:173:12",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "4691:16:12",
                                "nodeType": "YulBlock",
                                "src": "4691:16:12",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "4700:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "4700:1:12",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "4703:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "4703:1:12",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "4693:6:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "4693:6:12"
                                      },
                                      "nativeSrc": "4693:12:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "4693:12:12"
                                    },
                                    "nativeSrc": "4693:12:12",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4693:12:12"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nativeSrc": "4666:7:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "4666:7:12"
                                      },
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "4675:9:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "4675:9:12"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nativeSrc": "4662:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "4662:3:12"
                                    },
                                    "nativeSrc": "4662:23:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4662:23:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "4687:2:12",
                                    "nodeType": "YulLiteral",
                                    "src": "4687:2:12",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nativeSrc": "4658:3:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "4658:3:12"
                                },
                                "nativeSrc": "4658:32:12",
                                "nodeType": "YulFunctionCall",
                                "src": "4658:32:12"
                              },
                              "nativeSrc": "4655:52:12",
                              "nodeType": "YulIf",
                              "src": "4655:52:12"
                            },
                            {
                              "nativeSrc": "4716:39:12",
                              "nodeType": "YulAssignment",
                              "src": "4716:39:12",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "4745:9:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "4745:9:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nativeSrc": "4726:18:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "4726:18:12"
                                },
                                "nativeSrc": "4726:29:12",
                                "nodeType": "YulFunctionCall",
                                "src": "4726:29:12"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nativeSrc": "4716:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "4716:6:12"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "4764:48:12",
                              "nodeType": "YulAssignment",
                              "src": "4764:48:12",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "4797:9:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "4797:9:12"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "4808:2:12",
                                        "nodeType": "YulLiteral",
                                        "src": "4808:2:12",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "4793:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "4793:3:12"
                                    },
                                    "nativeSrc": "4793:18:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "4793:18:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nativeSrc": "4774:18:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "4774:18:12"
                                },
                                "nativeSrc": "4774:38:12",
                                "nodeType": "YulFunctionCall",
                                "src": "4774:38:12"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nativeSrc": "4764:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "4764:6:12"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_address",
                        "nativeSrc": "4558:260:12",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "4603:9:12",
                            "nodeType": "YulTypedName",
                            "src": "4603:9:12",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nativeSrc": "4614:7:12",
                            "nodeType": "YulTypedName",
                            "src": "4614:7:12",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nativeSrc": "4626:6:12",
                            "nodeType": "YulTypedName",
                            "src": "4626:6:12",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nativeSrc": "4634:6:12",
                            "nodeType": "YulTypedName",
                            "src": "4634:6:12",
                            "type": ""
                          }
                        ],
                        "src": "4558:260:12"
                      },
                      {
                        "body": {
                          "nativeSrc": "4878:325:12",
                          "nodeType": "YulBlock",
                          "src": "4878:325:12",
                          "statements": [
                            {
                              "nativeSrc": "4888:22:12",
                              "nodeType": "YulAssignment",
                              "src": "4888:22:12",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "4902:1:12",
                                    "nodeType": "YulLiteral",
                                    "src": "4902:1:12",
                                    "type": "",
                                    "value": "1"
                                  },
                                  {
                                    "name": "data",
                                    "nativeSrc": "4905:4:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "4905:4:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "shr",
                                  "nativeSrc": "4898:3:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "4898:3:12"
                                },
                                "nativeSrc": "4898:12:12",
                                "nodeType": "YulFunctionCall",
                                "src": "4898:12:12"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nativeSrc": "4888:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "4888:6:12"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "4919:38:12",
                              "nodeType": "YulVariableDeclaration",
                              "src": "4919:38:12",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "data",
                                    "nativeSrc": "4949:4:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "4949:4:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "4955:1:12",
                                    "nodeType": "YulLiteral",
                                    "src": "4955:1:12",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nativeSrc": "4945:3:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "4945:3:12"
                                },
                                "nativeSrc": "4945:12:12",
                                "nodeType": "YulFunctionCall",
                                "src": "4945:12:12"
                              },
                              "variables": [
                                {
                                  "name": "outOfPlaceEncoding",
                                  "nativeSrc": "4923:18:12",
                                  "nodeType": "YulTypedName",
                                  "src": "4923:18:12",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "4996:31:12",
                                "nodeType": "YulBlock",
                                "src": "4996:31:12",
                                "statements": [
                                  {
                                    "nativeSrc": "4998:27:12",
                                    "nodeType": "YulAssignment",
                                    "src": "4998:27:12",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "length",
                                          "nativeSrc": "5012:6:12",
                                          "nodeType": "YulIdentifier",
                                          "src": "5012:6:12"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "5020:4:12",
                                          "nodeType": "YulLiteral",
                                          "src": "5020:4:12",
                                          "type": "",
                                          "value": "0x7f"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "and",
                                        "nativeSrc": "5008:3:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "5008:3:12"
                                      },
                                      "nativeSrc": "5008:17:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "5008:17:12"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "length",
                                        "nativeSrc": "4998:6:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "4998:6:12"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "outOfPlaceEncoding",
                                    "nativeSrc": "4976:18:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "4976:18:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "4969:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "4969:6:12"
                                },
                                "nativeSrc": "4969:26:12",
                                "nodeType": "YulFunctionCall",
                                "src": "4969:26:12"
                              },
                              "nativeSrc": "4966:61:12",
                              "nodeType": "YulIf",
                              "src": "4966:61:12"
                            },
                            {
                              "body": {
                                "nativeSrc": "5086:111:12",
                                "nodeType": "YulBlock",
                                "src": "5086:111:12",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "5107:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "5107:1:12",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nativeSrc": "5114:3:12",
                                              "nodeType": "YulLiteral",
                                              "src": "5114:3:12",
                                              "type": "",
                                              "value": "224"
                                            },
                                            {
                                              "kind": "number",
                                              "nativeSrc": "5119:10:12",
                                              "nodeType": "YulLiteral",
                                              "src": "5119:10:12",
                                              "type": "",
                                              "value": "0x4e487b71"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shl",
                                            "nativeSrc": "5110:3:12",
                                            "nodeType": "YulIdentifier",
                                            "src": "5110:3:12"
                                          },
                                          "nativeSrc": "5110:20:12",
                                          "nodeType": "YulFunctionCall",
                                          "src": "5110:20:12"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nativeSrc": "5100:6:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "5100:6:12"
                                      },
                                      "nativeSrc": "5100:31:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "5100:31:12"
                                    },
                                    "nativeSrc": "5100:31:12",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5100:31:12"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "5151:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "5151:1:12",
                                          "type": "",
                                          "value": "4"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "5154:4:12",
                                          "nodeType": "YulLiteral",
                                          "src": "5154:4:12",
                                          "type": "",
                                          "value": "0x22"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nativeSrc": "5144:6:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "5144:6:12"
                                      },
                                      "nativeSrc": "5144:15:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "5144:15:12"
                                    },
                                    "nativeSrc": "5144:15:12",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5144:15:12"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "5179:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "5179:1:12",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "5182:4:12",
                                          "nodeType": "YulLiteral",
                                          "src": "5182:4:12",
                                          "type": "",
                                          "value": "0x24"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "5172:6:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "5172:6:12"
                                      },
                                      "nativeSrc": "5172:15:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "5172:15:12"
                                    },
                                    "nativeSrc": "5172:15:12",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5172:15:12"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "outOfPlaceEncoding",
                                    "nativeSrc": "5042:18:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "5042:18:12"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nativeSrc": "5065:6:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "5065:6:12"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "5073:2:12",
                                        "nodeType": "YulLiteral",
                                        "src": "5073:2:12",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nativeSrc": "5062:2:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "5062:2:12"
                                    },
                                    "nativeSrc": "5062:14:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "5062:14:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nativeSrc": "5039:2:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "5039:2:12"
                                },
                                "nativeSrc": "5039:38:12",
                                "nodeType": "YulFunctionCall",
                                "src": "5039:38:12"
                              },
                              "nativeSrc": "5036:161:12",
                              "nodeType": "YulIf",
                              "src": "5036:161:12"
                            }
                          ]
                        },
                        "name": "extract_byte_array_length",
                        "nativeSrc": "4823:380:12",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "data",
                            "nativeSrc": "4858:4:12",
                            "nodeType": "YulTypedName",
                            "src": "4858:4:12",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "length",
                            "nativeSrc": "4867:6:12",
                            "nodeType": "YulTypedName",
                            "src": "4867:6:12",
                            "type": ""
                          }
                        ],
                        "src": "4823:380:12"
                      },
                      {
                        "body": {
                          "nativeSrc": "5382:182:12",
                          "nodeType": "YulBlock",
                          "src": "5382:182:12",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "5399:9:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "5399:9:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "5410:2:12",
                                    "nodeType": "YulLiteral",
                                    "src": "5410:2:12",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "5392:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "5392:6:12"
                                },
                                "nativeSrc": "5392:21:12",
                                "nodeType": "YulFunctionCall",
                                "src": "5392:21:12"
                              },
                              "nativeSrc": "5392:21:12",
                              "nodeType": "YulExpressionStatement",
                              "src": "5392:21:12"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "5433:9:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "5433:9:12"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "5444:2:12",
                                        "nodeType": "YulLiteral",
                                        "src": "5444:2:12",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "5429:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "5429:3:12"
                                    },
                                    "nativeSrc": "5429:18:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "5429:18:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "5449:2:12",
                                    "nodeType": "YulLiteral",
                                    "src": "5449:2:12",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "5422:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "5422:6:12"
                                },
                                "nativeSrc": "5422:30:12",
                                "nodeType": "YulFunctionCall",
                                "src": "5422:30:12"
                              },
                              "nativeSrc": "5422:30:12",
                              "nodeType": "YulExpressionStatement",
                              "src": "5422:30:12"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "5472:9:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "5472:9:12"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "5483:2:12",
                                        "nodeType": "YulLiteral",
                                        "src": "5483:2:12",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "5468:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "5468:3:12"
                                    },
                                    "nativeSrc": "5468:18:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "5468:18:12"
                                  },
                                  {
                                    "hexValue": "416d6f756e742073686f756c642062652067726561746572207468616e20302e",
                                    "kind": "string",
                                    "nativeSrc": "5488:34:12",
                                    "nodeType": "YulLiteral",
                                    "src": "5488:34:12",
                                    "type": "",
                                    "value": "Amount should be greater than 0."
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "5461:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "5461:6:12"
                                },
                                "nativeSrc": "5461:62:12",
                                "nodeType": "YulFunctionCall",
                                "src": "5461:62:12"
                              },
                              "nativeSrc": "5461:62:12",
                              "nodeType": "YulExpressionStatement",
                              "src": "5461:62:12"
                            },
                            {
                              "nativeSrc": "5532:26:12",
                              "nodeType": "YulAssignment",
                              "src": "5532:26:12",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "5544:9:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "5544:9:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "5555:2:12",
                                    "nodeType": "YulLiteral",
                                    "src": "5555:2:12",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "5540:3:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "5540:3:12"
                                },
                                "nativeSrc": "5540:18:12",
                                "nodeType": "YulFunctionCall",
                                "src": "5540:18:12"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "5532:4:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "5532:4:12"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_5a4547c6e8528c5f7522e620f017033bad79c14d9d83736fcdb98681fb668b75__to_t_string_memory_ptr__fromStack_reversed",
                        "nativeSrc": "5208:356:12",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "5359:9:12",
                            "nodeType": "YulTypedName",
                            "src": "5359:9:12",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "5373:4:12",
                            "nodeType": "YulTypedName",
                            "src": "5373:4:12",
                            "type": ""
                          }
                        ],
                        "src": "5208:356:12"
                      },
                      {
                        "body": {
                          "nativeSrc": "5601:95:12",
                          "nodeType": "YulBlock",
                          "src": "5601:95:12",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "5618:1:12",
                                    "nodeType": "YulLiteral",
                                    "src": "5618:1:12",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nativeSrc": "5625:3:12",
                                        "nodeType": "YulLiteral",
                                        "src": "5625:3:12",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "5630:10:12",
                                        "nodeType": "YulLiteral",
                                        "src": "5630:10:12",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nativeSrc": "5621:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "5621:3:12"
                                    },
                                    "nativeSrc": "5621:20:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "5621:20:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "5611:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "5611:6:12"
                                },
                                "nativeSrc": "5611:31:12",
                                "nodeType": "YulFunctionCall",
                                "src": "5611:31:12"
                              },
                              "nativeSrc": "5611:31:12",
                              "nodeType": "YulExpressionStatement",
                              "src": "5611:31:12"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "5658:1:12",
                                    "nodeType": "YulLiteral",
                                    "src": "5658:1:12",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "5661:4:12",
                                    "nodeType": "YulLiteral",
                                    "src": "5661:4:12",
                                    "type": "",
                                    "value": "0x11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "5651:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "5651:6:12"
                                },
                                "nativeSrc": "5651:15:12",
                                "nodeType": "YulFunctionCall",
                                "src": "5651:15:12"
                              },
                              "nativeSrc": "5651:15:12",
                              "nodeType": "YulExpressionStatement",
                              "src": "5651:15:12"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "5682:1:12",
                                    "nodeType": "YulLiteral",
                                    "src": "5682:1:12",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "5685:4:12",
                                    "nodeType": "YulLiteral",
                                    "src": "5685:4:12",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nativeSrc": "5675:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "5675:6:12"
                                },
                                "nativeSrc": "5675:15:12",
                                "nodeType": "YulFunctionCall",
                                "src": "5675:15:12"
                              },
                              "nativeSrc": "5675:15:12",
                              "nodeType": "YulExpressionStatement",
                              "src": "5675:15:12"
                            }
                          ]
                        },
                        "name": "panic_error_0x11",
                        "nativeSrc": "5569:127:12",
                        "nodeType": "YulFunctionDefinition",
                        "src": "5569:127:12"
                      },
                      {
                        "body": {
                          "nativeSrc": "5770:306:12",
                          "nodeType": "YulBlock",
                          "src": "5770:306:12",
                          "statements": [
                            {
                              "nativeSrc": "5780:10:12",
                              "nodeType": "YulAssignment",
                              "src": "5780:10:12",
                              "value": {
                                "kind": "number",
                                "nativeSrc": "5789:1:12",
                                "nodeType": "YulLiteral",
                                "src": "5789:1:12",
                                "type": "",
                                "value": "1"
                              },
                              "variableNames": [
                                {
                                  "name": "power",
                                  "nativeSrc": "5780:5:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "5780:5:12"
                                }
                              ]
                            },
                            {
                              "nativeSrc": "5799:13:12",
                              "nodeType": "YulAssignment",
                              "src": "5799:13:12",
                              "value": {
                                "name": "_base",
                                "nativeSrc": "5807:5:12",
                                "nodeType": "YulIdentifier",
                                "src": "5807:5:12"
                              },
                              "variableNames": [
                                {
                                  "name": "base",
                                  "nativeSrc": "5799:4:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "5799:4:12"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "5857:213:12",
                                "nodeType": "YulBlock",
                                "src": "5857:213:12",
                                "statements": [
                                  {
                                    "body": {
                                      "nativeSrc": "5899:22:12",
                                      "nodeType": "YulBlock",
                                      "src": "5899:22:12",
                                      "statements": [
                                        {
                                          "expression": {
                                            "arguments": [],
                                            "functionName": {
                                              "name": "panic_error_0x11",
                                              "nativeSrc": "5901:16:12",
                                              "nodeType": "YulIdentifier",
                                              "src": "5901:16:12"
                                            },
                                            "nativeSrc": "5901:18:12",
                                            "nodeType": "YulFunctionCall",
                                            "src": "5901:18:12"
                                          },
                                          "nativeSrc": "5901:18:12",
                                          "nodeType": "YulExpressionStatement",
                                          "src": "5901:18:12"
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "name": "base",
                                          "nativeSrc": "5877:4:12",
                                          "nodeType": "YulIdentifier",
                                          "src": "5877:4:12"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "name": "max",
                                              "nativeSrc": "5887:3:12",
                                              "nodeType": "YulIdentifier",
                                              "src": "5887:3:12"
                                            },
                                            {
                                              "name": "base",
                                              "nativeSrc": "5892:4:12",
                                              "nodeType": "YulIdentifier",
                                              "src": "5892:4:12"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "div",
                                            "nativeSrc": "5883:3:12",
                                            "nodeType": "YulIdentifier",
                                            "src": "5883:3:12"
                                          },
                                          "nativeSrc": "5883:14:12",
                                          "nodeType": "YulFunctionCall",
                                          "src": "5883:14:12"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "gt",
                                        "nativeSrc": "5874:2:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "5874:2:12"
                                      },
                                      "nativeSrc": "5874:24:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "5874:24:12"
                                    },
                                    "nativeSrc": "5871:50:12",
                                    "nodeType": "YulIf",
                                    "src": "5871:50:12"
                                  },
                                  {
                                    "body": {
                                      "nativeSrc": "5954:29:12",
                                      "nodeType": "YulBlock",
                                      "src": "5954:29:12",
                                      "statements": [
                                        {
                                          "nativeSrc": "5956:25:12",
                                          "nodeType": "YulAssignment",
                                          "src": "5956:25:12",
                                          "value": {
                                            "arguments": [
                                              {
                                                "name": "power",
                                                "nativeSrc": "5969:5:12",
                                                "nodeType": "YulIdentifier",
                                                "src": "5969:5:12"
                                              },
                                              {
                                                "name": "base",
                                                "nativeSrc": "5976:4:12",
                                                "nodeType": "YulIdentifier",
                                                "src": "5976:4:12"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "mul",
                                              "nativeSrc": "5965:3:12",
                                              "nodeType": "YulIdentifier",
                                              "src": "5965:3:12"
                                            },
                                            "nativeSrc": "5965:16:12",
                                            "nodeType": "YulFunctionCall",
                                            "src": "5965:16:12"
                                          },
                                          "variableNames": [
                                            {
                                              "name": "power",
                                              "nativeSrc": "5956:5:12",
                                              "nodeType": "YulIdentifier",
                                              "src": "5956:5:12"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "name": "exponent",
                                          "nativeSrc": "5941:8:12",
                                          "nodeType": "YulIdentifier",
                                          "src": "5941:8:12"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "5951:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "5951:1:12",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "and",
                                        "nativeSrc": "5937:3:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "5937:3:12"
                                      },
                                      "nativeSrc": "5937:16:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "5937:16:12"
                                    },
                                    "nativeSrc": "5934:49:12",
                                    "nodeType": "YulIf",
                                    "src": "5934:49:12"
                                  },
                                  {
                                    "nativeSrc": "5996:23:12",
                                    "nodeType": "YulAssignment",
                                    "src": "5996:23:12",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "base",
                                          "nativeSrc": "6008:4:12",
                                          "nodeType": "YulIdentifier",
                                          "src": "6008:4:12"
                                        },
                                        {
                                          "name": "base",
                                          "nativeSrc": "6014:4:12",
                                          "nodeType": "YulIdentifier",
                                          "src": "6014:4:12"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mul",
                                        "nativeSrc": "6004:3:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "6004:3:12"
                                      },
                                      "nativeSrc": "6004:15:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "6004:15:12"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "base",
                                        "nativeSrc": "5996:4:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "5996:4:12"
                                      }
                                    ]
                                  },
                                  {
                                    "nativeSrc": "6032:28:12",
                                    "nodeType": "YulAssignment",
                                    "src": "6032:28:12",
                                    "value": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "6048:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "6048:1:12",
                                          "type": "",
                                          "value": "1"
                                        },
                                        {
                                          "name": "exponent",
                                          "nativeSrc": "6051:8:12",
                                          "nodeType": "YulIdentifier",
                                          "src": "6051:8:12"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "shr",
                                        "nativeSrc": "6044:3:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "6044:3:12"
                                      },
                                      "nativeSrc": "6044:16:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "6044:16:12"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "exponent",
                                        "nativeSrc": "6032:8:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "6032:8:12"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "exponent",
                                    "nativeSrc": "5832:8:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "5832:8:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "5842:1:12",
                                    "nodeType": "YulLiteral",
                                    "src": "5842:1:12",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "5829:2:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "5829:2:12"
                                },
                                "nativeSrc": "5829:15:12",
                                "nodeType": "YulFunctionCall",
                                "src": "5829:15:12"
                              },
                              "nativeSrc": "5821:249:12",
                              "nodeType": "YulForLoop",
                              "post": {
                                "nativeSrc": "5845:3:12",
                                "nodeType": "YulBlock",
                                "src": "5845:3:12",
                                "statements": []
                              },
                              "pre": {
                                "nativeSrc": "5825:3:12",
                                "nodeType": "YulBlock",
                                "src": "5825:3:12",
                                "statements": []
                              },
                              "src": "5821:249:12"
                            }
                          ]
                        },
                        "name": "checked_exp_helper",
                        "nativeSrc": "5701:375:12",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "_base",
                            "nativeSrc": "5729:5:12",
                            "nodeType": "YulTypedName",
                            "src": "5729:5:12",
                            "type": ""
                          },
                          {
                            "name": "exponent",
                            "nativeSrc": "5736:8:12",
                            "nodeType": "YulTypedName",
                            "src": "5736:8:12",
                            "type": ""
                          },
                          {
                            "name": "max",
                            "nativeSrc": "5746:3:12",
                            "nodeType": "YulTypedName",
                            "src": "5746:3:12",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "power",
                            "nativeSrc": "5754:5:12",
                            "nodeType": "YulTypedName",
                            "src": "5754:5:12",
                            "type": ""
                          },
                          {
                            "name": "base",
                            "nativeSrc": "5761:4:12",
                            "nodeType": "YulTypedName",
                            "src": "5761:4:12",
                            "type": ""
                          }
                        ],
                        "src": "5701:375:12"
                      },
                      {
                        "body": {
                          "nativeSrc": "6140:843:12",
                          "nodeType": "YulBlock",
                          "src": "6140:843:12",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "6178:52:12",
                                "nodeType": "YulBlock",
                                "src": "6178:52:12",
                                "statements": [
                                  {
                                    "nativeSrc": "6192:10:12",
                                    "nodeType": "YulAssignment",
                                    "src": "6192:10:12",
                                    "value": {
                                      "kind": "number",
                                      "nativeSrc": "6201:1:12",
                                      "nodeType": "YulLiteral",
                                      "src": "6201:1:12",
                                      "type": "",
                                      "value": "1"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "power",
                                        "nativeSrc": "6192:5:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "6192:5:12"
                                      }
                                    ]
                                  },
                                  {
                                    "nativeSrc": "6215:5:12",
                                    "nodeType": "YulLeave",
                                    "src": "6215:5:12"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "exponent",
                                    "nativeSrc": "6160:8:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "6160:8:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "6153:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "6153:6:12"
                                },
                                "nativeSrc": "6153:16:12",
                                "nodeType": "YulFunctionCall",
                                "src": "6153:16:12"
                              },
                              "nativeSrc": "6150:80:12",
                              "nodeType": "YulIf",
                              "src": "6150:80:12"
                            },
                            {
                              "body": {
                                "nativeSrc": "6263:52:12",
                                "nodeType": "YulBlock",
                                "src": "6263:52:12",
                                "statements": [
                                  {
                                    "nativeSrc": "6277:10:12",
                                    "nodeType": "YulAssignment",
                                    "src": "6277:10:12",
                                    "value": {
                                      "kind": "number",
                                      "nativeSrc": "6286:1:12",
                                      "nodeType": "YulLiteral",
                                      "src": "6286:1:12",
                                      "type": "",
                                      "value": "0"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "power",
                                        "nativeSrc": "6277:5:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "6277:5:12"
                                      }
                                    ]
                                  },
                                  {
                                    "nativeSrc": "6300:5:12",
                                    "nodeType": "YulLeave",
                                    "src": "6300:5:12"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "base",
                                    "nativeSrc": "6249:4:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "6249:4:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "6242:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "6242:6:12"
                                },
                                "nativeSrc": "6242:12:12",
                                "nodeType": "YulFunctionCall",
                                "src": "6242:12:12"
                              },
                              "nativeSrc": "6239:76:12",
                              "nodeType": "YulIf",
                              "src": "6239:76:12"
                            },
                            {
                              "cases": [
                                {
                                  "body": {
                                    "nativeSrc": "6351:52:12",
                                    "nodeType": "YulBlock",
                                    "src": "6351:52:12",
                                    "statements": [
                                      {
                                        "nativeSrc": "6365:10:12",
                                        "nodeType": "YulAssignment",
                                        "src": "6365:10:12",
                                        "value": {
                                          "kind": "number",
                                          "nativeSrc": "6374:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "6374:1:12",
                                          "type": "",
                                          "value": "1"
                                        },
                                        "variableNames": [
                                          {
                                            "name": "power",
                                            "nativeSrc": "6365:5:12",
                                            "nodeType": "YulIdentifier",
                                            "src": "6365:5:12"
                                          }
                                        ]
                                      },
                                      {
                                        "nativeSrc": "6388:5:12",
                                        "nodeType": "YulLeave",
                                        "src": "6388:5:12"
                                      }
                                    ]
                                  },
                                  "nativeSrc": "6344:59:12",
                                  "nodeType": "YulCase",
                                  "src": "6344:59:12",
                                  "value": {
                                    "kind": "number",
                                    "nativeSrc": "6349:1:12",
                                    "nodeType": "YulLiteral",
                                    "src": "6349:1:12",
                                    "type": "",
                                    "value": "1"
                                  }
                                },
                                {
                                  "body": {
                                    "nativeSrc": "6419:167:12",
                                    "nodeType": "YulBlock",
                                    "src": "6419:167:12",
                                    "statements": [
                                      {
                                        "body": {
                                          "nativeSrc": "6454:22:12",
                                          "nodeType": "YulBlock",
                                          "src": "6454:22:12",
                                          "statements": [
                                            {
                                              "expression": {
                                                "arguments": [],
                                                "functionName": {
                                                  "name": "panic_error_0x11",
                                                  "nativeSrc": "6456:16:12",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "6456:16:12"
                                                },
                                                "nativeSrc": "6456:18:12",
                                                "nodeType": "YulFunctionCall",
                                                "src": "6456:18:12"
                                              },
                                              "nativeSrc": "6456:18:12",
                                              "nodeType": "YulExpressionStatement",
                                              "src": "6456:18:12"
                                            }
                                          ]
                                        },
                                        "condition": {
                                          "arguments": [
                                            {
                                              "name": "exponent",
                                              "nativeSrc": "6439:8:12",
                                              "nodeType": "YulIdentifier",
                                              "src": "6439:8:12"
                                            },
                                            {
                                              "kind": "number",
                                              "nativeSrc": "6449:3:12",
                                              "nodeType": "YulLiteral",
                                              "src": "6449:3:12",
                                              "type": "",
                                              "value": "255"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "gt",
                                            "nativeSrc": "6436:2:12",
                                            "nodeType": "YulIdentifier",
                                            "src": "6436:2:12"
                                          },
                                          "nativeSrc": "6436:17:12",
                                          "nodeType": "YulFunctionCall",
                                          "src": "6436:17:12"
                                        },
                                        "nativeSrc": "6433:43:12",
                                        "nodeType": "YulIf",
                                        "src": "6433:43:12"
                                      },
                                      {
                                        "nativeSrc": "6489:25:12",
                                        "nodeType": "YulAssignment",
                                        "src": "6489:25:12",
                                        "value": {
                                          "arguments": [
                                            {
                                              "name": "exponent",
                                              "nativeSrc": "6502:8:12",
                                              "nodeType": "YulIdentifier",
                                              "src": "6502:8:12"
                                            },
                                            {
                                              "kind": "number",
                                              "nativeSrc": "6512:1:12",
                                              "nodeType": "YulLiteral",
                                              "src": "6512:1:12",
                                              "type": "",
                                              "value": "1"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shl",
                                            "nativeSrc": "6498:3:12",
                                            "nodeType": "YulIdentifier",
                                            "src": "6498:3:12"
                                          },
                                          "nativeSrc": "6498:16:12",
                                          "nodeType": "YulFunctionCall",
                                          "src": "6498:16:12"
                                        },
                                        "variableNames": [
                                          {
                                            "name": "power",
                                            "nativeSrc": "6489:5:12",
                                            "nodeType": "YulIdentifier",
                                            "src": "6489:5:12"
                                          }
                                        ]
                                      },
                                      {
                                        "nativeSrc": "6527:11:12",
                                        "nodeType": "YulVariableDeclaration",
                                        "src": "6527:11:12",
                                        "value": {
                                          "kind": "number",
                                          "nativeSrc": "6537:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "6537:1:12",
                                          "type": "",
                                          "value": "0"
                                        },
                                        "variables": [
                                          {
                                            "name": "_1",
                                            "nativeSrc": "6531:2:12",
                                            "nodeType": "YulTypedName",
                                            "src": "6531:2:12",
                                            "type": ""
                                          }
                                        ]
                                      },
                                      {
                                        "nativeSrc": "6551:7:12",
                                        "nodeType": "YulAssignment",
                                        "src": "6551:7:12",
                                        "value": {
                                          "kind": "number",
                                          "nativeSrc": "6557:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "6557:1:12",
                                          "type": "",
                                          "value": "0"
                                        },
                                        "variableNames": [
                                          {
                                            "name": "_1",
                                            "nativeSrc": "6551:2:12",
                                            "nodeType": "YulIdentifier",
                                            "src": "6551:2:12"
                                          }
                                        ]
                                      },
                                      {
                                        "nativeSrc": "6571:5:12",
                                        "nodeType": "YulLeave",
                                        "src": "6571:5:12"
                                      }
                                    ]
                                  },
                                  "nativeSrc": "6412:174:12",
                                  "nodeType": "YulCase",
                                  "src": "6412:174:12",
                                  "value": {
                                    "kind": "number",
                                    "nativeSrc": "6417:1:12",
                                    "nodeType": "YulLiteral",
                                    "src": "6417:1:12",
                                    "type": "",
                                    "value": "2"
                                  }
                                }
                              ],
                              "expression": {
                                "name": "base",
                                "nativeSrc": "6331:4:12",
                                "nodeType": "YulIdentifier",
                                "src": "6331:4:12"
                              },
                              "nativeSrc": "6324:262:12",
                              "nodeType": "YulSwitch",
                              "src": "6324:262:12"
                            },
                            {
                              "body": {
                                "nativeSrc": "6684:114:12",
                                "nodeType": "YulBlock",
                                "src": "6684:114:12",
                                "statements": [
                                  {
                                    "nativeSrc": "6698:28:12",
                                    "nodeType": "YulAssignment",
                                    "src": "6698:28:12",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "base",
                                          "nativeSrc": "6711:4:12",
                                          "nodeType": "YulIdentifier",
                                          "src": "6711:4:12"
                                        },
                                        {
                                          "name": "exponent",
                                          "nativeSrc": "6717:8:12",
                                          "nodeType": "YulIdentifier",
                                          "src": "6717:8:12"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "exp",
                                        "nativeSrc": "6707:3:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "6707:3:12"
                                      },
                                      "nativeSrc": "6707:19:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "6707:19:12"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "power",
                                        "nativeSrc": "6698:5:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "6698:5:12"
                                      }
                                    ]
                                  },
                                  {
                                    "nativeSrc": "6739:11:12",
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "6739:11:12",
                                    "value": {
                                      "kind": "number",
                                      "nativeSrc": "6749:1:12",
                                      "nodeType": "YulLiteral",
                                      "src": "6749:1:12",
                                      "type": "",
                                      "value": "0"
                                    },
                                    "variables": [
                                      {
                                        "name": "_2",
                                        "nativeSrc": "6743:2:12",
                                        "nodeType": "YulTypedName",
                                        "src": "6743:2:12",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "nativeSrc": "6763:7:12",
                                    "nodeType": "YulAssignment",
                                    "src": "6763:7:12",
                                    "value": {
                                      "kind": "number",
                                      "nativeSrc": "6769:1:12",
                                      "nodeType": "YulLiteral",
                                      "src": "6769:1:12",
                                      "type": "",
                                      "value": "0"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "_2",
                                        "nativeSrc": "6763:2:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "6763:2:12"
                                      }
                                    ]
                                  },
                                  {
                                    "nativeSrc": "6783:5:12",
                                    "nodeType": "YulLeave",
                                    "src": "6783:5:12"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "base",
                                            "nativeSrc": "6608:4:12",
                                            "nodeType": "YulIdentifier",
                                            "src": "6608:4:12"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "6614:2:12",
                                            "nodeType": "YulLiteral",
                                            "src": "6614:2:12",
                                            "type": "",
                                            "value": "11"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "lt",
                                          "nativeSrc": "6605:2:12",
                                          "nodeType": "YulIdentifier",
                                          "src": "6605:2:12"
                                        },
                                        "nativeSrc": "6605:12:12",
                                        "nodeType": "YulFunctionCall",
                                        "src": "6605:12:12"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "exponent",
                                            "nativeSrc": "6622:8:12",
                                            "nodeType": "YulIdentifier",
                                            "src": "6622:8:12"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "6632:2:12",
                                            "nodeType": "YulLiteral",
                                            "src": "6632:2:12",
                                            "type": "",
                                            "value": "78"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "lt",
                                          "nativeSrc": "6619:2:12",
                                          "nodeType": "YulIdentifier",
                                          "src": "6619:2:12"
                                        },
                                        "nativeSrc": "6619:16:12",
                                        "nodeType": "YulFunctionCall",
                                        "src": "6619:16:12"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "6601:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "6601:3:12"
                                    },
                                    "nativeSrc": "6601:35:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "6601:35:12"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "base",
                                            "nativeSrc": "6645:4:12",
                                            "nodeType": "YulIdentifier",
                                            "src": "6645:4:12"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "6651:3:12",
                                            "nodeType": "YulLiteral",
                                            "src": "6651:3:12",
                                            "type": "",
                                            "value": "307"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "lt",
                                          "nativeSrc": "6642:2:12",
                                          "nodeType": "YulIdentifier",
                                          "src": "6642:2:12"
                                        },
                                        "nativeSrc": "6642:13:12",
                                        "nodeType": "YulFunctionCall",
                                        "src": "6642:13:12"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "exponent",
                                            "nativeSrc": "6660:8:12",
                                            "nodeType": "YulIdentifier",
                                            "src": "6660:8:12"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "6670:2:12",
                                            "nodeType": "YulLiteral",
                                            "src": "6670:2:12",
                                            "type": "",
                                            "value": "32"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "lt",
                                          "nativeSrc": "6657:2:12",
                                          "nodeType": "YulIdentifier",
                                          "src": "6657:2:12"
                                        },
                                        "nativeSrc": "6657:16:12",
                                        "nodeType": "YulFunctionCall",
                                        "src": "6657:16:12"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "6638:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "6638:3:12"
                                    },
                                    "nativeSrc": "6638:36:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "6638:36:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "or",
                                  "nativeSrc": "6598:2:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "6598:2:12"
                                },
                                "nativeSrc": "6598:77:12",
                                "nodeType": "YulFunctionCall",
                                "src": "6598:77:12"
                              },
                              "nativeSrc": "6595:203:12",
                              "nodeType": "YulIf",
                              "src": "6595:203:12"
                            },
                            {
                              "nativeSrc": "6807:65:12",
                              "nodeType": "YulVariableDeclaration",
                              "src": "6807:65:12",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "base",
                                    "nativeSrc": "6849:4:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "6849:4:12"
                                  },
                                  {
                                    "name": "exponent",
                                    "nativeSrc": "6855:8:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "6855:8:12"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nativeSrc": "6869:1:12",
                                        "nodeType": "YulLiteral",
                                        "src": "6869:1:12",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nativeSrc": "6865:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "6865:3:12"
                                    },
                                    "nativeSrc": "6865:6:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "6865:6:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "checked_exp_helper",
                                  "nativeSrc": "6830:18:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "6830:18:12"
                                },
                                "nativeSrc": "6830:42:12",
                                "nodeType": "YulFunctionCall",
                                "src": "6830:42:12"
                              },
                              "variables": [
                                {
                                  "name": "power_1",
                                  "nativeSrc": "6811:7:12",
                                  "nodeType": "YulTypedName",
                                  "src": "6811:7:12",
                                  "type": ""
                                },
                                {
                                  "name": "base_1",
                                  "nativeSrc": "6820:6:12",
                                  "nodeType": "YulTypedName",
                                  "src": "6820:6:12",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "6917:22:12",
                                "nodeType": "YulBlock",
                                "src": "6917:22:12",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nativeSrc": "6919:16:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "6919:16:12"
                                      },
                                      "nativeSrc": "6919:18:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "6919:18:12"
                                    },
                                    "nativeSrc": "6919:18:12",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "6919:18:12"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "power_1",
                                    "nativeSrc": "6887:7:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "6887:7:12"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nativeSrc": "6904:1:12",
                                            "nodeType": "YulLiteral",
                                            "src": "6904:1:12",
                                            "type": "",
                                            "value": "0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "not",
                                          "nativeSrc": "6900:3:12",
                                          "nodeType": "YulIdentifier",
                                          "src": "6900:3:12"
                                        },
                                        "nativeSrc": "6900:6:12",
                                        "nodeType": "YulFunctionCall",
                                        "src": "6900:6:12"
                                      },
                                      {
                                        "name": "base_1",
                                        "nativeSrc": "6908:6:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "6908:6:12"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "div",
                                      "nativeSrc": "6896:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "6896:3:12"
                                    },
                                    "nativeSrc": "6896:19:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "6896:19:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "6884:2:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "6884:2:12"
                                },
                                "nativeSrc": "6884:32:12",
                                "nodeType": "YulFunctionCall",
                                "src": "6884:32:12"
                              },
                              "nativeSrc": "6881:58:12",
                              "nodeType": "YulIf",
                              "src": "6881:58:12"
                            },
                            {
                              "nativeSrc": "6948:29:12",
                              "nodeType": "YulAssignment",
                              "src": "6948:29:12",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "power_1",
                                    "nativeSrc": "6961:7:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "6961:7:12"
                                  },
                                  {
                                    "name": "base_1",
                                    "nativeSrc": "6970:6:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "6970:6:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nativeSrc": "6957:3:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "6957:3:12"
                                },
                                "nativeSrc": "6957:20:12",
                                "nodeType": "YulFunctionCall",
                                "src": "6957:20:12"
                              },
                              "variableNames": [
                                {
                                  "name": "power",
                                  "nativeSrc": "6948:5:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "6948:5:12"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_exp_unsigned",
                        "nativeSrc": "6081:902:12",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "base",
                            "nativeSrc": "6111:4:12",
                            "nodeType": "YulTypedName",
                            "src": "6111:4:12",
                            "type": ""
                          },
                          {
                            "name": "exponent",
                            "nativeSrc": "6117:8:12",
                            "nodeType": "YulTypedName",
                            "src": "6117:8:12",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "power",
                            "nativeSrc": "6130:5:12",
                            "nodeType": "YulTypedName",
                            "src": "6130:5:12",
                            "type": ""
                          }
                        ],
                        "src": "6081:902:12"
                      },
                      {
                        "body": {
                          "nativeSrc": "7056:72:12",
                          "nodeType": "YulBlock",
                          "src": "7056:72:12",
                          "statements": [
                            {
                              "nativeSrc": "7066:56:12",
                              "nodeType": "YulAssignment",
                              "src": "7066:56:12",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "base",
                                    "nativeSrc": "7096:4:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "7096:4:12"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "exponent",
                                        "nativeSrc": "7106:8:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "7106:8:12"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "7116:4:12",
                                        "nodeType": "YulLiteral",
                                        "src": "7116:4:12",
                                        "type": "",
                                        "value": "0xff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "7102:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "7102:3:12"
                                    },
                                    "nativeSrc": "7102:19:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "7102:19:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "checked_exp_unsigned",
                                  "nativeSrc": "7075:20:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "7075:20:12"
                                },
                                "nativeSrc": "7075:47:12",
                                "nodeType": "YulFunctionCall",
                                "src": "7075:47:12"
                              },
                              "variableNames": [
                                {
                                  "name": "power",
                                  "nativeSrc": "7066:5:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "7066:5:12"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_exp_t_uint256_t_uint8",
                        "nativeSrc": "6988:140:12",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "base",
                            "nativeSrc": "7027:4:12",
                            "nodeType": "YulTypedName",
                            "src": "7027:4:12",
                            "type": ""
                          },
                          {
                            "name": "exponent",
                            "nativeSrc": "7033:8:12",
                            "nodeType": "YulTypedName",
                            "src": "7033:8:12",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "power",
                            "nativeSrc": "7046:5:12",
                            "nodeType": "YulTypedName",
                            "src": "7046:5:12",
                            "type": ""
                          }
                        ],
                        "src": "6988:140:12"
                      },
                      {
                        "body": {
                          "nativeSrc": "7185:116:12",
                          "nodeType": "YulBlock",
                          "src": "7185:116:12",
                          "statements": [
                            {
                              "nativeSrc": "7195:20:12",
                              "nodeType": "YulAssignment",
                              "src": "7195:20:12",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nativeSrc": "7210:1:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "7210:1:12"
                                  },
                                  {
                                    "name": "y",
                                    "nativeSrc": "7213:1:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "7213:1:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nativeSrc": "7206:3:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "7206:3:12"
                                },
                                "nativeSrc": "7206:9:12",
                                "nodeType": "YulFunctionCall",
                                "src": "7206:9:12"
                              },
                              "variableNames": [
                                {
                                  "name": "product",
                                  "nativeSrc": "7195:7:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "7195:7:12"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "7273:22:12",
                                "nodeType": "YulBlock",
                                "src": "7273:22:12",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nativeSrc": "7275:16:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "7275:16:12"
                                      },
                                      "nativeSrc": "7275:18:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "7275:18:12"
                                    },
                                    "nativeSrc": "7275:18:12",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "7275:18:12"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "x",
                                            "nativeSrc": "7244:1:12",
                                            "nodeType": "YulIdentifier",
                                            "src": "7244:1:12"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nativeSrc": "7237:6:12",
                                          "nodeType": "YulIdentifier",
                                          "src": "7237:6:12"
                                        },
                                        "nativeSrc": "7237:9:12",
                                        "nodeType": "YulFunctionCall",
                                        "src": "7237:9:12"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "y",
                                            "nativeSrc": "7251:1:12",
                                            "nodeType": "YulIdentifier",
                                            "src": "7251:1:12"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "name": "product",
                                                "nativeSrc": "7258:7:12",
                                                "nodeType": "YulIdentifier",
                                                "src": "7258:7:12"
                                              },
                                              {
                                                "name": "x",
                                                "nativeSrc": "7267:1:12",
                                                "nodeType": "YulIdentifier",
                                                "src": "7267:1:12"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "div",
                                              "nativeSrc": "7254:3:12",
                                              "nodeType": "YulIdentifier",
                                              "src": "7254:3:12"
                                            },
                                            "nativeSrc": "7254:15:12",
                                            "nodeType": "YulFunctionCall",
                                            "src": "7254:15:12"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "eq",
                                          "nativeSrc": "7248:2:12",
                                          "nodeType": "YulIdentifier",
                                          "src": "7248:2:12"
                                        },
                                        "nativeSrc": "7248:22:12",
                                        "nodeType": "YulFunctionCall",
                                        "src": "7248:22:12"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "or",
                                      "nativeSrc": "7234:2:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "7234:2:12"
                                    },
                                    "nativeSrc": "7234:37:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "7234:37:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "7227:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "7227:6:12"
                                },
                                "nativeSrc": "7227:45:12",
                                "nodeType": "YulFunctionCall",
                                "src": "7227:45:12"
                              },
                              "nativeSrc": "7224:71:12",
                              "nodeType": "YulIf",
                              "src": "7224:71:12"
                            }
                          ]
                        },
                        "name": "checked_mul_t_uint256",
                        "nativeSrc": "7133:168:12",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nativeSrc": "7164:1:12",
                            "nodeType": "YulTypedName",
                            "src": "7164:1:12",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nativeSrc": "7167:1:12",
                            "nodeType": "YulTypedName",
                            "src": "7167:1:12",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "product",
                            "nativeSrc": "7173:7:12",
                            "nodeType": "YulTypedName",
                            "src": "7173:7:12",
                            "type": ""
                          }
                        ],
                        "src": "7133:168:12"
                      },
                      {
                        "body": {
                          "nativeSrc": "7354:77:12",
                          "nodeType": "YulBlock",
                          "src": "7354:77:12",
                          "statements": [
                            {
                              "nativeSrc": "7364:16:12",
                              "nodeType": "YulAssignment",
                              "src": "7364:16:12",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nativeSrc": "7375:1:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "7375:1:12"
                                  },
                                  {
                                    "name": "y",
                                    "nativeSrc": "7378:1:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "7378:1:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "7371:3:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "7371:3:12"
                                },
                                "nativeSrc": "7371:9:12",
                                "nodeType": "YulFunctionCall",
                                "src": "7371:9:12"
                              },
                              "variableNames": [
                                {
                                  "name": "sum",
                                  "nativeSrc": "7364:3:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "7364:3:12"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "7403:22:12",
                                "nodeType": "YulBlock",
                                "src": "7403:22:12",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nativeSrc": "7405:16:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "7405:16:12"
                                      },
                                      "nativeSrc": "7405:18:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "7405:18:12"
                                    },
                                    "nativeSrc": "7405:18:12",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "7405:18:12"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nativeSrc": "7395:1:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "7395:1:12"
                                  },
                                  {
                                    "name": "sum",
                                    "nativeSrc": "7398:3:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "7398:3:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "7392:2:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "7392:2:12"
                                },
                                "nativeSrc": "7392:10:12",
                                "nodeType": "YulFunctionCall",
                                "src": "7392:10:12"
                              },
                              "nativeSrc": "7389:36:12",
                              "nodeType": "YulIf",
                              "src": "7389:36:12"
                            }
                          ]
                        },
                        "name": "checked_add_t_uint256",
                        "nativeSrc": "7306:125:12",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nativeSrc": "7337:1:12",
                            "nodeType": "YulTypedName",
                            "src": "7337:1:12",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nativeSrc": "7340:1:12",
                            "nodeType": "YulTypedName",
                            "src": "7340:1:12",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "sum",
                            "nativeSrc": "7346:3:12",
                            "nodeType": "YulTypedName",
                            "src": "7346:3:12",
                            "type": ""
                          }
                        ],
                        "src": "7306:125:12"
                      },
                      {
                        "body": {
                          "nativeSrc": "7610:179:12",
                          "nodeType": "YulBlock",
                          "src": "7610:179:12",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "7627:9:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "7627:9:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "7638:2:12",
                                    "nodeType": "YulLiteral",
                                    "src": "7638:2:12",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "7620:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "7620:6:12"
                                },
                                "nativeSrc": "7620:21:12",
                                "nodeType": "YulFunctionCall",
                                "src": "7620:21:12"
                              },
                              "nativeSrc": "7620:21:12",
                              "nodeType": "YulExpressionStatement",
                              "src": "7620:21:12"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "7661:9:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "7661:9:12"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "7672:2:12",
                                        "nodeType": "YulLiteral",
                                        "src": "7672:2:12",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "7657:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "7657:3:12"
                                    },
                                    "nativeSrc": "7657:18:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "7657:18:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "7677:2:12",
                                    "nodeType": "YulLiteral",
                                    "src": "7677:2:12",
                                    "type": "",
                                    "value": "29"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "7650:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "7650:6:12"
                                },
                                "nativeSrc": "7650:30:12",
                                "nodeType": "YulFunctionCall",
                                "src": "7650:30:12"
                              },
                              "nativeSrc": "7650:30:12",
                              "nodeType": "YulExpressionStatement",
                              "src": "7650:30:12"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "7700:9:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "7700:9:12"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "7711:2:12",
                                        "nodeType": "YulLiteral",
                                        "src": "7711:2:12",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "7696:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "7696:3:12"
                                    },
                                    "nativeSrc": "7696:18:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "7696:18:12"
                                  },
                                  {
                                    "hexValue": "45786365656473206461696c79207370656e64696e67206c696d69742e",
                                    "kind": "string",
                                    "nativeSrc": "7716:31:12",
                                    "nodeType": "YulLiteral",
                                    "src": "7716:31:12",
                                    "type": "",
                                    "value": "Exceeds daily spending limit."
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "7689:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "7689:6:12"
                                },
                                "nativeSrc": "7689:59:12",
                                "nodeType": "YulFunctionCall",
                                "src": "7689:59:12"
                              },
                              "nativeSrc": "7689:59:12",
                              "nodeType": "YulExpressionStatement",
                              "src": "7689:59:12"
                            },
                            {
                              "nativeSrc": "7757:26:12",
                              "nodeType": "YulAssignment",
                              "src": "7757:26:12",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "7769:9:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "7769:9:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "7780:2:12",
                                    "nodeType": "YulLiteral",
                                    "src": "7780:2:12",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "7765:3:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "7765:3:12"
                                },
                                "nativeSrc": "7765:18:12",
                                "nodeType": "YulFunctionCall",
                                "src": "7765:18:12"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "7757:4:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "7757:4:12"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_cceb5fa596334024605abeece7820bf456c2bd75cc9b2f6d93df4e5fbd05fed3__to_t_string_memory_ptr__fromStack_reversed",
                        "nativeSrc": "7436:353:12",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "7587:9:12",
                            "nodeType": "YulTypedName",
                            "src": "7587:9:12",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "7601:4:12",
                            "nodeType": "YulTypedName",
                            "src": "7601:4:12",
                            "type": ""
                          }
                        ],
                        "src": "7436:353:12"
                      },
                      {
                        "body": {
                          "nativeSrc": "7968:166:12",
                          "nodeType": "YulBlock",
                          "src": "7968:166:12",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "7985:9:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "7985:9:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "7996:2:12",
                                    "nodeType": "YulLiteral",
                                    "src": "7996:2:12",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "7978:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "7978:6:12"
                                },
                                "nativeSrc": "7978:21:12",
                                "nodeType": "YulFunctionCall",
                                "src": "7978:21:12"
                              },
                              "nativeSrc": "7978:21:12",
                              "nodeType": "YulExpressionStatement",
                              "src": "7978:21:12"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "8019:9:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "8019:9:12"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "8030:2:12",
                                        "nodeType": "YulLiteral",
                                        "src": "8030:2:12",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "8015:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "8015:3:12"
                                    },
                                    "nativeSrc": "8015:18:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "8015:18:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "8035:2:12",
                                    "nodeType": "YulLiteral",
                                    "src": "8035:2:12",
                                    "type": "",
                                    "value": "16"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "8008:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "8008:6:12"
                                },
                                "nativeSrc": "8008:30:12",
                                "nodeType": "YulFunctionCall",
                                "src": "8008:30:12"
                              },
                              "nativeSrc": "8008:30:12",
                              "nodeType": "YulExpressionStatement",
                              "src": "8008:30:12"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "8058:9:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "8058:9:12"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "8069:2:12",
                                        "nodeType": "YulLiteral",
                                        "src": "8069:2:12",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "8054:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "8054:3:12"
                                    },
                                    "nativeSrc": "8054:18:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "8054:18:12"
                                  },
                                  {
                                    "hexValue": "5472616e73666572206661696c65642e",
                                    "kind": "string",
                                    "nativeSrc": "8074:18:12",
                                    "nodeType": "YulLiteral",
                                    "src": "8074:18:12",
                                    "type": "",
                                    "value": "Transfer failed."
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "8047:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "8047:6:12"
                                },
                                "nativeSrc": "8047:46:12",
                                "nodeType": "YulFunctionCall",
                                "src": "8047:46:12"
                              },
                              "nativeSrc": "8047:46:12",
                              "nodeType": "YulExpressionStatement",
                              "src": "8047:46:12"
                            },
                            {
                              "nativeSrc": "8102:26:12",
                              "nodeType": "YulAssignment",
                              "src": "8102:26:12",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "8114:9:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "8114:9:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "8125:2:12",
                                    "nodeType": "YulLiteral",
                                    "src": "8125:2:12",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "8110:3:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "8110:3:12"
                                },
                                "nativeSrc": "8110:18:12",
                                "nodeType": "YulFunctionCall",
                                "src": "8110:18:12"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "8102:4:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "8102:4:12"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_c81948f77ae7b56f1759fc612b6b373d090eebe7124f74c528fff8e0a139fe69__to_t_string_memory_ptr__fromStack_reversed",
                        "nativeSrc": "7794:340:12",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "7945:9:12",
                            "nodeType": "YulTypedName",
                            "src": "7945:9:12",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "7959:4:12",
                            "nodeType": "YulTypedName",
                            "src": "7959:4:12",
                            "type": ""
                          }
                        ],
                        "src": "7794:340:12"
                      },
                      {
                        "body": {
                          "nativeSrc": "8313:181:12",
                          "nodeType": "YulBlock",
                          "src": "8313:181:12",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "8330:9:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "8330:9:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "8341:2:12",
                                    "nodeType": "YulLiteral",
                                    "src": "8341:2:12",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "8323:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "8323:6:12"
                                },
                                "nativeSrc": "8323:21:12",
                                "nodeType": "YulFunctionCall",
                                "src": "8323:21:12"
                              },
                              "nativeSrc": "8323:21:12",
                              "nodeType": "YulExpressionStatement",
                              "src": "8323:21:12"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "8364:9:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "8364:9:12"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "8375:2:12",
                                        "nodeType": "YulLiteral",
                                        "src": "8375:2:12",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "8360:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "8360:3:12"
                                    },
                                    "nativeSrc": "8360:18:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "8360:18:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "8380:2:12",
                                    "nodeType": "YulLiteral",
                                    "src": "8380:2:12",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "8353:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "8353:6:12"
                                },
                                "nativeSrc": "8353:30:12",
                                "nodeType": "YulFunctionCall",
                                "src": "8353:30:12"
                              },
                              "nativeSrc": "8353:30:12",
                              "nodeType": "YulExpressionStatement",
                              "src": "8353:30:12"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "8403:9:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "8403:9:12"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "8414:2:12",
                                        "nodeType": "YulLiteral",
                                        "src": "8414:2:12",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "8399:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "8399:3:12"
                                    },
                                    "nativeSrc": "8399:18:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "8399:18:12"
                                  },
                                  {
                                    "hexValue": "4c696d69742073686f756c642062652067726561746572207468616e20302e",
                                    "kind": "string",
                                    "nativeSrc": "8419:33:12",
                                    "nodeType": "YulLiteral",
                                    "src": "8419:33:12",
                                    "type": "",
                                    "value": "Limit should be greater than 0."
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "8392:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "8392:6:12"
                                },
                                "nativeSrc": "8392:61:12",
                                "nodeType": "YulFunctionCall",
                                "src": "8392:61:12"
                              },
                              "nativeSrc": "8392:61:12",
                              "nodeType": "YulExpressionStatement",
                              "src": "8392:61:12"
                            },
                            {
                              "nativeSrc": "8462:26:12",
                              "nodeType": "YulAssignment",
                              "src": "8462:26:12",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "8474:9:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "8474:9:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "8485:2:12",
                                    "nodeType": "YulLiteral",
                                    "src": "8485:2:12",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "8470:3:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "8470:3:12"
                                },
                                "nativeSrc": "8470:18:12",
                                "nodeType": "YulFunctionCall",
                                "src": "8470:18:12"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "8462:4:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "8462:4:12"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_af3195a179ad05055599ce517a796284d1531c0cdddc2475f9a4492a8cc2e347__to_t_string_memory_ptr__fromStack_reversed",
                        "nativeSrc": "8139:355:12",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "8290:9:12",
                            "nodeType": "YulTypedName",
                            "src": "8290:9:12",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "8304:4:12",
                            "nodeType": "YulTypedName",
                            "src": "8304:4:12",
                            "type": ""
                          }
                        ],
                        "src": "8139:355:12"
                      },
                      {
                        "body": {
                          "nativeSrc": "8673:244:12",
                          "nodeType": "YulBlock",
                          "src": "8673:244:12",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "8690:9:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "8690:9:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "8701:2:12",
                                    "nodeType": "YulLiteral",
                                    "src": "8701:2:12",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "8683:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "8683:6:12"
                                },
                                "nativeSrc": "8683:21:12",
                                "nodeType": "YulFunctionCall",
                                "src": "8683:21:12"
                              },
                              "nativeSrc": "8683:21:12",
                              "nodeType": "YulExpressionStatement",
                              "src": "8683:21:12"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "8724:9:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "8724:9:12"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "8735:2:12",
                                        "nodeType": "YulLiteral",
                                        "src": "8735:2:12",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "8720:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "8720:3:12"
                                    },
                                    "nativeSrc": "8720:18:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "8720:18:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "8740:2:12",
                                    "nodeType": "YulLiteral",
                                    "src": "8740:2:12",
                                    "type": "",
                                    "value": "54"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "8713:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "8713:6:12"
                                },
                                "nativeSrc": "8713:30:12",
                                "nodeType": "YulFunctionCall",
                                "src": "8713:30:12"
                              },
                              "nativeSrc": "8713:30:12",
                              "nodeType": "YulExpressionStatement",
                              "src": "8713:30:12"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "8763:9:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "8763:9:12"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "8774:2:12",
                                        "nodeType": "YulLiteral",
                                        "src": "8774:2:12",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "8759:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "8759:3:12"
                                    },
                                    "nativeSrc": "8759:18:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "8759:18:12"
                                  },
                                  {
                                    "hexValue": "45786365656473206461696c79207370656e64696e67206c696d69742c206361",
                                    "kind": "string",
                                    "nativeSrc": "8779:34:12",
                                    "nodeType": "YulLiteral",
                                    "src": "8779:34:12",
                                    "type": "",
                                    "value": "Exceeds daily spending limit, ca"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "8752:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "8752:6:12"
                                },
                                "nativeSrc": "8752:62:12",
                                "nodeType": "YulFunctionCall",
                                "src": "8752:62:12"
                              },
                              "nativeSrc": "8752:62:12",
                              "nodeType": "YulExpressionStatement",
                              "src": "8752:62:12"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "8834:9:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "8834:9:12"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "8845:2:12",
                                        "nodeType": "YulLiteral",
                                        "src": "8845:2:12",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "8830:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "8830:3:12"
                                    },
                                    "nativeSrc": "8830:18:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "8830:18:12"
                                  },
                                  {
                                    "hexValue": "6e27742072656365697665206578747261204343522e",
                                    "kind": "string",
                                    "nativeSrc": "8850:24:12",
                                    "nodeType": "YulLiteral",
                                    "src": "8850:24:12",
                                    "type": "",
                                    "value": "n't receive extra CCR."
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "8823:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "8823:6:12"
                                },
                                "nativeSrc": "8823:52:12",
                                "nodeType": "YulFunctionCall",
                                "src": "8823:52:12"
                              },
                              "nativeSrc": "8823:52:12",
                              "nodeType": "YulExpressionStatement",
                              "src": "8823:52:12"
                            },
                            {
                              "nativeSrc": "8884:27:12",
                              "nodeType": "YulAssignment",
                              "src": "8884:27:12",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "8896:9:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "8896:9:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "8907:3:12",
                                    "nodeType": "YulLiteral",
                                    "src": "8907:3:12",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "8892:3:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "8892:3:12"
                                },
                                "nativeSrc": "8892:19:12",
                                "nodeType": "YulFunctionCall",
                                "src": "8892:19:12"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "8884:4:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "8884:4:12"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_3dd5d03a42d94c65612aa39a572e29b54b5a7dcbfd89c9430ed0638f6b29d67c__to_t_string_memory_ptr__fromStack_reversed",
                        "nativeSrc": "8499:418:12",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "8650:9:12",
                            "nodeType": "YulTypedName",
                            "src": "8650:9:12",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "8664:4:12",
                            "nodeType": "YulTypedName",
                            "src": "8664:4:12",
                            "type": ""
                          }
                        ],
                        "src": "8499:418:12"
                      },
                      {
                        "body": {
                          "nativeSrc": "8968:171:12",
                          "nodeType": "YulBlock",
                          "src": "8968:171:12",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "8999:111:12",
                                "nodeType": "YulBlock",
                                "src": "8999:111:12",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "9020:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "9020:1:12",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nativeSrc": "9027:3:12",
                                              "nodeType": "YulLiteral",
                                              "src": "9027:3:12",
                                              "type": "",
                                              "value": "224"
                                            },
                                            {
                                              "kind": "number",
                                              "nativeSrc": "9032:10:12",
                                              "nodeType": "YulLiteral",
                                              "src": "9032:10:12",
                                              "type": "",
                                              "value": "0x4e487b71"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shl",
                                            "nativeSrc": "9023:3:12",
                                            "nodeType": "YulIdentifier",
                                            "src": "9023:3:12"
                                          },
                                          "nativeSrc": "9023:20:12",
                                          "nodeType": "YulFunctionCall",
                                          "src": "9023:20:12"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nativeSrc": "9013:6:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "9013:6:12"
                                      },
                                      "nativeSrc": "9013:31:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "9013:31:12"
                                    },
                                    "nativeSrc": "9013:31:12",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "9013:31:12"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "9064:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "9064:1:12",
                                          "type": "",
                                          "value": "4"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "9067:4:12",
                                          "nodeType": "YulLiteral",
                                          "src": "9067:4:12",
                                          "type": "",
                                          "value": "0x12"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nativeSrc": "9057:6:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "9057:6:12"
                                      },
                                      "nativeSrc": "9057:15:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "9057:15:12"
                                    },
                                    "nativeSrc": "9057:15:12",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "9057:15:12"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "9092:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "9092:1:12",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "9095:4:12",
                                          "nodeType": "YulLiteral",
                                          "src": "9095:4:12",
                                          "type": "",
                                          "value": "0x24"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nativeSrc": "9085:6:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "9085:6:12"
                                      },
                                      "nativeSrc": "9085:15:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "9085:15:12"
                                    },
                                    "nativeSrc": "9085:15:12",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "9085:15:12"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nativeSrc": "8988:1:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "8988:1:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "8981:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "8981:6:12"
                                },
                                "nativeSrc": "8981:9:12",
                                "nodeType": "YulFunctionCall",
                                "src": "8981:9:12"
                              },
                              "nativeSrc": "8978:132:12",
                              "nodeType": "YulIf",
                              "src": "8978:132:12"
                            },
                            {
                              "nativeSrc": "9119:14:12",
                              "nodeType": "YulAssignment",
                              "src": "9119:14:12",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nativeSrc": "9128:1:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "9128:1:12"
                                  },
                                  {
                                    "name": "y",
                                    "nativeSrc": "9131:1:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "9131:1:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "div",
                                  "nativeSrc": "9124:3:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "9124:3:12"
                                },
                                "nativeSrc": "9124:9:12",
                                "nodeType": "YulFunctionCall",
                                "src": "9124:9:12"
                              },
                              "variableNames": [
                                {
                                  "name": "r",
                                  "nativeSrc": "9119:1:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "9119:1:12"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_div_t_uint256",
                        "nativeSrc": "8922:217:12",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nativeSrc": "8953:1:12",
                            "nodeType": "YulTypedName",
                            "src": "8953:1:12",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nativeSrc": "8956:1:12",
                            "nodeType": "YulTypedName",
                            "src": "8956:1:12",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "r",
                            "nativeSrc": "8962:1:12",
                            "nodeType": "YulTypedName",
                            "src": "8962:1:12",
                            "type": ""
                          }
                        ],
                        "src": "8922:217:12"
                      },
                      {
                        "body": {
                          "nativeSrc": "9193:79:12",
                          "nodeType": "YulBlock",
                          "src": "9193:79:12",
                          "statements": [
                            {
                              "nativeSrc": "9203:17:12",
                              "nodeType": "YulAssignment",
                              "src": "9203:17:12",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nativeSrc": "9215:1:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "9215:1:12"
                                  },
                                  {
                                    "name": "y",
                                    "nativeSrc": "9218:1:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "9218:1:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nativeSrc": "9211:3:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "9211:3:12"
                                },
                                "nativeSrc": "9211:9:12",
                                "nodeType": "YulFunctionCall",
                                "src": "9211:9:12"
                              },
                              "variableNames": [
                                {
                                  "name": "diff",
                                  "nativeSrc": "9203:4:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "9203:4:12"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "9244:22:12",
                                "nodeType": "YulBlock",
                                "src": "9244:22:12",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nativeSrc": "9246:16:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "9246:16:12"
                                      },
                                      "nativeSrc": "9246:18:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "9246:18:12"
                                    },
                                    "nativeSrc": "9246:18:12",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "9246:18:12"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "diff",
                                    "nativeSrc": "9235:4:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "9235:4:12"
                                  },
                                  {
                                    "name": "x",
                                    "nativeSrc": "9241:1:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "9241:1:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "9232:2:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "9232:2:12"
                                },
                                "nativeSrc": "9232:11:12",
                                "nodeType": "YulFunctionCall",
                                "src": "9232:11:12"
                              },
                              "nativeSrc": "9229:37:12",
                              "nodeType": "YulIf",
                              "src": "9229:37:12"
                            }
                          ]
                        },
                        "name": "checked_sub_t_uint256",
                        "nativeSrc": "9144:128:12",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nativeSrc": "9175:1:12",
                            "nodeType": "YulTypedName",
                            "src": "9175:1:12",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nativeSrc": "9178:1:12",
                            "nodeType": "YulTypedName",
                            "src": "9178:1:12",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "diff",
                            "nativeSrc": "9184:4:12",
                            "nodeType": "YulTypedName",
                            "src": "9184:4:12",
                            "type": ""
                          }
                        ],
                        "src": "9144:128:12"
                      },
                      {
                        "body": {
                          "nativeSrc": "9451:178:12",
                          "nodeType": "YulBlock",
                          "src": "9451:178:12",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "9468:9:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "9468:9:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "9479:2:12",
                                    "nodeType": "YulLiteral",
                                    "src": "9479:2:12",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "9461:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "9461:6:12"
                                },
                                "nativeSrc": "9461:21:12",
                                "nodeType": "YulFunctionCall",
                                "src": "9461:21:12"
                              },
                              "nativeSrc": "9461:21:12",
                              "nodeType": "YulExpressionStatement",
                              "src": "9461:21:12"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "9502:9:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "9502:9:12"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "9513:2:12",
                                        "nodeType": "YulLiteral",
                                        "src": "9513:2:12",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "9498:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "9498:3:12"
                                    },
                                    "nativeSrc": "9498:18:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "9498:18:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "9518:2:12",
                                    "nodeType": "YulLiteral",
                                    "src": "9518:2:12",
                                    "type": "",
                                    "value": "28"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "9491:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "9491:6:12"
                                },
                                "nativeSrc": "9491:30:12",
                                "nodeType": "YulFunctionCall",
                                "src": "9491:30:12"
                              },
                              "nativeSrc": "9491:30:12",
                              "nodeType": "YulExpressionStatement",
                              "src": "9491:30:12"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "9541:9:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "9541:9:12"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "9552:2:12",
                                        "nodeType": "YulLiteral",
                                        "src": "9552:2:12",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "9537:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "9537:3:12"
                                    },
                                    "nativeSrc": "9537:18:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "9537:18:12"
                                  },
                                  {
                                    "hexValue": "4d65726368616e7420616c726561647920726567697374657265642e",
                                    "kind": "string",
                                    "nativeSrc": "9557:30:12",
                                    "nodeType": "YulLiteral",
                                    "src": "9557:30:12",
                                    "type": "",
                                    "value": "Merchant already registered."
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "9530:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "9530:6:12"
                                },
                                "nativeSrc": "9530:58:12",
                                "nodeType": "YulFunctionCall",
                                "src": "9530:58:12"
                              },
                              "nativeSrc": "9530:58:12",
                              "nodeType": "YulExpressionStatement",
                              "src": "9530:58:12"
                            },
                            {
                              "nativeSrc": "9597:26:12",
                              "nodeType": "YulAssignment",
                              "src": "9597:26:12",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "9609:9:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "9609:9:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "9620:2:12",
                                    "nodeType": "YulLiteral",
                                    "src": "9620:2:12",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "9605:3:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "9605:3:12"
                                },
                                "nativeSrc": "9605:18:12",
                                "nodeType": "YulFunctionCall",
                                "src": "9605:18:12"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "9597:4:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "9597:4:12"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_d2fb8b5c7966e68075ae8a0ce6eef76a742f48c6a121de0fee75e7991bb124cf__to_t_string_memory_ptr__fromStack_reversed",
                        "nativeSrc": "9277:352:12",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "9428:9:12",
                            "nodeType": "YulTypedName",
                            "src": "9428:9:12",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "9442:4:12",
                            "nodeType": "YulTypedName",
                            "src": "9442:4:12",
                            "type": ""
                          }
                        ],
                        "src": "9277:352:12"
                      },
                      {
                        "body": {
                          "nativeSrc": "9690:65:12",
                          "nodeType": "YulBlock",
                          "src": "9690:65:12",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "9707:1:12",
                                    "nodeType": "YulLiteral",
                                    "src": "9707:1:12",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "name": "ptr",
                                    "nativeSrc": "9710:3:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "9710:3:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "9700:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "9700:6:12"
                                },
                                "nativeSrc": "9700:14:12",
                                "nodeType": "YulFunctionCall",
                                "src": "9700:14:12"
                              },
                              "nativeSrc": "9700:14:12",
                              "nodeType": "YulExpressionStatement",
                              "src": "9700:14:12"
                            },
                            {
                              "nativeSrc": "9723:26:12",
                              "nodeType": "YulAssignment",
                              "src": "9723:26:12",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "9741:1:12",
                                    "nodeType": "YulLiteral",
                                    "src": "9741:1:12",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "9744:4:12",
                                    "nodeType": "YulLiteral",
                                    "src": "9744:4:12",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "keccak256",
                                  "nativeSrc": "9731:9:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "9731:9:12"
                                },
                                "nativeSrc": "9731:18:12",
                                "nodeType": "YulFunctionCall",
                                "src": "9731:18:12"
                              },
                              "variableNames": [
                                {
                                  "name": "data",
                                  "nativeSrc": "9723:4:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "9723:4:12"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_dataslot_string_storage",
                        "nativeSrc": "9634:121:12",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "ptr",
                            "nativeSrc": "9673:3:12",
                            "nodeType": "YulTypedName",
                            "src": "9673:3:12",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "data",
                            "nativeSrc": "9681:4:12",
                            "nodeType": "YulTypedName",
                            "src": "9681:4:12",
                            "type": ""
                          }
                        ],
                        "src": "9634:121:12"
                      },
                      {
                        "body": {
                          "nativeSrc": "9841:437:12",
                          "nodeType": "YulBlock",
                          "src": "9841:437:12",
                          "statements": [
                            {
                              "body": {
                                "nativeSrc": "9874:398:12",
                                "nodeType": "YulBlock",
                                "src": "9874:398:12",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "9895:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "9895:1:12",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "name": "array",
                                          "nativeSrc": "9898:5:12",
                                          "nodeType": "YulIdentifier",
                                          "src": "9898:5:12"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nativeSrc": "9888:6:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "9888:6:12"
                                      },
                                      "nativeSrc": "9888:16:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "9888:16:12"
                                    },
                                    "nativeSrc": "9888:16:12",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "9888:16:12"
                                  },
                                  {
                                    "nativeSrc": "9917:30:12",
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "9917:30:12",
                                    "value": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nativeSrc": "9939:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "9939:1:12",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "9942:4:12",
                                          "nodeType": "YulLiteral",
                                          "src": "9942:4:12",
                                          "type": "",
                                          "value": "0x20"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "keccak256",
                                        "nativeSrc": "9929:9:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "9929:9:12"
                                      },
                                      "nativeSrc": "9929:18:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "9929:18:12"
                                    },
                                    "variables": [
                                      {
                                        "name": "data",
                                        "nativeSrc": "9921:4:12",
                                        "nodeType": "YulTypedName",
                                        "src": "9921:4:12",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "nativeSrc": "9960:57:12",
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "9960:57:12",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "data",
                                          "nativeSrc": "9983:4:12",
                                          "nodeType": "YulIdentifier",
                                          "src": "9983:4:12"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nativeSrc": "9993:1:12",
                                              "nodeType": "YulLiteral",
                                              "src": "9993:1:12",
                                              "type": "",
                                              "value": "5"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "name": "startIndex",
                                                  "nativeSrc": "10000:10:12",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "10000:10:12"
                                                },
                                                {
                                                  "kind": "number",
                                                  "nativeSrc": "10012:2:12",
                                                  "nodeType": "YulLiteral",
                                                  "src": "10012:2:12",
                                                  "type": "",
                                                  "value": "31"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nativeSrc": "9996:3:12",
                                                "nodeType": "YulIdentifier",
                                                "src": "9996:3:12"
                                              },
                                              "nativeSrc": "9996:19:12",
                                              "nodeType": "YulFunctionCall",
                                              "src": "9996:19:12"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shr",
                                            "nativeSrc": "9989:3:12",
                                            "nodeType": "YulIdentifier",
                                            "src": "9989:3:12"
                                          },
                                          "nativeSrc": "9989:27:12",
                                          "nodeType": "YulFunctionCall",
                                          "src": "9989:27:12"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "9979:3:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "9979:3:12"
                                      },
                                      "nativeSrc": "9979:38:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "9979:38:12"
                                    },
                                    "variables": [
                                      {
                                        "name": "deleteStart",
                                        "nativeSrc": "9964:11:12",
                                        "nodeType": "YulTypedName",
                                        "src": "9964:11:12",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "body": {
                                      "nativeSrc": "10054:23:12",
                                      "nodeType": "YulBlock",
                                      "src": "10054:23:12",
                                      "statements": [
                                        {
                                          "nativeSrc": "10056:19:12",
                                          "nodeType": "YulAssignment",
                                          "src": "10056:19:12",
                                          "value": {
                                            "name": "data",
                                            "nativeSrc": "10071:4:12",
                                            "nodeType": "YulIdentifier",
                                            "src": "10071:4:12"
                                          },
                                          "variableNames": [
                                            {
                                              "name": "deleteStart",
                                              "nativeSrc": "10056:11:12",
                                              "nodeType": "YulIdentifier",
                                              "src": "10056:11:12"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "name": "startIndex",
                                          "nativeSrc": "10036:10:12",
                                          "nodeType": "YulIdentifier",
                                          "src": "10036:10:12"
                                        },
                                        {
                                          "kind": "number",
                                          "nativeSrc": "10048:4:12",
                                          "nodeType": "YulLiteral",
                                          "src": "10048:4:12",
                                          "type": "",
                                          "value": "0x20"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "lt",
                                        "nativeSrc": "10033:2:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "10033:2:12"
                                      },
                                      "nativeSrc": "10033:20:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "10033:20:12"
                                    },
                                    "nativeSrc": "10030:47:12",
                                    "nodeType": "YulIf",
                                    "src": "10030:47:12"
                                  },
                                  {
                                    "nativeSrc": "10090:41:12",
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "10090:41:12",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "data",
                                          "nativeSrc": "10104:4:12",
                                          "nodeType": "YulIdentifier",
                                          "src": "10104:4:12"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nativeSrc": "10114:1:12",
                                              "nodeType": "YulLiteral",
                                              "src": "10114:1:12",
                                              "type": "",
                                              "value": "5"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "name": "len",
                                                  "nativeSrc": "10121:3:12",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "10121:3:12"
                                                },
                                                {
                                                  "kind": "number",
                                                  "nativeSrc": "10126:2:12",
                                                  "nodeType": "YulLiteral",
                                                  "src": "10126:2:12",
                                                  "type": "",
                                                  "value": "31"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nativeSrc": "10117:3:12",
                                                "nodeType": "YulIdentifier",
                                                "src": "10117:3:12"
                                              },
                                              "nativeSrc": "10117:12:12",
                                              "nodeType": "YulFunctionCall",
                                              "src": "10117:12:12"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shr",
                                            "nativeSrc": "10110:3:12",
                                            "nodeType": "YulIdentifier",
                                            "src": "10110:3:12"
                                          },
                                          "nativeSrc": "10110:20:12",
                                          "nodeType": "YulFunctionCall",
                                          "src": "10110:20:12"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "10100:3:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "10100:3:12"
                                      },
                                      "nativeSrc": "10100:31:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "10100:31:12"
                                    },
                                    "variables": [
                                      {
                                        "name": "_1",
                                        "nativeSrc": "10094:2:12",
                                        "nodeType": "YulTypedName",
                                        "src": "10094:2:12",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "nativeSrc": "10144:24:12",
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "10144:24:12",
                                    "value": {
                                      "name": "deleteStart",
                                      "nativeSrc": "10157:11:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "10157:11:12"
                                    },
                                    "variables": [
                                      {
                                        "name": "start",
                                        "nativeSrc": "10148:5:12",
                                        "nodeType": "YulTypedName",
                                        "src": "10148:5:12",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "body": {
                                      "nativeSrc": "10242:20:12",
                                      "nodeType": "YulBlock",
                                      "src": "10242:20:12",
                                      "statements": [
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "name": "start",
                                                "nativeSrc": "10251:5:12",
                                                "nodeType": "YulIdentifier",
                                                "src": "10251:5:12"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "10258:1:12",
                                                "nodeType": "YulLiteral",
                                                "src": "10258:1:12",
                                                "type": "",
                                                "value": "0"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sstore",
                                              "nativeSrc": "10244:6:12",
                                              "nodeType": "YulIdentifier",
                                              "src": "10244:6:12"
                                            },
                                            "nativeSrc": "10244:16:12",
                                            "nodeType": "YulFunctionCall",
                                            "src": "10244:16:12"
                                          },
                                          "nativeSrc": "10244:16:12",
                                          "nodeType": "YulExpressionStatement",
                                          "src": "10244:16:12"
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "name": "start",
                                          "nativeSrc": "10192:5:12",
                                          "nodeType": "YulIdentifier",
                                          "src": "10192:5:12"
                                        },
                                        {
                                          "name": "_1",
                                          "nativeSrc": "10199:2:12",
                                          "nodeType": "YulIdentifier",
                                          "src": "10199:2:12"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "lt",
                                        "nativeSrc": "10189:2:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "10189:2:12"
                                      },
                                      "nativeSrc": "10189:13:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "10189:13:12"
                                    },
                                    "nativeSrc": "10181:81:12",
                                    "nodeType": "YulForLoop",
                                    "post": {
                                      "nativeSrc": "10203:26:12",
                                      "nodeType": "YulBlock",
                                      "src": "10203:26:12",
                                      "statements": [
                                        {
                                          "nativeSrc": "10205:22:12",
                                          "nodeType": "YulAssignment",
                                          "src": "10205:22:12",
                                          "value": {
                                            "arguments": [
                                              {
                                                "name": "start",
                                                "nativeSrc": "10218:5:12",
                                                "nodeType": "YulIdentifier",
                                                "src": "10218:5:12"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "10225:1:12",
                                                "nodeType": "YulLiteral",
                                                "src": "10225:1:12",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nativeSrc": "10214:3:12",
                                              "nodeType": "YulIdentifier",
                                              "src": "10214:3:12"
                                            },
                                            "nativeSrc": "10214:13:12",
                                            "nodeType": "YulFunctionCall",
                                            "src": "10214:13:12"
                                          },
                                          "variableNames": [
                                            {
                                              "name": "start",
                                              "nativeSrc": "10205:5:12",
                                              "nodeType": "YulIdentifier",
                                              "src": "10205:5:12"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    "pre": {
                                      "nativeSrc": "10185:3:12",
                                      "nodeType": "YulBlock",
                                      "src": "10185:3:12",
                                      "statements": []
                                    },
                                    "src": "10181:81:12"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "len",
                                    "nativeSrc": "9857:3:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "9857:3:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "9862:2:12",
                                    "nodeType": "YulLiteral",
                                    "src": "9862:2:12",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "9854:2:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "9854:2:12"
                                },
                                "nativeSrc": "9854:11:12",
                                "nodeType": "YulFunctionCall",
                                "src": "9854:11:12"
                              },
                              "nativeSrc": "9851:421:12",
                              "nodeType": "YulIf",
                              "src": "9851:421:12"
                            }
                          ]
                        },
                        "name": "clean_up_bytearray_end_slots_string_storage",
                        "nativeSrc": "9760:518:12",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "array",
                            "nativeSrc": "9813:5:12",
                            "nodeType": "YulTypedName",
                            "src": "9813:5:12",
                            "type": ""
                          },
                          {
                            "name": "len",
                            "nativeSrc": "9820:3:12",
                            "nodeType": "YulTypedName",
                            "src": "9820:3:12",
                            "type": ""
                          },
                          {
                            "name": "startIndex",
                            "nativeSrc": "9825:10:12",
                            "nodeType": "YulTypedName",
                            "src": "9825:10:12",
                            "type": ""
                          }
                        ],
                        "src": "9760:518:12"
                      },
                      {
                        "body": {
                          "nativeSrc": "10368:81:12",
                          "nodeType": "YulBlock",
                          "src": "10368:81:12",
                          "statements": [
                            {
                              "nativeSrc": "10378:65:12",
                              "nodeType": "YulAssignment",
                              "src": "10378:65:12",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "data",
                                        "nativeSrc": "10393:4:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "10393:4:12"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "10411:1:12",
                                                    "nodeType": "YulLiteral",
                                                    "src": "10411:1:12",
                                                    "type": "",
                                                    "value": "3"
                                                  },
                                                  {
                                                    "name": "len",
                                                    "nativeSrc": "10414:3:12",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "10414:3:12"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nativeSrc": "10407:3:12",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "10407:3:12"
                                                },
                                                "nativeSrc": "10407:11:12",
                                                "nodeType": "YulFunctionCall",
                                                "src": "10407:11:12"
                                              },
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "10424:1:12",
                                                    "nodeType": "YulLiteral",
                                                    "src": "10424:1:12",
                                                    "type": "",
                                                    "value": "0"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "not",
                                                  "nativeSrc": "10420:3:12",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "10420:3:12"
                                                },
                                                "nativeSrc": "10420:6:12",
                                                "nodeType": "YulFunctionCall",
                                                "src": "10420:6:12"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shr",
                                              "nativeSrc": "10403:3:12",
                                              "nodeType": "YulIdentifier",
                                              "src": "10403:3:12"
                                            },
                                            "nativeSrc": "10403:24:12",
                                            "nodeType": "YulFunctionCall",
                                            "src": "10403:24:12"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "not",
                                          "nativeSrc": "10399:3:12",
                                          "nodeType": "YulIdentifier",
                                          "src": "10399:3:12"
                                        },
                                        "nativeSrc": "10399:29:12",
                                        "nodeType": "YulFunctionCall",
                                        "src": "10399:29:12"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "10389:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "10389:3:12"
                                    },
                                    "nativeSrc": "10389:40:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "10389:40:12"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nativeSrc": "10435:1:12",
                                        "nodeType": "YulLiteral",
                                        "src": "10435:1:12",
                                        "type": "",
                                        "value": "1"
                                      },
                                      {
                                        "name": "len",
                                        "nativeSrc": "10438:3:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "10438:3:12"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nativeSrc": "10431:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "10431:3:12"
                                    },
                                    "nativeSrc": "10431:11:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "10431:11:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "or",
                                  "nativeSrc": "10386:2:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "10386:2:12"
                                },
                                "nativeSrc": "10386:57:12",
                                "nodeType": "YulFunctionCall",
                                "src": "10386:57:12"
                              },
                              "variableNames": [
                                {
                                  "name": "used",
                                  "nativeSrc": "10378:4:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "10378:4:12"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "extract_used_part_and_set_length_of_short_byte_array",
                        "nativeSrc": "10283:166:12",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "data",
                            "nativeSrc": "10345:4:12",
                            "nodeType": "YulTypedName",
                            "src": "10345:4:12",
                            "type": ""
                          },
                          {
                            "name": "len",
                            "nativeSrc": "10351:3:12",
                            "nodeType": "YulTypedName",
                            "src": "10351:3:12",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "used",
                            "nativeSrc": "10359:4:12",
                            "nodeType": "YulTypedName",
                            "src": "10359:4:12",
                            "type": ""
                          }
                        ],
                        "src": "10283:166:12"
                      },
                      {
                        "body": {
                          "nativeSrc": "10550:1203:12",
                          "nodeType": "YulBlock",
                          "src": "10550:1203:12",
                          "statements": [
                            {
                              "nativeSrc": "10560:24:12",
                              "nodeType": "YulVariableDeclaration",
                              "src": "10560:24:12",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "src",
                                    "nativeSrc": "10580:3:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "10580:3:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nativeSrc": "10574:5:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "10574:5:12"
                                },
                                "nativeSrc": "10574:10:12",
                                "nodeType": "YulFunctionCall",
                                "src": "10574:10:12"
                              },
                              "variables": [
                                {
                                  "name": "newLen",
                                  "nativeSrc": "10564:6:12",
                                  "nodeType": "YulTypedName",
                                  "src": "10564:6:12",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nativeSrc": "10627:22:12",
                                "nodeType": "YulBlock",
                                "src": "10627:22:12",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nativeSrc": "10629:16:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "10629:16:12"
                                      },
                                      "nativeSrc": "10629:18:12",
                                      "nodeType": "YulFunctionCall",
                                      "src": "10629:18:12"
                                    },
                                    "nativeSrc": "10629:18:12",
                                    "nodeType": "YulExpressionStatement",
                                    "src": "10629:18:12"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "newLen",
                                    "nativeSrc": "10599:6:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "10599:6:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "10607:18:12",
                                    "nodeType": "YulLiteral",
                                    "src": "10607:18:12",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "10596:2:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "10596:2:12"
                                },
                                "nativeSrc": "10596:30:12",
                                "nodeType": "YulFunctionCall",
                                "src": "10596:30:12"
                              },
                              "nativeSrc": "10593:56:12",
                              "nodeType": "YulIf",
                              "src": "10593:56:12"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "slot",
                                    "nativeSrc": "10702:4:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "10702:4:12"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "slot",
                                            "nativeSrc": "10740:4:12",
                                            "nodeType": "YulIdentifier",
                                            "src": "10740:4:12"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sload",
                                          "nativeSrc": "10734:5:12",
                                          "nodeType": "YulIdentifier",
                                          "src": "10734:5:12"
                                        },
                                        "nativeSrc": "10734:11:12",
                                        "nodeType": "YulFunctionCall",
                                        "src": "10734:11:12"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "extract_byte_array_length",
                                      "nativeSrc": "10708:25:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "10708:25:12"
                                    },
                                    "nativeSrc": "10708:38:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "10708:38:12"
                                  },
                                  {
                                    "name": "newLen",
                                    "nativeSrc": "10748:6:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "10748:6:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "clean_up_bytearray_end_slots_string_storage",
                                  "nativeSrc": "10658:43:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "10658:43:12"
                                },
                                "nativeSrc": "10658:97:12",
                                "nodeType": "YulFunctionCall",
                                "src": "10658:97:12"
                              },
                              "nativeSrc": "10658:97:12",
                              "nodeType": "YulExpressionStatement",
                              "src": "10658:97:12"
                            },
                            {
                              "nativeSrc": "10764:18:12",
                              "nodeType": "YulVariableDeclaration",
                              "src": "10764:18:12",
                              "value": {
                                "kind": "number",
                                "nativeSrc": "10781:1:12",
                                "nodeType": "YulLiteral",
                                "src": "10781:1:12",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "srcOffset",
                                  "nativeSrc": "10768:9:12",
                                  "nodeType": "YulTypedName",
                                  "src": "10768:9:12",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nativeSrc": "10791:17:12",
                              "nodeType": "YulAssignment",
                              "src": "10791:17:12",
                              "value": {
                                "kind": "number",
                                "nativeSrc": "10804:4:12",
                                "nodeType": "YulLiteral",
                                "src": "10804:4:12",
                                "type": "",
                                "value": "0x20"
                              },
                              "variableNames": [
                                {
                                  "name": "srcOffset",
                                  "nativeSrc": "10791:9:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "10791:9:12"
                                }
                              ]
                            },
                            {
                              "cases": [
                                {
                                  "body": {
                                    "nativeSrc": "10854:642:12",
                                    "nodeType": "YulBlock",
                                    "src": "10854:642:12",
                                    "statements": [
                                      {
                                        "nativeSrc": "10868:35:12",
                                        "nodeType": "YulVariableDeclaration",
                                        "src": "10868:35:12",
                                        "value": {
                                          "arguments": [
                                            {
                                              "name": "newLen",
                                              "nativeSrc": "10887:6:12",
                                              "nodeType": "YulIdentifier",
                                              "src": "10887:6:12"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "kind": "number",
                                                  "nativeSrc": "10899:2:12",
                                                  "nodeType": "YulLiteral",
                                                  "src": "10899:2:12",
                                                  "type": "",
                                                  "value": "31"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "not",
                                                "nativeSrc": "10895:3:12",
                                                "nodeType": "YulIdentifier",
                                                "src": "10895:3:12"
                                              },
                                              "nativeSrc": "10895:7:12",
                                              "nodeType": "YulFunctionCall",
                                              "src": "10895:7:12"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "and",
                                            "nativeSrc": "10883:3:12",
                                            "nodeType": "YulIdentifier",
                                            "src": "10883:3:12"
                                          },
                                          "nativeSrc": "10883:20:12",
                                          "nodeType": "YulFunctionCall",
                                          "src": "10883:20:12"
                                        },
                                        "variables": [
                                          {
                                            "name": "loopEnd",
                                            "nativeSrc": "10872:7:12",
                                            "nodeType": "YulTypedName",
                                            "src": "10872:7:12",
                                            "type": ""
                                          }
                                        ]
                                      },
                                      {
                                        "nativeSrc": "10916:49:12",
                                        "nodeType": "YulVariableDeclaration",
                                        "src": "10916:49:12",
                                        "value": {
                                          "arguments": [
                                            {
                                              "name": "slot",
                                              "nativeSrc": "10960:4:12",
                                              "nodeType": "YulIdentifier",
                                              "src": "10960:4:12"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "array_dataslot_string_storage",
                                            "nativeSrc": "10930:29:12",
                                            "nodeType": "YulIdentifier",
                                            "src": "10930:29:12"
                                          },
                                          "nativeSrc": "10930:35:12",
                                          "nodeType": "YulFunctionCall",
                                          "src": "10930:35:12"
                                        },
                                        "variables": [
                                          {
                                            "name": "dstPtr",
                                            "nativeSrc": "10920:6:12",
                                            "nodeType": "YulTypedName",
                                            "src": "10920:6:12",
                                            "type": ""
                                          }
                                        ]
                                      },
                                      {
                                        "nativeSrc": "10978:10:12",
                                        "nodeType": "YulVariableDeclaration",
                                        "src": "10978:10:12",
                                        "value": {
                                          "kind": "number",
                                          "nativeSrc": "10987:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "10987:1:12",
                                          "type": "",
                                          "value": "0"
                                        },
                                        "variables": [
                                          {
                                            "name": "i",
                                            "nativeSrc": "10982:1:12",
                                            "nodeType": "YulTypedName",
                                            "src": "10982:1:12",
                                            "type": ""
                                          }
                                        ]
                                      },
                                      {
                                        "body": {
                                          "nativeSrc": "11058:165:12",
                                          "nodeType": "YulBlock",
                                          "src": "11058:165:12",
                                          "statements": [
                                            {
                                              "expression": {
                                                "arguments": [
                                                  {
                                                    "name": "dstPtr",
                                                    "nativeSrc": "11083:6:12",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "11083:6:12"
                                                  },
                                                  {
                                                    "arguments": [
                                                      {
                                                        "arguments": [
                                                          {
                                                            "name": "src",
                                                            "nativeSrc": "11101:3:12",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "11101:3:12"
                                                          },
                                                          {
                                                            "name": "srcOffset",
                                                            "nativeSrc": "11106:9:12",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "11106:9:12"
                                                          }
                                                        ],
                                                        "functionName": {
                                                          "name": "add",
                                                          "nativeSrc": "11097:3:12",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "11097:3:12"
                                                        },
                                                        "nativeSrc": "11097:19:12",
                                                        "nodeType": "YulFunctionCall",
                                                        "src": "11097:19:12"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "mload",
                                                      "nativeSrc": "11091:5:12",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "11091:5:12"
                                                    },
                                                    "nativeSrc": "11091:26:12",
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "11091:26:12"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "sstore",
                                                  "nativeSrc": "11076:6:12",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "11076:6:12"
                                                },
                                                "nativeSrc": "11076:42:12",
                                                "nodeType": "YulFunctionCall",
                                                "src": "11076:42:12"
                                              },
                                              "nativeSrc": "11076:42:12",
                                              "nodeType": "YulExpressionStatement",
                                              "src": "11076:42:12"
                                            },
                                            {
                                              "nativeSrc": "11135:24:12",
                                              "nodeType": "YulAssignment",
                                              "src": "11135:24:12",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "name": "dstPtr",
                                                    "nativeSrc": "11149:6:12",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "11149:6:12"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "11157:1:12",
                                                    "nodeType": "YulLiteral",
                                                    "src": "11157:1:12",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nativeSrc": "11145:3:12",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "11145:3:12"
                                                },
                                                "nativeSrc": "11145:14:12",
                                                "nodeType": "YulFunctionCall",
                                                "src": "11145:14:12"
                                              },
                                              "variableNames": [
                                                {
                                                  "name": "dstPtr",
                                                  "nativeSrc": "11135:6:12",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "11135:6:12"
                                                }
                                              ]
                                            },
                                            {
                                              "nativeSrc": "11176:33:12",
                                              "nodeType": "YulAssignment",
                                              "src": "11176:33:12",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "name": "srcOffset",
                                                    "nativeSrc": "11193:9:12",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "11193:9:12"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "11204:4:12",
                                                    "nodeType": "YulLiteral",
                                                    "src": "11204:4:12",
                                                    "type": "",
                                                    "value": "0x20"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nativeSrc": "11189:3:12",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "11189:3:12"
                                                },
                                                "nativeSrc": "11189:20:12",
                                                "nodeType": "YulFunctionCall",
                                                "src": "11189:20:12"
                                              },
                                              "variableNames": [
                                                {
                                                  "name": "srcOffset",
                                                  "nativeSrc": "11176:9:12",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "11176:9:12"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        "condition": {
                                          "arguments": [
                                            {
                                              "name": "i",
                                              "nativeSrc": "11012:1:12",
                                              "nodeType": "YulIdentifier",
                                              "src": "11012:1:12"
                                            },
                                            {
                                              "name": "loopEnd",
                                              "nativeSrc": "11015:7:12",
                                              "nodeType": "YulIdentifier",
                                              "src": "11015:7:12"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "lt",
                                            "nativeSrc": "11009:2:12",
                                            "nodeType": "YulIdentifier",
                                            "src": "11009:2:12"
                                          },
                                          "nativeSrc": "11009:14:12",
                                          "nodeType": "YulFunctionCall",
                                          "src": "11009:14:12"
                                        },
                                        "nativeSrc": "11001:222:12",
                                        "nodeType": "YulForLoop",
                                        "post": {
                                          "nativeSrc": "11024:21:12",
                                          "nodeType": "YulBlock",
                                          "src": "11024:21:12",
                                          "statements": [
                                            {
                                              "nativeSrc": "11026:17:12",
                                              "nodeType": "YulAssignment",
                                              "src": "11026:17:12",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "name": "i",
                                                    "nativeSrc": "11035:1:12",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "11035:1:12"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nativeSrc": "11038:4:12",
                                                    "nodeType": "YulLiteral",
                                                    "src": "11038:4:12",
                                                    "type": "",
                                                    "value": "0x20"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nativeSrc": "11031:3:12",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "11031:3:12"
                                                },
                                                "nativeSrc": "11031:12:12",
                                                "nodeType": "YulFunctionCall",
                                                "src": "11031:12:12"
                                              },
                                              "variableNames": [
                                                {
                                                  "name": "i",
                                                  "nativeSrc": "11026:1:12",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "11026:1:12"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        "pre": {
                                          "nativeSrc": "11005:3:12",
                                          "nodeType": "YulBlock",
                                          "src": "11005:3:12",
                                          "statements": []
                                        },
                                        "src": "11001:222:12"
                                      },
                                      {
                                        "body": {
                                          "nativeSrc": "11271:166:12",
                                          "nodeType": "YulBlock",
                                          "src": "11271:166:12",
                                          "statements": [
                                            {
                                              "nativeSrc": "11289:43:12",
                                              "nodeType": "YulVariableDeclaration",
                                              "src": "11289:43:12",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "src",
                                                        "nativeSrc": "11316:3:12",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "11316:3:12"
                                                      },
                                                      {
                                                        "name": "srcOffset",
                                                        "nativeSrc": "11321:9:12",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "11321:9:12"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "add",
                                                      "nativeSrc": "11312:3:12",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "11312:3:12"
                                                    },
                                                    "nativeSrc": "11312:19:12",
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "11312:19:12"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "mload",
                                                  "nativeSrc": "11306:5:12",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "11306:5:12"
                                                },
                                                "nativeSrc": "11306:26:12",
                                                "nodeType": "YulFunctionCall",
                                                "src": "11306:26:12"
                                              },
                                              "variables": [
                                                {
                                                  "name": "lastValue",
                                                  "nativeSrc": "11293:9:12",
                                                  "nodeType": "YulTypedName",
                                                  "src": "11293:9:12",
                                                  "type": ""
                                                }
                                              ]
                                            },
                                            {
                                              "expression": {
                                                "arguments": [
                                                  {
                                                    "name": "dstPtr",
                                                    "nativeSrc": "11356:6:12",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "11356:6:12"
                                                  },
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "lastValue",
                                                        "nativeSrc": "11368:9:12",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "11368:9:12"
                                                      },
                                                      {
                                                        "arguments": [
                                                          {
                                                            "arguments": [
                                                              {
                                                                "arguments": [
                                                                  {
                                                                    "arguments": [
                                                                      {
                                                                        "kind": "number",
                                                                        "nativeSrc": "11395:1:12",
                                                                        "nodeType": "YulLiteral",
                                                                        "src": "11395:1:12",
                                                                        "type": "",
                                                                        "value": "3"
                                                                      },
                                                                      {
                                                                        "name": "newLen",
                                                                        "nativeSrc": "11398:6:12",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "11398:6:12"
                                                                      }
                                                                    ],
                                                                    "functionName": {
                                                                      "name": "shl",
                                                                      "nativeSrc": "11391:3:12",
                                                                      "nodeType": "YulIdentifier",
                                                                      "src": "11391:3:12"
                                                                    },
                                                                    "nativeSrc": "11391:14:12",
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "11391:14:12"
                                                                  },
                                                                  {
                                                                    "kind": "number",
                                                                    "nativeSrc": "11407:3:12",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "11407:3:12",
                                                                    "type": "",
                                                                    "value": "248"
                                                                  }
                                                                ],
                                                                "functionName": {
                                                                  "name": "and",
                                                                  "nativeSrc": "11387:3:12",
                                                                  "nodeType": "YulIdentifier",
                                                                  "src": "11387:3:12"
                                                                },
                                                                "nativeSrc": "11387:24:12",
                                                                "nodeType": "YulFunctionCall",
                                                                "src": "11387:24:12"
                                                              },
                                                              {
                                                                "arguments": [
                                                                  {
                                                                    "kind": "number",
                                                                    "nativeSrc": "11417:1:12",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "11417:1:12",
                                                                    "type": "",
                                                                    "value": "0"
                                                                  }
                                                                ],
                                                                "functionName": {
                                                                  "name": "not",
                                                                  "nativeSrc": "11413:3:12",
                                                                  "nodeType": "YulIdentifier",
                                                                  "src": "11413:3:12"
                                                                },
                                                                "nativeSrc": "11413:6:12",
                                                                "nodeType": "YulFunctionCall",
                                                                "src": "11413:6:12"
                                                              }
                                                            ],
                                                            "functionName": {
                                                              "name": "shr",
                                                              "nativeSrc": "11383:3:12",
                                                              "nodeType": "YulIdentifier",
                                                              "src": "11383:3:12"
                                                            },
                                                            "nativeSrc": "11383:37:12",
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "11383:37:12"
                                                          }
                                                        ],
                                                        "functionName": {
                                                          "name": "not",
                                                          "nativeSrc": "11379:3:12",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "11379:3:12"
                                                        },
                                                        "nativeSrc": "11379:42:12",
                                                        "nodeType": "YulFunctionCall",
                                                        "src": "11379:42:12"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "and",
                                                      "nativeSrc": "11364:3:12",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "11364:3:12"
                                                    },
                                                    "nativeSrc": "11364:58:12",
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "11364:58:12"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "sstore",
                                                  "nativeSrc": "11349:6:12",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "11349:6:12"
                                                },
                                                "nativeSrc": "11349:74:12",
                                                "nodeType": "YulFunctionCall",
                                                "src": "11349:74:12"
                                              },
                                              "nativeSrc": "11349:74:12",
                                              "nodeType": "YulExpressionStatement",
                                              "src": "11349:74:12"
                                            }
                                          ]
                                        },
                                        "condition": {
                                          "arguments": [
                                            {
                                              "name": "loopEnd",
                                              "nativeSrc": "11242:7:12",
                                              "nodeType": "YulIdentifier",
                                              "src": "11242:7:12"
                                            },
                                            {
                                              "name": "newLen",
                                              "nativeSrc": "11251:6:12",
                                              "nodeType": "YulIdentifier",
                                              "src": "11251:6:12"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "lt",
                                            "nativeSrc": "11239:2:12",
                                            "nodeType": "YulIdentifier",
                                            "src": "11239:2:12"
                                          },
                                          "nativeSrc": "11239:19:12",
                                          "nodeType": "YulFunctionCall",
                                          "src": "11239:19:12"
                                        },
                                        "nativeSrc": "11236:201:12",
                                        "nodeType": "YulIf",
                                        "src": "11236:201:12"
                                      },
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "name": "slot",
                                              "nativeSrc": "11457:4:12",
                                              "nodeType": "YulIdentifier",
                                              "src": "11457:4:12"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "arguments": [
                                                    {
                                                      "kind": "number",
                                                      "nativeSrc": "11471:1:12",
                                                      "nodeType": "YulLiteral",
                                                      "src": "11471:1:12",
                                                      "type": "",
                                                      "value": "1"
                                                    },
                                                    {
                                                      "name": "newLen",
                                                      "nativeSrc": "11474:6:12",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "11474:6:12"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "shl",
                                                    "nativeSrc": "11467:3:12",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "11467:3:12"
                                                  },
                                                  "nativeSrc": "11467:14:12",
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "11467:14:12"
                                                },
                                                {
                                                  "kind": "number",
                                                  "nativeSrc": "11483:1:12",
                                                  "nodeType": "YulLiteral",
                                                  "src": "11483:1:12",
                                                  "type": "",
                                                  "value": "1"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nativeSrc": "11463:3:12",
                                                "nodeType": "YulIdentifier",
                                                "src": "11463:3:12"
                                              },
                                              "nativeSrc": "11463:22:12",
                                              "nodeType": "YulFunctionCall",
                                              "src": "11463:22:12"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "sstore",
                                            "nativeSrc": "11450:6:12",
                                            "nodeType": "YulIdentifier",
                                            "src": "11450:6:12"
                                          },
                                          "nativeSrc": "11450:36:12",
                                          "nodeType": "YulFunctionCall",
                                          "src": "11450:36:12"
                                        },
                                        "nativeSrc": "11450:36:12",
                                        "nodeType": "YulExpressionStatement",
                                        "src": "11450:36:12"
                                      }
                                    ]
                                  },
                                  "nativeSrc": "10847:649:12",
                                  "nodeType": "YulCase",
                                  "src": "10847:649:12",
                                  "value": {
                                    "kind": "number",
                                    "nativeSrc": "10852:1:12",
                                    "nodeType": "YulLiteral",
                                    "src": "10852:1:12",
                                    "type": "",
                                    "value": "1"
                                  }
                                },
                                {
                                  "body": {
                                    "nativeSrc": "11513:234:12",
                                    "nodeType": "YulBlock",
                                    "src": "11513:234:12",
                                    "statements": [
                                      {
                                        "nativeSrc": "11527:14:12",
                                        "nodeType": "YulVariableDeclaration",
                                        "src": "11527:14:12",
                                        "value": {
                                          "kind": "number",
                                          "nativeSrc": "11540:1:12",
                                          "nodeType": "YulLiteral",
                                          "src": "11540:1:12",
                                          "type": "",
                                          "value": "0"
                                        },
                                        "variables": [
                                          {
                                            "name": "value",
                                            "nativeSrc": "11531:5:12",
                                            "nodeType": "YulTypedName",
                                            "src": "11531:5:12",
                                            "type": ""
                                          }
                                        ]
                                      },
                                      {
                                        "body": {
                                          "nativeSrc": "11576:67:12",
                                          "nodeType": "YulBlock",
                                          "src": "11576:67:12",
                                          "statements": [
                                            {
                                              "nativeSrc": "11594:35:12",
                                              "nodeType": "YulAssignment",
                                              "src": "11594:35:12",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "src",
                                                        "nativeSrc": "11613:3:12",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "11613:3:12"
                                                      },
                                                      {
                                                        "name": "srcOffset",
                                                        "nativeSrc": "11618:9:12",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "11618:9:12"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "add",
                                                      "nativeSrc": "11609:3:12",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "11609:3:12"
                                                    },
                                                    "nativeSrc": "11609:19:12",
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "11609:19:12"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "mload",
                                                  "nativeSrc": "11603:5:12",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "11603:5:12"
                                                },
                                                "nativeSrc": "11603:26:12",
                                                "nodeType": "YulFunctionCall",
                                                "src": "11603:26:12"
                                              },
                                              "variableNames": [
                                                {
                                                  "name": "value",
                                                  "nativeSrc": "11594:5:12",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "11594:5:12"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        "condition": {
                                          "name": "newLen",
                                          "nativeSrc": "11557:6:12",
                                          "nodeType": "YulIdentifier",
                                          "src": "11557:6:12"
                                        },
                                        "nativeSrc": "11554:89:12",
                                        "nodeType": "YulIf",
                                        "src": "11554:89:12"
                                      },
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "name": "slot",
                                              "nativeSrc": "11663:4:12",
                                              "nodeType": "YulIdentifier",
                                              "src": "11663:4:12"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "name": "value",
                                                  "nativeSrc": "11722:5:12",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "11722:5:12"
                                                },
                                                {
                                                  "name": "newLen",
                                                  "nativeSrc": "11729:6:12",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "11729:6:12"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "extract_used_part_and_set_length_of_short_byte_array",
                                                "nativeSrc": "11669:52:12",
                                                "nodeType": "YulIdentifier",
                                                "src": "11669:52:12"
                                              },
                                              "nativeSrc": "11669:67:12",
                                              "nodeType": "YulFunctionCall",
                                              "src": "11669:67:12"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "sstore",
                                            "nativeSrc": "11656:6:12",
                                            "nodeType": "YulIdentifier",
                                            "src": "11656:6:12"
                                          },
                                          "nativeSrc": "11656:81:12",
                                          "nodeType": "YulFunctionCall",
                                          "src": "11656:81:12"
                                        },
                                        "nativeSrc": "11656:81:12",
                                        "nodeType": "YulExpressionStatement",
                                        "src": "11656:81:12"
                                      }
                                    ]
                                  },
                                  "nativeSrc": "11505:242:12",
                                  "nodeType": "YulCase",
                                  "src": "11505:242:12",
                                  "value": "default"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "newLen",
                                    "nativeSrc": "10827:6:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "10827:6:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "10835:2:12",
                                    "nodeType": "YulLiteral",
                                    "src": "10835:2:12",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nativeSrc": "10824:2:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "10824:2:12"
                                },
                                "nativeSrc": "10824:14:12",
                                "nodeType": "YulFunctionCall",
                                "src": "10824:14:12"
                              },
                              "nativeSrc": "10817:930:12",
                              "nodeType": "YulSwitch",
                              "src": "10817:930:12"
                            }
                          ]
                        },
                        "name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
                        "nativeSrc": "10454:1299:12",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "slot",
                            "nativeSrc": "10535:4:12",
                            "nodeType": "YulTypedName",
                            "src": "10535:4:12",
                            "type": ""
                          },
                          {
                            "name": "src",
                            "nativeSrc": "10541:3:12",
                            "nodeType": "YulTypedName",
                            "src": "10541:3:12",
                            "type": ""
                          }
                        ],
                        "src": "10454:1299:12"
                      },
                      {
                        "body": {
                          "nativeSrc": "11915:188:12",
                          "nodeType": "YulBlock",
                          "src": "11915:188:12",
                          "statements": [
                            {
                              "nativeSrc": "11925:26:12",
                              "nodeType": "YulAssignment",
                              "src": "11925:26:12",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "11937:9:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "11937:9:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "11948:2:12",
                                    "nodeType": "YulLiteral",
                                    "src": "11948:2:12",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "11933:3:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "11933:3:12"
                                },
                                "nativeSrc": "11933:18:12",
                                "nodeType": "YulFunctionCall",
                                "src": "11933:18:12"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "11925:4:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "11925:4:12"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "11967:9:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "11967:9:12"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nativeSrc": "11982:6:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "11982:6:12"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nativeSrc": "11998:3:12",
                                                "nodeType": "YulLiteral",
                                                "src": "11998:3:12",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "12003:1:12",
                                                "nodeType": "YulLiteral",
                                                "src": "12003:1:12",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nativeSrc": "11994:3:12",
                                              "nodeType": "YulIdentifier",
                                              "src": "11994:3:12"
                                            },
                                            "nativeSrc": "11994:11:12",
                                            "nodeType": "YulFunctionCall",
                                            "src": "11994:11:12"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "12007:1:12",
                                            "nodeType": "YulLiteral",
                                            "src": "12007:1:12",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nativeSrc": "11990:3:12",
                                          "nodeType": "YulIdentifier",
                                          "src": "11990:3:12"
                                        },
                                        "nativeSrc": "11990:19:12",
                                        "nodeType": "YulFunctionCall",
                                        "src": "11990:19:12"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "11978:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "11978:3:12"
                                    },
                                    "nativeSrc": "11978:32:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "11978:32:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "11960:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "11960:6:12"
                                },
                                "nativeSrc": "11960:51:12",
                                "nodeType": "YulFunctionCall",
                                "src": "11960:51:12"
                              },
                              "nativeSrc": "11960:51:12",
                              "nodeType": "YulExpressionStatement",
                              "src": "11960:51:12"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "12031:9:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "12031:9:12"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "12042:2:12",
                                        "nodeType": "YulLiteral",
                                        "src": "12042:2:12",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "12027:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "12027:3:12"
                                    },
                                    "nativeSrc": "12027:18:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "12027:18:12"
                                  },
                                  {
                                    "name": "value1",
                                    "nativeSrc": "12047:6:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "12047:6:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "12020:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "12020:6:12"
                                },
                                "nativeSrc": "12020:34:12",
                                "nodeType": "YulFunctionCall",
                                "src": "12020:34:12"
                              },
                              "nativeSrc": "12020:34:12",
                              "nodeType": "YulExpressionStatement",
                              "src": "12020:34:12"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "12074:9:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "12074:9:12"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "12085:2:12",
                                        "nodeType": "YulLiteral",
                                        "src": "12085:2:12",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "12070:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "12070:3:12"
                                    },
                                    "nativeSrc": "12070:18:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "12070:18:12"
                                  },
                                  {
                                    "name": "value2",
                                    "nativeSrc": "12090:6:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "12090:6:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "12063:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "12063:6:12"
                                },
                                "nativeSrc": "12063:34:12",
                                "nodeType": "YulFunctionCall",
                                "src": "12063:34:12"
                              },
                              "nativeSrc": "12063:34:12",
                              "nodeType": "YulExpressionStatement",
                              "src": "12063:34:12"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
                        "nativeSrc": "11758:345:12",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "11868:9:12",
                            "nodeType": "YulTypedName",
                            "src": "11868:9:12",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nativeSrc": "11879:6:12",
                            "nodeType": "YulTypedName",
                            "src": "11879:6:12",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nativeSrc": "11887:6:12",
                            "nodeType": "YulTypedName",
                            "src": "11887:6:12",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "11895:6:12",
                            "nodeType": "YulTypedName",
                            "src": "11895:6:12",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "11906:4:12",
                            "nodeType": "YulTypedName",
                            "src": "11906:4:12",
                            "type": ""
                          }
                        ],
                        "src": "11758:345:12"
                      },
                      {
                        "body": {
                          "nativeSrc": "12209:102:12",
                          "nodeType": "YulBlock",
                          "src": "12209:102:12",
                          "statements": [
                            {
                              "nativeSrc": "12219:26:12",
                              "nodeType": "YulAssignment",
                              "src": "12219:26:12",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "12231:9:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "12231:9:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "12242:2:12",
                                    "nodeType": "YulLiteral",
                                    "src": "12242:2:12",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "12227:3:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "12227:3:12"
                                },
                                "nativeSrc": "12227:18:12",
                                "nodeType": "YulFunctionCall",
                                "src": "12227:18:12"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "12219:4:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "12219:4:12"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "12261:9:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "12261:9:12"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nativeSrc": "12276:6:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "12276:6:12"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nativeSrc": "12292:3:12",
                                                "nodeType": "YulLiteral",
                                                "src": "12292:3:12",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "12297:1:12",
                                                "nodeType": "YulLiteral",
                                                "src": "12297:1:12",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nativeSrc": "12288:3:12",
                                              "nodeType": "YulIdentifier",
                                              "src": "12288:3:12"
                                            },
                                            "nativeSrc": "12288:11:12",
                                            "nodeType": "YulFunctionCall",
                                            "src": "12288:11:12"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "12301:1:12",
                                            "nodeType": "YulLiteral",
                                            "src": "12301:1:12",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nativeSrc": "12284:3:12",
                                          "nodeType": "YulIdentifier",
                                          "src": "12284:3:12"
                                        },
                                        "nativeSrc": "12284:19:12",
                                        "nodeType": "YulFunctionCall",
                                        "src": "12284:19:12"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "12272:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "12272:3:12"
                                    },
                                    "nativeSrc": "12272:32:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "12272:32:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "12254:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "12254:6:12"
                                },
                                "nativeSrc": "12254:51:12",
                                "nodeType": "YulFunctionCall",
                                "src": "12254:51:12"
                              },
                              "nativeSrc": "12254:51:12",
                              "nodeType": "YulExpressionStatement",
                              "src": "12254:51:12"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nativeSrc": "12108:203:12",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "12178:9:12",
                            "nodeType": "YulTypedName",
                            "src": "12178:9:12",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "12189:6:12",
                            "nodeType": "YulTypedName",
                            "src": "12189:6:12",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "12200:4:12",
                            "nodeType": "YulTypedName",
                            "src": "12200:4:12",
                            "type": ""
                          }
                        ],
                        "src": "12108:203:12"
                      },
                      {
                        "body": {
                          "nativeSrc": "12490:173:12",
                          "nodeType": "YulBlock",
                          "src": "12490:173:12",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "12507:9:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "12507:9:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "12518:2:12",
                                    "nodeType": "YulLiteral",
                                    "src": "12518:2:12",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "12500:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "12500:6:12"
                                },
                                "nativeSrc": "12500:21:12",
                                "nodeType": "YulFunctionCall",
                                "src": "12500:21:12"
                              },
                              "nativeSrc": "12500:21:12",
                              "nodeType": "YulExpressionStatement",
                              "src": "12500:21:12"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "12541:9:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "12541:9:12"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "12552:2:12",
                                        "nodeType": "YulLiteral",
                                        "src": "12552:2:12",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "12537:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "12537:3:12"
                                    },
                                    "nativeSrc": "12537:18:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "12537:18:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "12557:2:12",
                                    "nodeType": "YulLiteral",
                                    "src": "12557:2:12",
                                    "type": "",
                                    "value": "23"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "12530:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "12530:6:12"
                                },
                                "nativeSrc": "12530:30:12",
                                "nodeType": "YulFunctionCall",
                                "src": "12530:30:12"
                              },
                              "nativeSrc": "12530:30:12",
                              "nodeType": "YulExpressionStatement",
                              "src": "12530:30:12"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "12580:9:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "12580:9:12"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "12591:2:12",
                                        "nodeType": "YulLiteral",
                                        "src": "12591:2:12",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "12576:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "12576:3:12"
                                    },
                                    "nativeSrc": "12576:18:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "12576:18:12"
                                  },
                                  {
                                    "hexValue": "546f6b656e207472616e7366657273207061757365642e",
                                    "kind": "string",
                                    "nativeSrc": "12596:25:12",
                                    "nodeType": "YulLiteral",
                                    "src": "12596:25:12",
                                    "type": "",
                                    "value": "Token transfers paused."
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "12569:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "12569:6:12"
                                },
                                "nativeSrc": "12569:53:12",
                                "nodeType": "YulFunctionCall",
                                "src": "12569:53:12"
                              },
                              "nativeSrc": "12569:53:12",
                              "nodeType": "YulExpressionStatement",
                              "src": "12569:53:12"
                            },
                            {
                              "nativeSrc": "12631:26:12",
                              "nodeType": "YulAssignment",
                              "src": "12631:26:12",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "12643:9:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "12643:9:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "12654:2:12",
                                    "nodeType": "YulLiteral",
                                    "src": "12654:2:12",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "12639:3:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "12639:3:12"
                                },
                                "nativeSrc": "12639:18:12",
                                "nodeType": "YulFunctionCall",
                                "src": "12639:18:12"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "12631:4:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "12631:4:12"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_4883a4db8fa89fd27599c351c2e5d12230f9c7f95977ac82d41b94b3b13e60a6__to_t_string_memory_ptr__fromStack_reversed",
                        "nativeSrc": "12316:347:12",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "12467:9:12",
                            "nodeType": "YulTypedName",
                            "src": "12467:9:12",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "12481:4:12",
                            "nodeType": "YulTypedName",
                            "src": "12481:4:12",
                            "type": ""
                          }
                        ],
                        "src": "12316:347:12"
                      },
                      {
                        "body": {
                          "nativeSrc": "12797:145:12",
                          "nodeType": "YulBlock",
                          "src": "12797:145:12",
                          "statements": [
                            {
                              "nativeSrc": "12807:26:12",
                              "nodeType": "YulAssignment",
                              "src": "12807:26:12",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "12819:9:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "12819:9:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "12830:2:12",
                                    "nodeType": "YulLiteral",
                                    "src": "12830:2:12",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nativeSrc": "12815:3:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "12815:3:12"
                                },
                                "nativeSrc": "12815:18:12",
                                "nodeType": "YulFunctionCall",
                                "src": "12815:18:12"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nativeSrc": "12807:4:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "12807:4:12"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nativeSrc": "12849:9:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "12849:9:12"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nativeSrc": "12864:6:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "12864:6:12"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nativeSrc": "12880:3:12",
                                                "nodeType": "YulLiteral",
                                                "src": "12880:3:12",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nativeSrc": "12885:1:12",
                                                "nodeType": "YulLiteral",
                                                "src": "12885:1:12",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nativeSrc": "12876:3:12",
                                              "nodeType": "YulIdentifier",
                                              "src": "12876:3:12"
                                            },
                                            "nativeSrc": "12876:11:12",
                                            "nodeType": "YulFunctionCall",
                                            "src": "12876:11:12"
                                          },
                                          {
                                            "kind": "number",
                                            "nativeSrc": "12889:1:12",
                                            "nodeType": "YulLiteral",
                                            "src": "12889:1:12",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nativeSrc": "12872:3:12",
                                          "nodeType": "YulIdentifier",
                                          "src": "12872:3:12"
                                        },
                                        "nativeSrc": "12872:19:12",
                                        "nodeType": "YulFunctionCall",
                                        "src": "12872:19:12"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nativeSrc": "12860:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "12860:3:12"
                                    },
                                    "nativeSrc": "12860:32:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "12860:32:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "12842:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "12842:6:12"
                                },
                                "nativeSrc": "12842:51:12",
                                "nodeType": "YulFunctionCall",
                                "src": "12842:51:12"
                              },
                              "nativeSrc": "12842:51:12",
                              "nodeType": "YulExpressionStatement",
                              "src": "12842:51:12"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nativeSrc": "12913:9:12",
                                        "nodeType": "YulIdentifier",
                                        "src": "12913:9:12"
                                      },
                                      {
                                        "kind": "number",
                                        "nativeSrc": "12924:2:12",
                                        "nodeType": "YulLiteral",
                                        "src": "12924:2:12",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nativeSrc": "12909:3:12",
                                      "nodeType": "YulIdentifier",
                                      "src": "12909:3:12"
                                    },
                                    "nativeSrc": "12909:18:12",
                                    "nodeType": "YulFunctionCall",
                                    "src": "12909:18:12"
                                  },
                                  {
                                    "name": "value1",
                                    "nativeSrc": "12929:6:12",
                                    "nodeType": "YulIdentifier",
                                    "src": "12929:6:12"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "12902:6:12",
                                  "nodeType": "YulIdentifier",
                                  "src": "12902:6:12"
                                },
                                "nativeSrc": "12902:34:12",
                                "nodeType": "YulFunctionCall",
                                "src": "12902:34:12"
                              },
                              "nativeSrc": "12902:34:12",
                              "nodeType": "YulExpressionStatement",
                              "src": "12902:34:12"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
                        "nativeSrc": "12668:274:12",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nativeSrc": "12758:9:12",
                            "nodeType": "YulTypedName",
                            "src": "12758:9:12",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nativeSrc": "12769:6:12",
                            "nodeType": "YulTypedName",
                            "src": "12769:6:12",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nativeSrc": "12777:6:12",
                            "nodeType": "YulTypedName",
                            "src": "12777:6:12",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nativeSrc": "12788:4:12",
                            "nodeType": "YulTypedName",
                            "src": "12788:4:12",
                            "type": ""
                          }
                        ],
                        "src": "12668:274:12"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), 32)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_string_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_1)\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 0x1f), not(31)), 63), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, length)\n        if gt(add(add(_1, length), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_1, 32), length)\n        mstore(add(add(memPtr, length), 32), 0)\n        value1 := memPtr\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_5a4547c6e8528c5f7522e620f017033bad79c14d9d83736fcdb98681fb668b75__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Amount should be greater than 0.\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_exp_helper(_base, exponent, max) -> power, base\n    {\n        power := 1\n        base := _base\n        for { } gt(exponent, 1) { }\n        {\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            let _1 := 0\n            _1 := 0\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            let _2 := 0\n            _2 := 0\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent, not(0))\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_cceb5fa596334024605abeece7820bf456c2bd75cc9b2f6d93df4e5fbd05fed3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Exceeds daily spending limit.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c81948f77ae7b56f1759fc612b6b373d090eebe7124f74c528fff8e0a139fe69__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Transfer failed.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_af3195a179ad05055599ce517a796284d1531c0cdddc2475f9a4492a8cc2e347__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Limit should be greater than 0.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_3dd5d03a42d94c65612aa39a572e29b54b5a7dcbfd89c9430ed0638f6b29d67c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 54)\n        mstore(add(headStart, 64), \"Exceeds daily spending limit, ca\")\n        mstore(add(headStart, 96), \"n't receive extra CCR.\")\n        tail := add(headStart, 128)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_d2fb8b5c7966e68075ae8a0ce6eef76a742f48c6a121de0fee75e7991bb124cf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Merchant already registered.\")\n        tail := add(headStart, 96)\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_4883a4db8fa89fd27599c351c2e5d12230f9c7f95977ac82d41b94b3b13e60a6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Token transfers paused.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n}",
                  "id": 12,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50600436106102065760003560e01c806342966c681161011a57806391d14854116100ad578063a9059cbb1161007c578063a9059cbb14610465578063d539139314610478578063d547741f1461049f578063dd62ed3e146104b2578063e63ab1e9146104eb57600080fd5b806391d148541461042f57806395d89b4114610442578063a217fddf1461044a578063a6c8a3841461045257600080fd5b806370a08231116100e957806370a08231146103cb57806379cc6790146103f45780638456cb59146104075780638aeac5011461040f57600080fd5b806342966c68146103875780635c975abb1461039a5780635cc18e2f146103a557806360caa609146103b857600080fd5b8063248a9ca31161019d5780632f2ff15d1161016c5780632f2ff15d14610337578063313ce5671461034a57806336568abe146103595780633f4ba83a1461036c57806340c10f191461037457600080fd5b8063248a9ca3146102c1578063251de801146102e4578063257caf9e146103045780632803212f1461032457600080fd5b80631a2f7167116101d95780631a2f71671461026d5780631c9cef041461029057806322083bd01461029957806323b872dd146102ae57600080fd5b806301ffc9a71461020b57806306fdde0314610233578063095ea7b31461024857806318160ddd1461025b575b600080fd5b61021e610219366004611284565b610512565b60405190151581526020015b60405180910390f35b61023b610549565b60405161022a91906112b5565b61021e61025636600461131f565b6105db565b6002545b60405190815260200161022a565b61021e61027b366004611349565b600a6020526000908152604090205460ff1681565b61025f600c5481565b6102ac6102a736600461131f565b6105f3565b005b61021e6102bc366004611364565b610794565b61025f6102cf3660046113a1565b60009081526006602052604090206001015490565b61025f6102f2366004611349565b60086020526000908152604090205481565b61025f610312366004611349565b60076020526000908152604090205481565b6102ac61033236600461131f565b6107b8565b6102ac6103453660046113ba565b61084e565b6040516012815260200161022a565b6102ac6103673660046113ba565b610873565b6102ac6108ab565b6102ac61038236600461131f565b6108e0565b6102ac6103953660046113a1565b610a18565b60055460ff1661021e565b6102ac6103b336600461131f565b610a22565b61023b6103c6366004611349565b610abd565b61025f6103d9366004611349565b6001600160a01b031660009081526020819052604090205490565b6102ac61040236600461131f565b610b57565b6102ac610b70565b61025f61041d366004611349565b60096020526000908152604090205481565b61021e61043d3660046113ba565b610ba2565b61023b610bcd565b61025f600081565b6102ac6104603660046113fc565b610bdc565b61021e61047336600461131f565b610c87565b61025f7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b6102ac6104ad3660046113ba565b610c95565b61025f6104c03660046114c6565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61025f7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b60006001600160e01b03198216637965db0b60e01b148061054357506301ffc9a760e01b6001600160e01b03198316145b92915050565b606060038054610558906114f0565b80601f0160208091040260200160405190810160405280929190818152602001828054610584906114f0565b80156105d15780601f106105a6576101008083540402835291602001916105d1565b820191906000526020600020905b8154815290600101906020018083116105b457829003601f168201915b5050505050905090565b6000336105e9818585610cba565b5060019392505050565b600081116106485760405162461bcd60e51b815260206004820181905260248201527f416d6f756e742073686f756c642062652067726561746572207468616e20302e60448201526064015b60405180910390fd5b60006106566012600a611627565b6106609083611636565b336000908152600760209081526040808320546009909252909120549192509061068b90839061164d565b11156106d95760405162461bcd60e51b815260206004820152601d60248201527f45786365656473206461696c79207370656e64696e67206c696d69742e000000604482015260640161063f565b336000908152600860205260409020546106f6906201518061164d565b42111561071b5733600090815260086020908152604080832042905560099091528120555b336000908152600960205260408120805483929061073a90849061164d565b909155506000905061074c8483610c87565b90508061078e5760405162461bcd60e51b815260206004820152601060248201526f2a3930b739b332b9103330b4b632b21760811b604482015260640161063f565b50505050565b6000336107a2858285610cc7565b6107ad858585610d40565b506001949350505050565b60006107c381610d9f565b60006107d16012600a611627565b6107db9084611636565b90506000811161082d5760405162461bcd60e51b815260206004820152601f60248201527f4c696d69742073686f756c642062652067726561746572207468616e20302e00604482015260640161063f565b6001600160a01b039093166000908152600760205260409020929092555050565b60008281526006602052604090206001015461086981610d9f565b61078e8383610da9565b6001600160a01b038116331461089c5760405163334bd91960e11b815260040160405180910390fd5b6108a68282610e3d565b505050565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a6108d581610d9f565b6108dd610eaa565b50565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a661090a81610d9f565b60006109186012600a611627565b6109229084611636565b6001600160a01b038516600090815260076020526040902054909150156109e0576001600160a01b03841660009081526007602090815260408083205460099092529091205461097390839061164d565b11156109e05760405162461bcd60e51b815260206004820152603660248201527f45786365656473206461696c79207370656e64696e67206c696d69742c2063616044820152753713ba103932b1b2b4bb329032bc3a39309021a1a91760511b606482015260840161063f565b6001600160a01b03841660009081526007602052604081208054839290610a0890849061164d565b9091555061078e90508482610efc565b6108dd3382610f32565b60008111610a725760405162461bcd60e51b815260206004820181905260248201527f416d6f756e742073686f756c642062652067726561746572207468616e20302e604482015260640161063f565b60006064600c5483610a849190611636565b610a8e9190611660565b9050610a9e836102a78385611682565b6108a633610aae6012600a611627565b610ab89084611636565b610efc565b600b6020526000908152604090208054610ad6906114f0565b80601f0160208091040260200160405190810160405280929190818152602001828054610b02906114f0565b8015610b4f5780601f10610b2457610100808354040283529160200191610b4f565b820191906000526020600020905b815481529060010190602001808311610b3257829003601f168201915b505050505081565b610b62823383610cc7565b610b6c8282610f32565b5050565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a610b9a81610d9f565b6108dd610f68565b60009182526006602090815260408084206001600160a01b0393909316845291905290205460ff1690565b606060048054610558906114f0565b6000610be781610d9f565b6001600160a01b0383166000908152600a602052604090205460ff1615610c505760405162461bcd60e51b815260206004820152601c60248201527f4d65726368616e7420616c726561647920726567697374657265642e00000000604482015260640161063f565b6001600160a01b0383166000908152600a60209081526040808320805460ff19166001179055600b909152902061078e83826116e3565b6000336105e9818585610d40565b600082815260066020526040902060010154610cb081610d9f565b61078e8383610e3d565b6108a68383836001610fa5565b6001600160a01b0383811660009081526001602090815260408083209386168352929052205460001981101561078e5781811015610d3157604051637dc7a0d960e11b81526001600160a01b0384166004820152602481018290526044810183905260640161063f565b61078e84848484036000610fa5565b6001600160a01b038316610d6a57604051634b637e8f60e11b81526000600482015260240161063f565b6001600160a01b038216610d945760405163ec442f0560e01b81526000600482015260240161063f565b6108a683838361107a565b6108dd81336110d8565b6000610db58383610ba2565b610e355760008381526006602090815260408083206001600160a01b03861684529091529020805460ff19166001179055610ded3390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4506001610543565b506000610543565b6000610e498383610ba2565b15610e355760008381526006602090815260408083206001600160a01b0386168085529252808320805460ff1916905551339286917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a4506001610543565b610eb2611111565b6005805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b038216610f265760405163ec442f0560e01b81526000600482015260240161063f565b610b6c6000838361107a565b6001600160a01b038216610f5c57604051634b637e8f60e11b81526000600482015260240161063f565b610b6c8260008361107a565b610f70611136565b6005805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610edf3390565b6001600160a01b038416610fcf5760405163e602df0560e01b81526000600482015260240161063f565b6001600160a01b038316610ff957604051634a1406b160e11b81526000600482015260240161063f565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561078e57826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161106c91815260200190565b60405180910390a350505050565b60055460ff16156110cd5760405162461bcd60e51b815260206004820152601760248201527f546f6b656e207472616e7366657273207061757365642e000000000000000000604482015260640161063f565b6108a683838361115a565b6110e28282610ba2565b610b6c5760405163e2517d3f60e01b81526001600160a01b03821660048201526024810183905260440161063f565b60055460ff1661113457604051638dfc202b60e01b815260040160405180910390fd5b565b60055460ff16156111345760405163d93c066560e01b815260040160405180910390fd5b6001600160a01b03831661118557806002600082825461117a919061164d565b909155506111f79050565b6001600160a01b038316600090815260208190526040902054818110156111d85760405163391434e360e21b81526001600160a01b0385166004820152602481018290526044810183905260640161063f565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b03821661121357600280548290039055611232565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161127791815260200190565b60405180910390a3505050565b60006020828403121561129657600080fd5b81356001600160e01b0319811681146112ae57600080fd5b9392505050565b602081526000825180602084015260005b818110156112e357602081860181015160408684010152016112c6565b506000604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b038116811461131a57600080fd5b919050565b6000806040838503121561133257600080fd5b61133b83611303565b946020939093013593505050565b60006020828403121561135b57600080fd5b6112ae82611303565b60008060006060848603121561137957600080fd5b61138284611303565b925061139060208501611303565b929592945050506040919091013590565b6000602082840312156113b357600080fd5b5035919050565b600080604083850312156113cd57600080fd5b823591506113dd60208401611303565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561140f57600080fd5b61141883611303565b9150602083013567ffffffffffffffff81111561143457600080fd5b8301601f8101851361144557600080fd5b803567ffffffffffffffff81111561145f5761145f6113e6565b604051601f8201601f19908116603f0116810167ffffffffffffffff8111828210171561148e5761148e6113e6565b6040528181528282016020018710156114a657600080fd5b816020840160208301376000602083830101528093505050509250929050565b600080604083850312156114d957600080fd5b6114e283611303565b91506113dd60208401611303565b600181811c9082168061150457607f821691505b60208210810361152457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b6001815b600184111561157b5780850481111561155f5761155f61152a565b600184161561156d57908102905b60019390931c928002611544565b935093915050565b60008261159257506001610543565b8161159f57506000610543565b81600181146115b557600281146115bf576115db565b6001915050610543565b60ff8411156115d0576115d061152a565b50506001821b610543565b5060208310610133831016604e8410600b84101617156115fe575081810a610543565b61160b6000198484611540565b806000190482111561161f5761161f61152a565b029392505050565b60006112ae60ff841683611583565b80820281158282048414176105435761054361152a565b808201808211156105435761054361152a565b60008261167d57634e487b7160e01b600052601260045260246000fd5b500490565b818103818111156105435761054361152a565b601f8211156108a657806000526020600020601f840160051c810160208510156116bc5750805b601f840160051c820191505b818110156116dc57600081556001016116c8565b5050505050565b815167ffffffffffffffff8111156116fd576116fd6113e6565b6117118161170b84546114f0565b84611695565b6020601f821160018114611745576000831561172d5750848201515b600019600385901b1c1916600184901b1784556116dc565b600084815260208120601f198516915b828110156117755787850151825560209485019460019092019101611755565b50848210156117935786840151600019600387901b60f8161c191681555b50505050600190811b0190555056fea164736f6c634300081c000a",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x206 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x42966C68 GT PUSH2 0x11A JUMPI DUP1 PUSH4 0x91D14854 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x465 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x478 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x49F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x4B2 JUMPI DUP1 PUSH4 0xE63AB1E9 EQ PUSH2 0x4EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x91D14854 EQ PUSH2 0x42F JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x442 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x44A JUMPI DUP1 PUSH4 0xA6C8A384 EQ PUSH2 0x452 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3CB JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x3F4 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x407 JUMPI DUP1 PUSH4 0x8AEAC501 EQ PUSH2 0x40F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x42966C68 EQ PUSH2 0x387 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x39A JUMPI DUP1 PUSH4 0x5CC18E2F EQ PUSH2 0x3A5 JUMPI DUP1 PUSH4 0x60CAA609 EQ PUSH2 0x3B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x248A9CA3 GT PUSH2 0x19D JUMPI DUP1 PUSH4 0x2F2FF15D GT PUSH2 0x16C JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x337 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x34A JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x359 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x36C JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x374 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x2C1 JUMPI DUP1 PUSH4 0x251DE801 EQ PUSH2 0x2E4 JUMPI DUP1 PUSH4 0x257CAF9E EQ PUSH2 0x304 JUMPI DUP1 PUSH4 0x2803212F EQ PUSH2 0x324 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1A2F7167 GT PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x1A2F7167 EQ PUSH2 0x26D JUMPI DUP1 PUSH4 0x1C9CEF04 EQ PUSH2 0x290 JUMPI DUP1 PUSH4 0x22083BD0 EQ PUSH2 0x299 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x20B JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x248 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x25B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x21E PUSH2 0x219 CALLDATASIZE PUSH1 0x4 PUSH2 0x1284 JUMP JUMPDEST PUSH2 0x512 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23B PUSH2 0x549 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22A SWAP2 SWAP1 PUSH2 0x12B5 JUMP JUMPDEST PUSH2 0x21E PUSH2 0x256 CALLDATASIZE PUSH1 0x4 PUSH2 0x131F JUMP JUMPDEST PUSH2 0x5DB JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x22A JUMP JUMPDEST PUSH2 0x21E PUSH2 0x27B CALLDATASIZE PUSH1 0x4 PUSH2 0x1349 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x25F PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2AC PUSH2 0x2A7 CALLDATASIZE PUSH1 0x4 PUSH2 0x131F JUMP JUMPDEST PUSH2 0x5F3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x21E PUSH2 0x2BC CALLDATASIZE PUSH1 0x4 PUSH2 0x1364 JUMP JUMPDEST PUSH2 0x794 JUMP JUMPDEST PUSH2 0x25F PUSH2 0x2CF CALLDATASIZE PUSH1 0x4 PUSH2 0x13A1 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x25F PUSH2 0x2F2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1349 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x25F PUSH2 0x312 CALLDATASIZE PUSH1 0x4 PUSH2 0x1349 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2AC PUSH2 0x332 CALLDATASIZE PUSH1 0x4 PUSH2 0x131F JUMP JUMPDEST PUSH2 0x7B8 JUMP JUMPDEST PUSH2 0x2AC PUSH2 0x345 CALLDATASIZE PUSH1 0x4 PUSH2 0x13BA JUMP JUMPDEST PUSH2 0x84E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x22A JUMP JUMPDEST PUSH2 0x2AC PUSH2 0x367 CALLDATASIZE PUSH1 0x4 PUSH2 0x13BA JUMP JUMPDEST PUSH2 0x873 JUMP JUMPDEST PUSH2 0x2AC PUSH2 0x8AB JUMP JUMPDEST PUSH2 0x2AC PUSH2 0x382 CALLDATASIZE PUSH1 0x4 PUSH2 0x131F JUMP JUMPDEST PUSH2 0x8E0 JUMP JUMPDEST PUSH2 0x2AC PUSH2 0x395 CALLDATASIZE PUSH1 0x4 PUSH2 0x13A1 JUMP JUMPDEST PUSH2 0xA18 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND PUSH2 0x21E JUMP JUMPDEST PUSH2 0x2AC PUSH2 0x3B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x131F JUMP JUMPDEST PUSH2 0xA22 JUMP JUMPDEST PUSH2 0x23B PUSH2 0x3C6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1349 JUMP JUMPDEST PUSH2 0xABD JUMP JUMPDEST PUSH2 0x25F PUSH2 0x3D9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1349 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2AC PUSH2 0x402 CALLDATASIZE PUSH1 0x4 PUSH2 0x131F JUMP JUMPDEST PUSH2 0xB57 JUMP JUMPDEST PUSH2 0x2AC PUSH2 0xB70 JUMP JUMPDEST PUSH2 0x25F PUSH2 0x41D CALLDATASIZE PUSH1 0x4 PUSH2 0x1349 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x21E PUSH2 0x43D CALLDATASIZE PUSH1 0x4 PUSH2 0x13BA JUMP JUMPDEST PUSH2 0xBA2 JUMP JUMPDEST PUSH2 0x23B PUSH2 0xBCD JUMP JUMPDEST PUSH2 0x25F PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x2AC PUSH2 0x460 CALLDATASIZE PUSH1 0x4 PUSH2 0x13FC JUMP JUMPDEST PUSH2 0xBDC JUMP JUMPDEST PUSH2 0x21E PUSH2 0x473 CALLDATASIZE PUSH1 0x4 PUSH2 0x131F JUMP JUMPDEST PUSH2 0xC87 JUMP JUMPDEST PUSH2 0x25F PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0x2AC PUSH2 0x4AD CALLDATASIZE PUSH1 0x4 PUSH2 0x13BA JUMP JUMPDEST PUSH2 0xC95 JUMP JUMPDEST PUSH2 0x25F PUSH2 0x4C0 CALLDATASIZE PUSH1 0x4 PUSH2 0x14C6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x25F PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x543 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x558 SWAP1 PUSH2 0x14F0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x584 SWAP1 PUSH2 0x14F0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5D1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5A6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5D1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5B4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x5E9 DUP2 DUP6 DUP6 PUSH2 0xCBA JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x648 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E742073686F756C642062652067726561746572207468616E20302E PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x656 PUSH1 0x12 PUSH1 0xA PUSH2 0x1627 JUMP JUMPDEST PUSH2 0x660 SWAP1 DUP4 PUSH2 0x1636 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x9 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD SWAP2 SWAP3 POP SWAP1 PUSH2 0x68B SWAP1 DUP4 SWAP1 PUSH2 0x164D JUMP JUMPDEST GT ISZERO PUSH2 0x6D9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45786365656473206461696C79207370656E64696E67206C696D69742E000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x63F JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x6F6 SWAP1 PUSH3 0x15180 PUSH2 0x164D JUMP JUMPDEST TIMESTAMP GT ISZERO PUSH2 0x71B JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 TIMESTAMP SWAP1 SSTORE PUSH1 0x9 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SSTORE JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x73A SWAP1 DUP5 SWAP1 PUSH2 0x164D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x0 SWAP1 POP PUSH2 0x74C DUP5 DUP4 PUSH2 0xC87 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x78E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x2A3930B739B332B9103330B4B632B217 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x63F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x7A2 DUP6 DUP3 DUP6 PUSH2 0xCC7 JUMP JUMPDEST PUSH2 0x7AD DUP6 DUP6 DUP6 PUSH2 0xD40 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7C3 DUP2 PUSH2 0xD9F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7D1 PUSH1 0x12 PUSH1 0xA PUSH2 0x1627 JUMP JUMPDEST PUSH2 0x7DB SWAP1 DUP5 PUSH2 0x1636 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0x82D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4C696D69742073686F756C642062652067726561746572207468616E20302E00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x63F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x869 DUP2 PUSH2 0xD9F JUMP JUMPDEST PUSH2 0x78E DUP4 DUP4 PUSH2 0xDA9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x89C JUMPI PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8A6 DUP3 DUP3 PUSH2 0xE3D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0x8D5 DUP2 PUSH2 0xD9F JUMP JUMPDEST PUSH2 0x8DD PUSH2 0xEAA JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 PUSH2 0x90A DUP2 PUSH2 0xD9F JUMP JUMPDEST PUSH1 0x0 PUSH2 0x918 PUSH1 0x12 PUSH1 0xA PUSH2 0x1627 JUMP JUMPDEST PUSH2 0x922 SWAP1 DUP5 PUSH2 0x1636 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x9E0 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x9 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD PUSH2 0x973 SWAP1 DUP4 SWAP1 PUSH2 0x164D JUMP JUMPDEST GT ISZERO PUSH2 0x9E0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x36 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45786365656473206461696C79207370656E64696E67206C696D69742C206361 PUSH1 0x44 DUP3 ADD MSTORE PUSH22 0x3713BA103932B1B2B4BB329032BC3A39309021A1A917 PUSH1 0x51 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x63F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xA08 SWAP1 DUP5 SWAP1 PUSH2 0x164D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x78E SWAP1 POP DUP5 DUP3 PUSH2 0xEFC JUMP JUMPDEST PUSH2 0x8DD CALLER DUP3 PUSH2 0xF32 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xA72 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E742073686F756C642062652067726561746572207468616E20302E PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x63F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x64 PUSH1 0xC SLOAD DUP4 PUSH2 0xA84 SWAP2 SWAP1 PUSH2 0x1636 JUMP JUMPDEST PUSH2 0xA8E SWAP2 SWAP1 PUSH2 0x1660 JUMP JUMPDEST SWAP1 POP PUSH2 0xA9E DUP4 PUSH2 0x2A7 DUP4 DUP6 PUSH2 0x1682 JUMP JUMPDEST PUSH2 0x8A6 CALLER PUSH2 0xAAE PUSH1 0x12 PUSH1 0xA PUSH2 0x1627 JUMP JUMPDEST PUSH2 0xAB8 SWAP1 DUP5 PUSH2 0x1636 JUMP JUMPDEST PUSH2 0xEFC JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0xAD6 SWAP1 PUSH2 0x14F0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB02 SWAP1 PUSH2 0x14F0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB4F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB24 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB4F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB32 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH2 0xB62 DUP3 CALLER DUP4 PUSH2 0xCC7 JUMP JUMPDEST PUSH2 0xB6C DUP3 DUP3 PUSH2 0xF32 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0x65D7A28E3265B37A6474929F336521B332C1681B933F6CB9F3376673440D862A PUSH2 0xB9A DUP2 PUSH2 0xD9F JUMP JUMPDEST PUSH2 0x8DD PUSH2 0xF68 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x558 SWAP1 PUSH2 0x14F0 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBE7 DUP2 PUSH2 0xD9F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xC50 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D65726368616E7420616C726561647920726567697374657265642E00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x63F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0xB SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH2 0x78E DUP4 DUP3 PUSH2 0x16E3 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x5E9 DUP2 DUP6 DUP6 PUSH2 0xD40 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xCB0 DUP2 PUSH2 0xD9F JUMP JUMPDEST PUSH2 0x78E DUP4 DUP4 PUSH2 0xE3D JUMP JUMPDEST PUSH2 0x8A6 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xFA5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 LT ISZERO PUSH2 0x78E JUMPI DUP2 DUP2 LT ISZERO PUSH2 0xD31 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7DC7A0D9 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x63F JUMP JUMPDEST PUSH2 0x78E DUP5 DUP5 DUP5 DUP5 SUB PUSH1 0x0 PUSH2 0xFA5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xD6A JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x63F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xD94 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x63F JUMP JUMPDEST PUSH2 0x8A6 DUP4 DUP4 DUP4 PUSH2 0x107A JUMP JUMPDEST PUSH2 0x8DD DUP2 CALLER PUSH2 0x10D8 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDB5 DUP4 DUP4 PUSH2 0xBA2 JUMP JUMPDEST PUSH2 0xE35 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0xDED CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x543 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x543 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE49 DUP4 DUP4 PUSH2 0xBA2 JUMP JUMPDEST ISZERO PUSH2 0xE35 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP7 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x543 JUMP JUMPDEST PUSH2 0xEB2 PUSH2 0x1111 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xF26 JUMPI PUSH1 0x40 MLOAD PUSH4 0xEC442F05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x63F JUMP JUMPDEST PUSH2 0xB6C PUSH1 0x0 DUP4 DUP4 PUSH2 0x107A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xF5C JUMPI PUSH1 0x40 MLOAD PUSH4 0x4B637E8F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x63F JUMP JUMPDEST PUSH2 0xB6C DUP3 PUSH1 0x0 DUP4 PUSH2 0x107A JUMP JUMPDEST PUSH2 0xF70 PUSH2 0x1136 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xEDF CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xFCF JUMPI PUSH1 0x40 MLOAD PUSH4 0xE602DF05 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x63F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xFF9 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4A1406B1 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x63F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP8 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP3 SWAP1 SSTORE DUP1 ISZERO PUSH2 0x78E JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x106C SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x10CD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E207472616E7366657273207061757365642E000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x63F JUMP JUMPDEST PUSH2 0x8A6 DUP4 DUP4 DUP4 PUSH2 0x115A JUMP JUMPDEST PUSH2 0x10E2 DUP3 DUP3 PUSH2 0xBA2 JUMP JUMPDEST PUSH2 0xB6C JUMPI PUSH1 0x40 MLOAD PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x63F JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND PUSH2 0x1134 JUMPI PUSH1 0x40 MLOAD PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1134 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1185 JUMPI DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x117A SWAP2 SWAP1 PUSH2 0x164D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x11F7 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x11D8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x391434E3 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x64 ADD PUSH2 0x63F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1213 JUMPI PUSH1 0x2 DUP1 SLOAD DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x1232 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP3 ADD SWAP1 SSTORE JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1277 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1296 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x12AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x12E3 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD PUSH1 0x40 DUP7 DUP5 ADD ADD MSTORE ADD PUSH2 0x12C6 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x131A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1332 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x133B DUP4 PUSH2 0x1303 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x135B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12AE DUP3 PUSH2 0x1303 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1379 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1382 DUP5 PUSH2 0x1303 JUMP JUMPDEST SWAP3 POP PUSH2 0x1390 PUSH1 0x20 DUP6 ADD PUSH2 0x1303 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x13CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x13DD PUSH1 0x20 DUP5 ADD PUSH2 0x1303 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x140F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1418 DUP4 PUSH2 0x1303 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1434 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x1445 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x145F JUMPI PUSH2 0x145F PUSH2 0x13E6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x148E JUMPI PUSH2 0x148E PUSH2 0x13E6 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP3 DUP3 ADD PUSH1 0x20 ADD DUP8 LT ISZERO PUSH2 0x14A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP4 DUP4 ADD ADD MSTORE DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14E2 DUP4 PUSH2 0x1303 JUMP JUMPDEST SWAP2 POP PUSH2 0x13DD PUSH1 0x20 DUP5 ADD PUSH2 0x1303 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1504 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1524 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 JUMPDEST PUSH1 0x1 DUP5 GT ISZERO PUSH2 0x157B JUMPI DUP1 DUP6 DIV DUP2 GT ISZERO PUSH2 0x155F JUMPI PUSH2 0x155F PUSH2 0x152A JUMP JUMPDEST PUSH1 0x1 DUP5 AND ISZERO PUSH2 0x156D JUMPI SWAP1 DUP2 MUL SWAP1 JUMPDEST PUSH1 0x1 SWAP4 SWAP1 SWAP4 SHR SWAP3 DUP1 MUL PUSH2 0x1544 JUMP JUMPDEST SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1592 JUMPI POP PUSH1 0x1 PUSH2 0x543 JUMP JUMPDEST DUP2 PUSH2 0x159F JUMPI POP PUSH1 0x0 PUSH2 0x543 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x15B5 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x15BF JUMPI PUSH2 0x15DB JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x543 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x15D0 JUMPI PUSH2 0x15D0 PUSH2 0x152A JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x543 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x15FE JUMPI POP DUP2 DUP2 EXP PUSH2 0x543 JUMP JUMPDEST PUSH2 0x160B PUSH1 0x0 NOT DUP5 DUP5 PUSH2 0x1540 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x161F JUMPI PUSH2 0x161F PUSH2 0x152A JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12AE PUSH1 0xFF DUP5 AND DUP4 PUSH2 0x1583 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x543 JUMPI PUSH2 0x543 PUSH2 0x152A JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x543 JUMPI PUSH2 0x543 PUSH2 0x152A JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x167D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x543 JUMPI PUSH2 0x543 PUSH2 0x152A JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x8A6 JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x16BC JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x16DC JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x16C8 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16FD JUMPI PUSH2 0x16FD PUSH2 0x13E6 JUMP JUMPDEST PUSH2 0x1711 DUP2 PUSH2 0x170B DUP5 SLOAD PUSH2 0x14F0 JUMP JUMPDEST DUP5 PUSH2 0x1695 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1745 JUMPI PUSH1 0x0 DUP4 ISZERO PUSH2 0x172D JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x16DC JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1775 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x1755 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x1793 JUMPI DUP7 DUP5 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP INVALID LOG1 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP EXP ",
              "sourceMap": "380:4360:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2565:202:0;;;;;;:::i;:::-;;:::i;:::-;;;470:14:12;;463:22;445:41;;433:2;418:18;2565:202:0;;;;;;;;1760:89:3;;;:::i;:::-;;;;;;;:::i;3979:186::-;;;;;;:::i;:::-;;:::i;2830:97::-;2908:12;;2830:97;;;1658:25:12;;;1646:2;1631:18;2830:97:3;1512:177:12;841:42:11;;;;;;:::i;:::-;;;;;;;;;;;;;;;;4232:37;;;;;;3070:866;;;;;;:::i;:::-;;:::i;:::-;;4757:244:3;;;;;;:::i;:::-;;:::i;3810:120:0:-;;;;;;:::i;:::-;3875:7;3901:12;;;:6;:12;;;;;:22;;;;3810:120;703:52:11;;;;;;:::i;:::-;;;;;;;;;;;;;;644:53;;;;;;:::i;:::-;;;;;;;;;;;;;;2721:279;;;;;;:::i;:::-;;:::i;4226:136:0:-;;;;;;:::i;:::-;;:::i;2688:82:3:-;;;2761:2;3124:36:12;;3112:2;3097:18;2688:82:3;2982:184:12;5328:245:0;;;;;;:::i;:::-;;:::i;1441:75:11:-;;;:::i;1608:609::-;;;;;;:::i;:::-;;:::i;618:87:5:-;;;;;;:::i;:::-;;:::i;1726:84:8:-;1796:7;;;;1726:84;;4302:436:11;;;;;;:::i;:::-;;:::i;889:46::-;;;;;;:::i;:::-;;:::i;2985:116:3:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3076:18:3;3050:7;3076:18;;;;;;;;;;;;2985:116;1021:158:5;;;;;;:::i;:::-;;:::i;1364:71:11:-;;;:::i;761:45::-;;;;;;:::i;:::-;;;;;;;;;;;;;;2854:136:0;;;;;;:::i;:::-;;:::i;1962:93:3:-;;;:::i;2187:49:0:-;;2232:4;2187:49;;2318:281:11;;;;;;:::i;:::-;;:::i;3296:178:3:-;;;;;;:::i;:::-;;:::i;549:62:11:-;;587:24;549:62;;4642:138:0;;;;;;:::i;:::-;;:::i;3532:140:3:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3638:18:3;;;3612:7;3638:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3532:140;481:62:11;;519:24;481:62;;2565:202:0;2650:4;-1:-1:-1;;;;;;2673:47:0;;-1:-1:-1;;;2673:47:0;;:87;;-1:-1:-1;;;;;;;;;;862:40:9;;;2724:36:0;2666:94;2565:202;-1:-1:-1;;2565:202:0:o;1760:89:3:-;1805:13;1837:5;1830:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1760:89;:::o;3979:186::-;4052:4;735:10:7;4106:31:3;735:10:7;4122:7:3;4131:5;4106:8;:31::i;:::-;-1:-1:-1;4154:4:3;;3979:186;-1:-1:-1;;;3979:186:3:o;3070:866:11:-;3162:1;3152:7;:11;3144:56;;;;-1:-1:-1;;;3144:56:11;;5410:2:12;3144:56:11;;;5392:21:12;;;5429:18;;;5422:30;5488:34;5468:18;;;5461:62;5540:18;;3144:56:11;;;;;;;;;3210:14;3237;2761:2:3;3237::11;:14;:::i;:::-;3227:24;;:7;:24;:::i;:::-;3412:10;3393:30;;;;:18;:30;;;;;;;;;3358:10;:22;;;;;;;3210:41;;-1:-1:-1;3393:30:11;3358:31;;3210:41;;3358:31;:::i;:::-;:65;;3337:141;;;;-1:-1:-1;;;3337:141:11;;7638:2:12;3337:141:11;;;7620:21:12;7677:2;7657:18;;;7650:30;7716:31;7696:18;;;7689:59;7765:18;;3337:141:11;7436:353:12;3337:141:11;3584:10;3566:29;;;;:17;:29;;;;;;:38;;3598:6;3566:38;:::i;:::-;3548:15;:56;3544:174;;;3638:10;3620:29;;;;:17;:29;;;;;;;;3652:15;3620:47;;3681:10;:22;;;;;:26;3544:174;3775:10;3764:22;;;;:10;:22;;;;;:32;;3790:6;;3764:22;:32;;3790:6;;3764:32;:::i;:::-;;;;-1:-1:-1;3847:12:11;;-1:-1:-1;3862:21:11;3871:3;3876:6;3862:8;:21::i;:::-;3847:36;;3901:7;3893:36;;;;-1:-1:-1;;;3893:36:11;;7996:2:12;3893:36:11;;;7978:21:12;8035:2;8015:18;;;8008:30;-1:-1:-1;;;8054:18:12;;;8047:46;8110:18;;3893:36:11;7794:340:12;3893:36:11;3134:802;;3070:866;;:::o;4757:244:3:-;4844:4;735:10:7;4900:37:3;4916:4;735:10:7;4931:5:3;4900:15;:37::i;:::-;4947:26;4957:4;4963:2;4967:5;4947:9;:26::i;:::-;-1:-1:-1;4990:4:3;;4757:244;-1:-1:-1;;;;4757:244:3:o;2721:279:11:-;2232:4:0;2464:16;2232:4;2464:10;:16::i;:::-;2844:13:11::1;2869:14;2761:2:3::0;2869::11::1;:14;:::i;:::-;2860:23;::::0;:6;:23:::1;:::i;:::-;2844:39;;2910:1;2902:5;:9;2894:53;;;::::0;-1:-1:-1;;;2894:53:11;;8341:2:12;2894:53:11::1;::::0;::::1;8323:21:12::0;8380:2;8360:18;;;8353:30;8419:33;8399:18;;;8392:61;8470:18;;2894:53:11::1;8139:355:12::0;2894:53:11::1;-1:-1:-1::0;;;;;2957:28:11;;::::1;;::::0;;;:18:::1;:28;::::0;;;;:36;;;;-1:-1:-1;;2721:279:11:o;4226:136:0:-;3875:7;3901:12;;;:6;:12;;;;;:22;;;2464:16;2475:4;2464:10;:16::i;:::-;4330:25:::1;4341:4;4347:7;4330:10;:25::i;5328:245::-:0;-1:-1:-1;;;;;5421:34:0;;735:10:7;5421:34:0;5417:102;;5478:30;;-1:-1:-1;;;5478:30:0;;;;;;;;;;;5417:102;5529:37;5541:4;5547:18;5529:11;:37::i;:::-;;5328:245;;:::o;1441:75:11:-;519:24;2464:16:0;2475:4;2464:10;:16::i;:::-;1499:10:11::1;:8;:10::i;:::-;1441:75:::0;:::o;1608:609::-;587:24;2464:16:0;2475:4;2464:10;:16::i;:::-;1691:14:11::1;1718;2761:2:3::0;1718::11::1;:14;:::i;:::-;1708:24;::::0;:7;:24:::1;:::i;:::-;-1:-1:-1::0;;;;;1921:23:11;::::1;1947:1;1921:23:::0;;;:18:::1;:23;::::0;;;;;1691:41;;-1:-1:-1;1921:27:11;1917:222:::1;;-1:-1:-1::0;;;;;2017:23:11;::::1;;::::0;;;:18:::1;:23;::::0;;;;;;;;1989:10:::1;:15:::0;;;;;;;:24:::1;::::0;2007:6;;1989:24:::1;:::i;:::-;:51;;1964:164;;;::::0;-1:-1:-1;;;1964:164:11;;8701:2:12;1964:164:11::1;::::0;::::1;8683:21:12::0;8740:2;8720:18;;;8713:30;8779:34;8759:18;;;8752:62;-1:-1:-1;;;8830:18:12;;;8823:52;8892:19;;1964:164:11::1;8499:418:12::0;1964:164:11::1;-1:-1:-1::0;;;;;2149:23:11;::::1;;::::0;;;:18:::1;:23;::::0;;;;:33;;2176:6;;2149:23;:33:::1;::::0;2176:6;;2149:33:::1;:::i;:::-;::::0;;;-1:-1:-1;2192:18:11::1;::::0;-1:-1:-1;2198:3:11;2203:6;2192:5:::1;:18::i;618:87:5:-:0;672:26;735:10:7;692:5:5;672;:26::i;4302:436:11:-;4403:1;4393:7;:11;4385:56;;;;-1:-1:-1;;;4385:56:11;;5410:2:12;4385:56:11;;;5392:21:12;;;5429:18;;;5422:30;5488:34;5468:18;;;5461:62;5540:18;;4385:56:11;5208:356:12;4385:56:11;4493:16;4545:3;4523:18;;4513:7;:28;;;;:::i;:::-;4512:36;;;;:::i;:::-;4493:55;-1:-1:-1;4599:48:11;4617:9;4628:18;4493:55;4628:7;:18;:::i;4599:48::-;4687:44;4693:10;4716:14;2761:2:3;4716::11;:14;:::i;:::-;4705:25;;:8;:25;:::i;:::-;4687:5;:44::i;889:46::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1021:158:5:-;1096:45;1112:7;735:10:7;1135:5:5;1096:15;:45::i;:::-;1151:21;1157:7;1166:5;1151;:21::i;:::-;1021:158;;:::o;1364:71:11:-;519:24;2464:16:0;2475:4;2464:10;:16::i;:::-;1420:8:11::1;:6;:8::i;2854:136:0:-:0;2931:4;2954:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;2954:29:0;;;;;;;;;;;;;;;2854:136::o;1962:93:3:-;2009:13;2041:7;2034:14;;;;;:::i;2318:281:11:-;2232:4:0;2464:16;2232:4;2464:10;:16::i;:::-;-1:-1:-1;;;;;2459:21:11;::::1;;::::0;;;:10:::1;:21;::::0;;;;;::::1;;2458:22;2450:63;;;::::0;-1:-1:-1;;;2450:63:11;;9479:2:12;2450:63:11::1;::::0;::::1;9461:21:12::0;9518:2;9498:18;;;9491:30;9557;9537:18;;;9530:58;9605:18;;2450:63:11::1;9277:352:12::0;2450:63:11::1;-1:-1:-1::0;;;;;2523:21:11;::::1;;::::0;;;:10:::1;:21;::::0;;;;;;;:28;;-1:-1:-1;;2523:28:11::1;2547:4;2523:28;::::0;;2561:12:::1;:23:::0;;;;;:31:::1;2587:5:::0;2561:23;:31:::1;:::i;3296:178:3:-:0;3365:4;735:10:7;3419:27:3;735:10:7;3436:2:3;3440:5;3419:9;:27::i;4642:138:0:-;3875:7;3901:12;;;:6;:12;;;;;:22;;;2464:16;2475:4;2464:10;:16::i;:::-;4747:26:::1;4759:4;4765:7;4747:11;:26::i;8707:128:3:-:0;8791:37;8800:5;8807:7;8816:5;8823:4;8791:8;:37::i;10396:476::-;-1:-1:-1;;;;;3638:18:3;;;10495:24;3638:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10561:36:3;;10557:309;;;10636:5;10617:16;:24;10613:130;;;10668:60;;-1:-1:-1;;;10668:60:3;;-1:-1:-1;;;;;11978:32:12;;10668:60:3;;;11960:51:12;12027:18;;;12020:34;;;12070:18;;;12063:34;;;11933:18;;10668:60:3;11758:345:12;10613:130:3;10784:57;10793:5;10800:7;10828:5;10809:16;:24;10835:5;10784:8;:57::i;5374:300::-;-1:-1:-1;;;;;5457:18:3;;5453:86;;5498:30;;-1:-1:-1;;;5498:30:3;;5525:1;5498:30;;;12254:51:12;12227:18;;5498:30:3;12108:203:12;5453:86:3;-1:-1:-1;;;;;5552:16:3;;5548:86;;5591:32;;-1:-1:-1;;;5591:32:3;;5620:1;5591:32;;;12254:51:12;12227:18;;5591:32:3;12108:203:12;5548:86:3;5643:24;5651:4;5657:2;5661:5;5643:7;:24::i;3199:103:0:-;3265:30;3276:4;735:10:7;3265::0;:30::i;6179:316::-;6256:4;6277:22;6285:4;6291:7;6277;:22::i;:::-;6272:217;;6315:12;;;;:6;:12;;;;;;;;-1:-1:-1;;;;;6315:29:0;;;;;;;;;:36;;-1:-1:-1;;6315:36:0;6347:4;6315:36;;;6397:12;735:10:7;;656:96;6397:12:0;-1:-1:-1;;;;;6370:40:0;6388:7;-1:-1:-1;;;;;6370:40:0;6382:4;6370:40;;;;;;;;;;-1:-1:-1;6431:4:0;6424:11;;6272:217;-1:-1:-1;6473:5:0;6466:12;;6732:317;6810:4;6830:22;6838:4;6844:7;6830;:22::i;:::-;6826:217;;;6900:5;6868:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;6868:29:0;;;;;;;;;;:37;;-1:-1:-1;;6868:37:0;;;6924:40;735:10:7;;6868:12:0;;6924:40;;6900:5;6924:40;-1:-1:-1;6985:4:0;6978:11;;2586:117:8;1597:16;:14;:16::i;:::-;2644:7:::1;:15:::0;;-1:-1:-1;;2644:15:8::1;::::0;;2674:22:::1;735:10:7::0;2683:12:8::1;2674:22;::::0;-1:-1:-1;;;;;12272:32:12;;;12254:51;;12242:2;12227:18;2674:22:8::1;;;;;;;2586:117::o:0;7439:208:3:-;-1:-1:-1;;;;;7509:21:3;;7505:91;;7553:32;;-1:-1:-1;;;7553:32:3;;7582:1;7553:32;;;12254:51:12;12227:18;;7553:32:3;12108:203:12;7505:91:3;7605:35;7621:1;7625:7;7634:5;7605:7;:35::i;7965:206::-;-1:-1:-1;;;;;8035:21:3;;8031:89;;8079:30;;-1:-1:-1;;;8079:30:3;;8106:1;8079:30;;;12254:51:12;12227:18;;8079:30:3;12108:203:12;8031:89:3;8129:35;8137:7;8154:1;8158:5;8129:7;:35::i;2339:115:8:-;1350:19;:17;:19::i;:::-;2398:7:::1;:14:::0;;-1:-1:-1;;2398:14:8::1;2408:4;2398:14;::::0;;2427:20:::1;2434:12;735:10:7::0;;656:96;9682:432:3;-1:-1:-1;;;;;9794:19:3;;9790:89;;9836:32;;-1:-1:-1;;;9836:32:3;;9865:1;9836:32;;;12254:51:12;12227:18;;9836:32:3;12108:203:12;9790:89:3;-1:-1:-1;;;;;9892:21:3;;9888:90;;9936:31;;-1:-1:-1;;;9936:31:3;;9964:1;9936:31;;;12254:51:12;12227:18;;9936:31:3;12108:203:12;9888:90:3;-1:-1:-1;;;;;9987:18:3;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10032:76;;;;10082:7;-1:-1:-1;;;;;10066:31:3;10075:5;-1:-1:-1;;;;;10066:31:3;;10091:5;10066:31;;;;1658:25:12;;1646:2;1631:18;;1512:177;10066:31:3;;;;;;;;9682:432;;;;:::o;3942:217:11:-;1796:7:8;;;;4074:9:11;4066:45;;;;-1:-1:-1;;;4066:45:11;;12518:2:12;4066:45:11;;;12500:21:12;12557:2;12537:18;;;12530:30;12596:25;12576:18;;;12569:53;12639:18;;4066:45:11;12316:347:12;4066:45:11;4121:31;4135:4;4141:2;4145:6;4121:13;:31::i;3432:197:0:-;3520:22;3528:4;3534:7;3520;:22::i;:::-;3515:108;;3565:47;;-1:-1:-1;;;3565:47:0;;-1:-1:-1;;;;;12860:32:12;;3565:47:0;;;12842:51:12;12909:18;;;12902:34;;;12815:18;;3565:47:0;12668:274:12;2078:126:8;1796:7;;;;2136:62;;2172:15;;-1:-1:-1;;;2172:15:8;;;;;;;;;;;2136:62;2078:126::o;1878:128::-;1796:7;;;;1939:61;;;1974:15;;-1:-1:-1;;;1974:15:8;;;;;;;;;;;5989:1107:3;-1:-1:-1;;;;;6078:18:3;;6074:540;;6230:5;6214:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6074:540:3;;-1:-1:-1;6074:540:3;;-1:-1:-1;;;;;6288:15:3;;6266:19;6288:15;;;;;;;;;;;6321:19;;;6317:115;;;6367:50;;-1:-1:-1;;;6367:50:3;;-1:-1:-1;;;;;11978:32:12;;6367:50:3;;;11960:51:12;12027:18;;;12020:34;;;12070:18;;;12063:34;;;11933:18;;6367:50:3;11758:345:12;6317:115:3;-1:-1:-1;;;;;6552:15:3;;:9;:15;;;;;;;;;;6570:19;;;;6552:37;;6074:540;-1:-1:-1;;;;;6628:16:3;;6624:425;;6791:12;:21;;;;;;;6624:425;;;-1:-1:-1;;;;;7002:13:3;;:9;:13;;;;;;;;;;:22;;;;;;6624:425;7079:2;-1:-1:-1;;;;;7064:25:3;7073:4;-1:-1:-1;;;;;7064:25:3;;7083:5;7064:25;;;;1658::12;;1646:2;1631:18;;1512:177;7064:25:3;;;;;;;;5989:1107;;;:::o;14:286:12:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:12;;209:43;;199:71;;266:1;263;256:12;199:71;289:5;14:286;-1:-1:-1;;;14:286:12:o;497:527::-;646:2;635:9;628:21;609:4;678:6;672:13;721:6;716:2;705:9;701:18;694:34;746:1;756:140;770:6;767:1;764:13;756:140;;;881:2;865:14;;;861:23;;855:30;850:2;831:17;;;827:26;820:66;785:10;756:140;;;760:3;945:1;940:2;931:6;920:9;916:22;912:31;905:42;1015:2;1008;1004:7;999:2;991:6;987:15;983:29;972:9;968:45;964:54;956:62;;;497:527;;;;:::o;1029:173::-;1097:20;;-1:-1:-1;;;;;1146:31:12;;1136:42;;1126:70;;1192:1;1189;1182:12;1126:70;1029:173;;;:::o;1207:300::-;1275:6;1283;1336:2;1324:9;1315:7;1311:23;1307:32;1304:52;;;1352:1;1349;1342:12;1304:52;1375:29;1394:9;1375:29;:::i;:::-;1365:39;1473:2;1458:18;;;;1445:32;;-1:-1:-1;;;1207:300:12:o;1694:186::-;1753:6;1806:2;1794:9;1785:7;1781:23;1777:32;1774:52;;;1822:1;1819;1812:12;1774:52;1845:29;1864:9;1845:29;:::i;1885:374::-;1962:6;1970;1978;2031:2;2019:9;2010:7;2006:23;2002:32;1999:52;;;2047:1;2044;2037:12;1999:52;2070:29;2089:9;2070:29;:::i;:::-;2060:39;;2118:38;2152:2;2141:9;2137:18;2118:38;:::i;:::-;1885:374;;2108:48;;-1:-1:-1;;;2225:2:12;2210:18;;;;2197:32;;1885:374::o;2264:226::-;2323:6;2376:2;2364:9;2355:7;2351:23;2347:32;2344:52;;;2392:1;2389;2382:12;2344:52;-1:-1:-1;2437:23:12;;2264:226;-1:-1:-1;2264:226:12:o;2677:300::-;2745:6;2753;2806:2;2794:9;2785:7;2781:23;2777:32;2774:52;;;2822:1;2819;2812:12;2774:52;2867:23;;;-1:-1:-1;2933:38:12;2967:2;2952:18;;2933:38;:::i;:::-;2923:48;;2677:300;;;;;:::o;3402:127::-;3463:10;3458:3;3454:20;3451:1;3444:31;3494:4;3491:1;3484:15;3518:4;3515:1;3508:15;3534:1019;3612:6;3620;3673:2;3661:9;3652:7;3648:23;3644:32;3641:52;;;3689:1;3686;3679:12;3641:52;3712:29;3731:9;3712:29;:::i;:::-;3702:39;;3792:2;3781:9;3777:18;3764:32;3819:18;3811:6;3808:30;3805:50;;;3851:1;3848;3841:12;3805:50;3874:22;;3927:4;3919:13;;3915:27;-1:-1:-1;3905:55:12;;3956:1;3953;3946:12;3905:55;3996:2;3983:16;4022:18;4014:6;4011:30;4008:56;;;4044:18;;:::i;:::-;4093:2;4087:9;4185:2;4147:17;;-1:-1:-1;;4143:31:12;;;4176:2;4139:40;4135:54;4123:67;;4220:18;4205:34;;4241:22;;;4202:62;4199:88;;;4267:18;;:::i;:::-;4303:2;4296:22;4327;;;4368:15;;;4385:2;4364:24;4361:37;-1:-1:-1;4358:57:12;;;4411:1;4408;4401:12;4358:57;4467:6;4462:2;4458;4454:11;4449:2;4441:6;4437:15;4424:50;4520:1;4515:2;4506:6;4498;4494:19;4490:28;4483:39;4541:6;4531:16;;;;;3534:1019;;;;;:::o;4558:260::-;4626:6;4634;4687:2;4675:9;4666:7;4662:23;4658:32;4655:52;;;4703:1;4700;4693:12;4655:52;4726:29;4745:9;4726:29;:::i;:::-;4716:39;;4774:38;4808:2;4797:9;4793:18;4774:38;:::i;4823:380::-;4902:1;4898:12;;;;4945;;;4966:61;;5020:4;5012:6;5008:17;4998:27;;4966:61;5073:2;5065:6;5062:14;5042:18;5039:38;5036:161;;5119:10;5114:3;5110:20;5107:1;5100:31;5154:4;5151:1;5144:15;5182:4;5179:1;5172:15;5036:161;;4823:380;;;:::o;5569:127::-;5630:10;5625:3;5621:20;5618:1;5611:31;5661:4;5658:1;5651:15;5685:4;5682:1;5675:15;5701:375;5789:1;5807:5;5821:249;5842:1;5832:8;5829:15;5821:249;;;5892:4;5887:3;5883:14;5877:4;5874:24;5871:50;;;5901:18;;:::i;:::-;5951:1;5941:8;5937:16;5934:49;;;5965:16;;;;5934:49;6048:1;6044:16;;;;;6004:15;;5821:249;;;5701:375;;;;;;:::o;6081:902::-;6130:5;6160:8;6150:80;;-1:-1:-1;6201:1:12;6215:5;;6150:80;6249:4;6239:76;;-1:-1:-1;6286:1:12;6300:5;;6239:76;6331:4;6349:1;6344:59;;;;6417:1;6412:174;;;;6324:262;;6344:59;6374:1;6365:10;;6388:5;;;6412:174;6449:3;6439:8;6436:17;6433:43;;;6456:18;;:::i;:::-;-1:-1:-1;;6512:1:12;6498:16;;6571:5;;6324:262;;6670:2;6660:8;6657:16;6651:3;6645:4;6642:13;6638:36;6632:2;6622:8;6619:16;6614:2;6608:4;6605:12;6601:35;6598:77;6595:203;;;-1:-1:-1;6707:19:12;;;6783:5;;6595:203;6830:42;-1:-1:-1;;6855:8:12;6849:4;6830:42;:::i;:::-;6908:6;6904:1;6900:6;6896:19;6887:7;6884:32;6881:58;;;6919:18;;:::i;:::-;6957:20;;6081:902;-1:-1:-1;;;6081:902:12:o;6988:140::-;7046:5;7075:47;7116:4;7106:8;7102:19;7096:4;7075:47;:::i;7133:168::-;7206:9;;;7237;;7254:15;;;7248:22;;7234:37;7224:71;;7275:18;;:::i;7306:125::-;7371:9;;;7392:10;;;7389:36;;;7405:18;;:::i;8922:217::-;8962:1;8988;8978:132;;9032:10;9027:3;9023:20;9020:1;9013:31;9067:4;9064:1;9057:15;9095:4;9092:1;9085:15;8978:132;-1:-1:-1;9124:9:12;;8922:217::o;9144:128::-;9211:9;;;9232:11;;;9229:37;;;9246:18;;:::i;9760:518::-;9862:2;9857:3;9854:11;9851:421;;;9898:5;9895:1;9888:16;9942:4;9939:1;9929:18;10012:2;10000:10;9996:19;9993:1;9989:27;9983:4;9979:38;10048:4;10036:10;10033:20;10030:47;;;-1:-1:-1;10071:4:12;10030:47;10126:2;10121:3;10117:12;10114:1;10110:20;10104:4;10100:31;10090:41;;10181:81;10199:2;10192:5;10189:13;10181:81;;;10258:1;10244:16;;10225:1;10214:13;10181:81;;;10185:3;;9760:518;;;:::o;10454:1299::-;10580:3;10574:10;10607:18;10599:6;10596:30;10593:56;;;10629:18;;:::i;:::-;10658:97;10748:6;10708:38;10740:4;10734:11;10708:38;:::i;:::-;10702:4;10658:97;:::i;:::-;10804:4;10835:2;10824:14;;10852:1;10847:649;;;;11540:1;11557:6;11554:89;;;-1:-1:-1;11609:19:12;;;11603:26;11554:89;-1:-1:-1;;10411:1:12;10407:11;;;10403:24;10399:29;10389:40;10435:1;10431:11;;;10386:57;11656:81;;10817:930;;10847:649;9707:1;9700:14;;;9744:4;9731:18;;-1:-1:-1;;10883:20:12;;;11001:222;11015:7;11012:1;11009:14;11001:222;;;11097:19;;;11091:26;11076:42;;11204:4;11189:20;;;;11157:1;11145:14;;;;11031:12;11001:222;;;11005:3;11251:6;11242:7;11239:19;11236:201;;;11312:19;;;11306:26;-1:-1:-1;;11395:1:12;11391:14;;;11407:3;11387:24;11383:37;11379:42;11364:58;11349:74;;11236:201;-1:-1:-1;;;;11483:1:12;11467:14;;;11463:22;11450:36;;-1:-1:-1;10454:1299:12:o"
            },
            "methodIdentifiers": {
              "DEFAULT_ADMIN_ROLE()": "a217fddf",
              "MINTER_ROLE()": "d5391393",
              "PAUSER_ROLE()": "e63ab1e9",
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "burn(uint256)": "42966c68",
              "burnFrom(address,uint256)": "79cc6790",
              "cashbackPercentage()": "1c9cef04",
              "dailySpendingLimit(address)": "257caf9e",
              "decimals()": "313ce567",
              "getRoleAdmin(bytes32)": "248a9ca3",
              "grantRole(bytes32,address)": "2f2ff15d",
              "hasRole(bytes32,address)": "91d14854",
              "isMerchant(address)": "1a2f7167",
              "lastSpendingReset(address)": "251de801",
              "merchantName(address)": "60caa609",
              "mint(address,uint256)": "40c10f19",
              "name()": "06fdde03",
              "pause()": "8456cb59",
              "paused()": "5c975abb",
              "registerMerchant(address,string)": "a6c8a384",
              "renounceRole(bytes32,address)": "36568abe",
              "revokeRole(bytes32,address)": "d547741f",
              "setDailyLimit(address,uint256)": "2803212f",
              "spentToday(address)": "8aeac501",
              "supportsInterface(bytes4)": "01ffc9a7",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd",
              "transferWithCashback(address,uint256)": "5cc18e2f",
              "transferWithLimit(address,uint256)": "22083bd0",
              "unpause()": "3f4ba83a"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_initialSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAUSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cashbackPercentage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"dailySpendingLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isMerchant\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lastSpendingReset\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"merchantName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_merchant\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"registerMerchant\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_student\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_limit\",\"type\":\"uint256\"}],\"name\":\"setDailyLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"spentToday\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_merchant\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferWithCashback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferWithLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-20 token for transaction on campus\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"mint(address,uint256)\":{\"details\":\"Mint new tokens. Use case: Top-up student balance.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"pause()\":{\"details\":\"Pause all token transfers Use case: Emergency / maintenance\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"registerMerchant(address,string)\":{\"details\":\"Register merchant. Use case: Kafetaria, Bookstore, Laundry.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"setDailyLimit(address,uint256)\":{\"details\":\"Set daily spending limit for student. Use case: Parental control / self-control.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferWithLimit(address,uint256)\":{\"details\":\"Transfer with spending limit check.\"}},\"stateVariables\":{\"cashbackPercentage\":{\"details\":\"Cashback mechanism to encourage usage.\"}},\"title\":\"CampusCredit\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/CampusCredit.sol\":\"CampusCredit\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.3.0) (access/AccessControl.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IAccessControl} from \\\"./IAccessControl.sol\\\";\\nimport {Context} from \\\"../utils/Context.sol\\\";\\nimport {ERC165} from \\\"../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Contract module that allows children to implement role-based access\\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\\n * members except through off-chain means by accessing the contract event logs. Some\\n * applications may benefit from on-chain enumerability, for those cases see\\n * {AccessControlEnumerable}.\\n *\\n * Roles are referred to by their `bytes32` identifier. These should be exposed\\n * in the external API and be unique. The best way to achieve this is by\\n * using `public constant` hash digests:\\n *\\n * ```solidity\\n * bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\");\\n * ```\\n *\\n * Roles can be used to represent a set of permissions. To restrict access to a\\n * function call, use {hasRole}:\\n *\\n * ```solidity\\n * function foo() public {\\n *     require(hasRole(MY_ROLE, msg.sender));\\n *     ...\\n * }\\n * ```\\n *\\n * Roles can be granted and revoked dynamically via the {grantRole} and\\n * {revokeRole} functions. Each role has an associated admin role, and only\\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\\n *\\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\\n * that only accounts with this role will be able to grant or revoke other\\n * roles. More complex role relationships can be created by using\\n * {_setRoleAdmin}.\\n *\\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\\n * grant and revoke this role. Extra precautions should be taken to secure\\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\\n * to enforce additional security measures for this role.\\n */\\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\\n    struct RoleData {\\n        mapping(address account => bool) hasRole;\\n        bytes32 adminRole;\\n    }\\n\\n    mapping(bytes32 role => RoleData) private _roles;\\n\\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\\n\\n    /**\\n     * @dev Modifier that checks that an account has a specific role. Reverts\\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\\n     */\\n    modifier onlyRole(bytes32 role) {\\n        _checkRole(role);\\n        _;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\\n        return _roles[role].hasRole[account];\\n    }\\n\\n    /**\\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\\n     */\\n    function _checkRole(bytes32 role) internal view virtual {\\n        _checkRole(role, _msgSender());\\n    }\\n\\n    /**\\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\\n     * is missing `role`.\\n     */\\n    function _checkRole(bytes32 role, address account) internal view virtual {\\n        if (!hasRole(role, account)) {\\n            revert AccessControlUnauthorizedAccount(account, role);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\\n        return _roles[role].adminRole;\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     *\\n     * May emit a {RoleGranted} event.\\n     */\\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `callerConfirmation`.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\\n        if (callerConfirmation != _msgSender()) {\\n            revert AccessControlBadConfirmation();\\n        }\\n\\n        _revokeRole(role, callerConfirmation);\\n    }\\n\\n    /**\\n     * @dev Sets `adminRole` as ``role``'s admin role.\\n     *\\n     * Emits a {RoleAdminChanged} event.\\n     */\\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\\n        bytes32 previousAdminRole = getRoleAdmin(role);\\n        _roles[role].adminRole = adminRole;\\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\\n    }\\n\\n    /**\\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\\n     *\\n     * Internal function without access restriction.\\n     *\\n     * May emit a {RoleGranted} event.\\n     */\\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\\n        if (!hasRole(role, account)) {\\n            _roles[role].hasRole[account] = true;\\n            emit RoleGranted(role, account, _msgSender());\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\\n     *\\n     * Internal function without access restriction.\\n     *\\n     * May emit a {RoleRevoked} event.\\n     */\\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\\n        if (hasRole(role, account)) {\\n            _roles[role].hasRole[account] = false;\\n            emit RoleRevoked(role, account, _msgSender());\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc1bebdee8943bd5e9ef1e0f2e63296aa1dd4171a66b9e74d0286220e891e1458\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.3.0) (access/IAccessControl.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev External interface of AccessControl declared to support ERC-165 detection.\\n */\\ninterface IAccessControl {\\n    /**\\n     * @dev The `account` is missing a role.\\n     */\\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\\n\\n    /**\\n     * @dev The caller of a function is not the expected one.\\n     *\\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\\n     */\\n    error AccessControlBadConfirmation();\\n\\n    /**\\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\\n     *\\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\\n     * {RoleAdminChanged} not being emitted to signal this.\\n     */\\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\\n\\n    /**\\n     * @dev Emitted when `account` is granted `role`.\\n     *\\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\\n     */\\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Emitted when `account` is revoked `role`.\\n     *\\n     * `sender` is the account that originated the contract call:\\n     *   - if using `revokeRole`, it is the admin role bearer\\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\\n     */\\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) external view returns (bool);\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function grantRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function revokeRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `callerConfirmation`.\\n     */\\n    function renounceRole(bytes32 role, address callerConfirmation) external;\\n}\\n\",\"keccak256\":\"0x4d9a2b261b56a1e4a37bb038151dec98b952fed16de2bdfdda27e38e2b12b530\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Standard ERC-20 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\\n */\\ninterface IERC20Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC20InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC20InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\\n     * @param needed Minimum amount required to perform a transfer.\\n     */\\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC20InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC20InvalidSpender(address spender);\\n}\\n\\n/**\\n * @dev Standard ERC-721 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\\n */\\ninterface IERC721Errors {\\n    /**\\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\\n     * Used in balance queries.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721InvalidOwner(address owner);\\n\\n    /**\\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721NonexistentToken(uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param tokenId Identifier number of a token.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC721InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC721InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC721InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC721InvalidOperator(address operator);\\n}\\n\\n/**\\n * @dev Standard ERC-1155 Errors\\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\\n */\\ninterface IERC1155Errors {\\n    /**\\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     * @param balance Current balance for the interacting account.\\n     * @param needed Minimum amount required to perform a transfer.\\n     * @param tokenId Identifier number of a token.\\n     */\\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\\n\\n    /**\\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\\n     * @param sender Address whose tokens are being transferred.\\n     */\\n    error ERC1155InvalidSender(address sender);\\n\\n    /**\\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\\n     * @param receiver Address to which tokens are being transferred.\\n     */\\n    error ERC1155InvalidReceiver(address receiver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     * @param owner Address of the current owner of a token.\\n     */\\n    error ERC1155MissingApprovalForAll(address operator, address owner);\\n\\n    /**\\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\\n     * @param approver Address initiating an approval operation.\\n     */\\n    error ERC1155InvalidApprover(address approver);\\n\\n    /**\\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\\n     */\\n    error ERC1155InvalidOperator(address operator);\\n\\n    /**\\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\\n     * Used in batch transfers.\\n     * @param idsLength Length of the array of token identifiers\\n     * @param valuesLength Length of the array of token amounts\\n     */\\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\\n}\\n\",\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/ERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"./IERC20.sol\\\";\\nimport {IERC20Metadata} from \\\"./extensions/IERC20Metadata.sol\\\";\\nimport {Context} from \\\"../../utils/Context.sol\\\";\\nimport {IERC20Errors} from \\\"../../interfaces/draft-IERC6093.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * The default value of {decimals} is 18. To change this, you should override\\n * this function so it returns a different value.\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC-20\\n * applications.\\n */\\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\\n    mapping(address account => uint256) private _balances;\\n\\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * Both values are immutable: they can only be set once during construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the default value returned by this function, unless\\n     * it's overridden.\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - the caller must have a balance of at least `value`.\\n     */\\n    function transfer(address to, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _transfer(owner, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 value) public virtual returns (bool) {\\n        address owner = _msgSender();\\n        _approve(owner, spender, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\\n     *\\n     * NOTE: Does not update the allowance if the current allowance\\n     * is the maximum `uint256`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` and `to` cannot be the zero address.\\n     * - `from` must have a balance of at least `value`.\\n     * - the caller must have allowance for ``from``'s tokens of at least\\n     * `value`.\\n     */\\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\\n        address spender = _msgSender();\\n        _spendAllowance(from, spender, value);\\n        _transfer(from, to, value);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _transfer(address from, address to, uint256 value) internal {\\n        if (from == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        if (to == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\\n     * this function.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _update(address from, address to, uint256 value) internal virtual {\\n        if (from == address(0)) {\\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\\n            _totalSupply += value;\\n        } else {\\n            uint256 fromBalance = _balances[from];\\n            if (fromBalance < value) {\\n                revert ERC20InsufficientBalance(from, fromBalance, value);\\n            }\\n            unchecked {\\n                // Overflow not possible: value <= fromBalance <= totalSupply.\\n                _balances[from] = fromBalance - value;\\n            }\\n        }\\n\\n        if (to == address(0)) {\\n            unchecked {\\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\\n                _totalSupply -= value;\\n            }\\n        } else {\\n            unchecked {\\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\\n                _balances[to] += value;\\n            }\\n        }\\n\\n        emit Transfer(from, to, value);\\n    }\\n\\n    /**\\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\\n     * Relies on the `_update` mechanism\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\\n     */\\n    function _mint(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidReceiver(address(0));\\n        }\\n        _update(address(0), account, value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\\n     * Relies on the `_update` mechanism.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * NOTE: This function is not virtual, {_update} should be overridden instead\\n     */\\n    function _burn(address account, uint256 value) internal {\\n        if (account == address(0)) {\\n            revert ERC20InvalidSender(address(0));\\n        }\\n        _update(account, address(0), value);\\n    }\\n\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     *\\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\\n     */\\n    function _approve(address owner, address spender, uint256 value) internal {\\n        _approve(owner, spender, value, true);\\n    }\\n\\n    /**\\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\\n     *\\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\\n     * `Approval` event during `transferFrom` operations.\\n     *\\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\\n     * true using the following override:\\n     *\\n     * ```solidity\\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\\n     *     super._approve(owner, spender, value, true);\\n     * }\\n     * ```\\n     *\\n     * Requirements are the same as {_approve}.\\n     */\\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\\n        if (owner == address(0)) {\\n            revert ERC20InvalidApprover(address(0));\\n        }\\n        if (spender == address(0)) {\\n            revert ERC20InvalidSpender(address(0));\\n        }\\n        _allowances[owner][spender] = value;\\n        if (emitEvent) {\\n            emit Approval(owner, spender, value);\\n        }\\n    }\\n\\n    /**\\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\\n     *\\n     * Does not update the allowance value in case of infinite allowance.\\n     * Revert if not enough allowance is available.\\n     *\\n     * Does not emit an {Approval} event.\\n     */\\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\\n        uint256 currentAllowance = allowance(owner, spender);\\n        if (currentAllowance < type(uint256).max) {\\n            if (currentAllowance < value) {\\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\\n            }\\n            unchecked {\\n                _approve(owner, spender, currentAllowance - value, false);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x41f6b3b9e030561e7896dbef372b499cc8d418a80c3884a4d65a68f2fdc7493a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-20 standard as defined in the ERC.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Burnable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {ERC20} from \\\"../ERC20.sol\\\";\\nimport {Context} from \\\"../../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\\n * tokens and those that they have an allowance for, in a way that can be\\n * recognized off-chain (via event analysis).\\n */\\nabstract contract ERC20Burnable is Context, ERC20 {\\n    /**\\n     * @dev Destroys a `value` amount of tokens from the caller.\\n     *\\n     * See {ERC20-_burn}.\\n     */\\n    function burn(uint256 value) public virtual {\\n        _burn(_msgSender(), value);\\n    }\\n\\n    /**\\n     * @dev Destroys a `value` amount of tokens from `account`, deducting from\\n     * the caller's allowance.\\n     *\\n     * See {ERC20-_burn} and {ERC20-allowance}.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have allowance for ``accounts``'s tokens of at least\\n     * `value`.\\n     */\\n    function burnFrom(address account, uint256 value) public virtual {\\n        _spendAllowance(account, _msgSender(), value);\\n        _burn(account, value);\\n    }\\n}\\n\",\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC20} from \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Pausable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract Pausable is Context {\\n    bool private _paused;\\n\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    /**\\n     * @dev The operation failed because the contract is paused.\\n     */\\n    error EnforcedPause();\\n\\n    /**\\n     * @dev The operation failed because the contract is not paused.\\n     */\\n    error ExpectedPause();\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        _requireNotPaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        _requirePaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is paused.\\n     */\\n    function _requireNotPaused() internal view virtual {\\n        if (paused()) {\\n            revert EnforcedPause();\\n        }\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is not paused.\\n     */\\n    function _requirePaused() internal view virtual {\\n        if (!paused()) {\\n            revert ExpectedPause();\\n        }\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n}\\n\",\"keccak256\":\"0xdb484371dfbb848cb6f5d70464e9ac9b2900e4164ead76bbce4fef0b44bcc68f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {IERC165} from \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\"},\"contracts/CampusCredit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.26;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Pausable.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/AccessControl.sol\\\";\\n\\n/**\\n * @title CampusCredit\\n * @dev ERC-20 token for transaction on campus\\n */\\ncontract CampusCredit is ERC20, ERC20Burnable, Pausable, AccessControl {\\n    // Role Definitions\\n    bytes32 public constant PAUSER_ROLE = keccak256(\\\"PAUSER_ROLE\\\");\\n    bytes32 public constant MINTER_ROLE = keccak256(\\\"MINTER_ROLE\\\");\\n\\n    // [Feature]: Credits\\n    mapping(address => uint256) public dailySpendingLimit;\\n    mapping(address => uint256) public lastSpendingReset;\\n    mapping(address => uint256) public spentToday;\\n\\n    // [Feature]: Merchants\\n    mapping(address => bool) public isMerchant;\\n    mapping(address => string) public merchantName;\\n\\n    constructor(uint256 _initialSupply) ERC20(\\\"Campus Credit\\\", \\\"CCR\\\") {\\n        _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\\n        _grantRole(PAUSER_ROLE, msg.sender);\\n        _grantRole(MINTER_ROLE, msg.sender);\\n\\n        // Initial treasury minting (n CCR).\\n        _mint(msg.sender, _initialSupply * 10**decimals());\\n    }\\n\\n    /**\\n     * @dev Pause all token transfers\\n     * Use case: Emergency / maintenance\\n     */\\n    function pause() public onlyRole(PAUSER_ROLE) {\\n        _pause();\\n    }\\n\\n    function unpause() public onlyRole(PAUSER_ROLE) {\\n        _unpause();\\n    }\\n\\n    /**\\n     * @dev Mint new tokens.\\n     * Use case: Top-up student balance.\\n     */\\n    function mint(address _to, uint256 _amount) public onlyRole(MINTER_ROLE) {\\n        uint256 amount = _amount * 10**decimals();\\n\\n        // @dev Minting limits (if the student daily spending limit has been set).\\n        // Students will receive a number of CCR according to their remaining daily limit.\\n        if (dailySpendingLimit[_to] > 0) {\\n            require(\\n                spentToday[_to] + amount <= dailySpendingLimit[_to],\\n                \\\"Exceeds daily spending limit, can't receive extra CCR.\\\"\\n            );\\n        }\\n\\n        dailySpendingLimit[_to] += amount;\\n        _mint(_to, amount);\\n    }\\n\\n    /**\\n     * @dev Register merchant.\\n     * Use case: Kafetaria, Bookstore, Laundry.\\n     */\\n    function registerMerchant(address _merchant, string memory _name)\\n        public\\n        onlyRole(DEFAULT_ADMIN_ROLE)\\n    {\\n        require(!isMerchant[_merchant], \\\"Merchant already registered.\\\");\\n        isMerchant[_merchant] = true;\\n        merchantName[_merchant] = _name;\\n    }\\n\\n    /**\\n     * @dev Set daily spending limit for student.\\n     * Use case: Parental control / self-control.\\n     */\\n    function setDailyLimit(address _student, uint256 _limit)\\n        public\\n        onlyRole(DEFAULT_ADMIN_ROLE)\\n    {\\n        uint256 limit = _limit * 10**decimals();\\n\\n        require(limit > 0, \\\"Limit should be greater than 0.\\\");\\n        dailySpendingLimit[_student] = limit;\\n    }\\n\\n    /**\\n     * @dev Transfer with spending limit check.\\n     */\\n    function transferWithLimit(address _to, uint256 _amount) public {\\n        require(_amount > 0, \\\"Amount should be greater than 0.\\\");\\n        uint256 amount = _amount * 10**decimals();\\n\\n        // Ensure the transfer amount not exceed the daily spending limit.\\n        require(\\n            spentToday[msg.sender] + amount <= dailySpendingLimit[msg.sender],\\n            \\\"Exceeds daily spending limit.\\\"\\n        );\\n\\n        // Reset today's spending if today is new day.\\n        if (block.timestamp > lastSpendingReset[msg.sender] + 1 days) {\\n            lastSpendingReset[msg.sender] = block.timestamp;\\n            spentToday[msg.sender] = 0;\\n        }\\n\\n        // Update today's spending.\\n        spentToday[msg.sender] += amount;\\n\\n        // Transfer to desired address.\\n        bool success = transfer(_to, amount);\\n        require(success, \\\"Transfer failed.\\\");\\n    }\\n\\n    function _update(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal override(ERC20) {\\n        require(!paused(), \\\"Token transfers paused.\\\");\\n        super._update(from, to, amount);\\n    }\\n\\n    /**\\n     * @dev Cashback mechanism to encourage usage.\\n     */\\n    uint256 public cashbackPercentage = 2; // Cashback is set to 2%.\\n\\n    function transferWithCashback(address _merchant, uint256 _amount) public {\\n        require(_amount > 0, \\\"Amount should be greater than 0.\\\");\\n        \\n        // Cashback calculation.\\n        uint256 cashback = (_amount * cashbackPercentage) / 100;\\n\\n        // Transfer to desired address.\\n        transferWithLimit(_merchant, _amount - cashback);\\n\\n        // Get the cashback.\\n        _mint(msg.sender, cashback * 10**decimals());\\n    }\\n}\\n\",\"keccak256\":\"0xf66e6ce9c658e31ae097be03bf0c0b734bafeee00b8674b9a8726641e44fa8c6\",\"license\":\"MIT\"}},\"version\":1}"
        }
      }
    }
  }
}